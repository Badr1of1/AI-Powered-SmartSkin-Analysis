/*! For license information please see orbo-conscious-chemist-smart-capture.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.OrboSmartCapture=t():e.OrboSmartCapture=t()}(self,(()=>(()=>{var e={238:e=>{var t,n=(t="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(e){var n,r;(e=e||{})||(e=void 0!==e?e:{}),e.ready=new Promise((function(e,t){n=e,r=t}));var a,s={};for(a in e)e.hasOwnProperty(a)&&(s[a]=e[a]);var i=[],o="./this.program",u="";"undefined"!=typeof document&&document.currentScript&&(u=document.currentScript.src),t&&(u=t),u=0!==u.indexOf("blob:")?u.substr(0,u.lastIndexOf("/")+1):"";var l,c,d=e.print||console.log.bind(console),p=e.printErr||console.warn.bind(console);for(a in s)s.hasOwnProperty(a)&&(e[a]=s[a]);s=null,e.arguments&&(i=e.arguments),e.thisProgram&&(o=e.thisProgram),e.quit&&e.quit,e.wasmBinary&&(l=e.wasmBinary),e.noExitRuntime,"object"!=typeof WebAssembly&&G("no native wasm support detected");var h=!1,f="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function m(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&f)return f.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function g(e,t){return e?m(v,e,t):""}function y(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function b(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}var x,w,v,k,I,N,S,T,C,$="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function _(e,t){for(var n=e,r=n>>1,a=r+t/2;!(r>=a)&&I[r];)++r;if((n=r<<1)-e>32&&$)return $.decode(v.subarray(e,n));for(var s="",i=0;!(i>=t/2);++i){var o=k[e+2*i>>1];if(0==o)break;s+=String.fromCharCode(o)}return s}function E(e,t,n){if(void 0===n&&(n=2147483647),n<2)return 0;for(var r=t,a=(n-=2)<2*e.length?n/2:e.length,s=0;s<a;++s){var i=e.charCodeAt(s);k[t>>1]=i,t+=2}return k[t>>1]=0,t-r}function A(e){return 2*e.length}function R(e,t){for(var n=0,r="";!(n>=t/4);){var a=N[e+4*n>>2];if(0==a)break;if(++n,a>=65536){var s=a-65536;r+=String.fromCharCode(55296|s>>10,56320|1023&s)}else r+=String.fromCharCode(a)}return r}function F(e,t,n){if(void 0===n&&(n=2147483647),n<4)return 0;for(var r=t,a=r+n-4,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),N[t>>2]=i,(t+=4)+4>a)break}return N[t>>2]=0,t-r}function D(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&++n,t+=4}return t}function O(t){x=t,e.HEAP8=w=new Int8Array(t),e.HEAP16=k=new Int16Array(t),e.HEAP32=N=new Int32Array(t),e.HEAPU8=v=new Uint8Array(t),e.HEAPU16=I=new Uint16Array(t),e.HEAPU32=S=new Uint32Array(t),e.HEAPF32=T=new Float32Array(t),e.HEAPF64=C=new Float64Array(t)}e.INITIAL_MEMORY;var M,L=[],z=[],P=[],B=[];z.push({func:function(){Me()}});var W=0,V=null,U=null;function G(t){e.onAbort&&e.onAbort(t),p(t+=""),h=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.";var n=new WebAssembly.RuntimeError(t);throw r(n),n}function H(e){return t=e,n="data:application/octet-stream;base64,",String.prototype.startsWith?t.startsWith(n):0===t.indexOf(n);var t,n}e.preloadedImages={},e.preloadedAudios={};var j,q="orbo-conscious-chemist-smart-capture.wasm";function K(e){try{if(e==q&&l)return new Uint8Array(l);throw"both async and sync fetching of the wasm failed"}catch(e){G(e)}}function X(t){for(;t.length>0;){var n=t.shift();if("function"!=typeof n){var r=n.func;"number"==typeof r?void 0===n.arg?M.get(r)():M.get(r)(n.arg):r(void 0===n.arg?null:n.arg)}else n(e)}}H(q)||(j=q,q=e.locateFile?e.locateFile(j,u):u+j);function Y(e){this.excPtr=e,this.ptr=e-16,this.set_type=function(e){N[this.ptr+8>>2]=e},this.get_type=function(){return N[this.ptr+8>>2]},this.set_destructor=function(e){N[this.ptr+0>>2]=e},this.get_destructor=function(){return N[this.ptr+0>>2]},this.set_refcount=function(e){N[this.ptr+4>>2]=e},this.set_caught=function(e){e=e?1:0,w[this.ptr+12|0]=e},this.get_caught=function(){return 0!=w[this.ptr+12|0]},this.set_rethrown=function(e){e=e?1:0,w[this.ptr+13|0]=e},this.get_rethrown=function(){return 0!=w[this.ptr+13|0]},this.init=function(e,t){this.set_type(e),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var e=N[this.ptr+4>>2];N[this.ptr+4>>2]=e+1},this.release_ref=function(){var e=N[this.ptr+4>>2];return N[this.ptr+4>>2]=e-1,1===e}}var Z={};function J(e){for(;e.length;){var t=e.pop();e.pop()(t)}}function Q(e){return this.fromWireType(S[e>>2])}var ee={},te={},ne={};function re(e){if(void 0===e)return"_unknown";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return t>=48&&t<=57?"_"+e:e}function ae(e,t){return e=re(e),new Function("body","return function "+e+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t)}function se(e,t){var n=ae(t,(function(e){this.name=t,this.message=e;var n=new Error(e).stack;void 0!==n&&(this.stack=this.toString()+"\n"+n.replace(/^Error(:[^\n]*)?\n/,""))}));return n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},n}var ie=void 0;function oe(e){throw new ie(e)}function ue(e,t,n){function r(t){var r=n(t);r.length!==e.length&&oe("Mismatched type converter count");for(var a=0;a<e.length;++a)fe(e[a],r[a])}e.forEach((function(e){ne[e]=t}));var a=new Array(t.length),s=[],i=0;t.forEach((function(e,t){te.hasOwnProperty(e)?a[t]=te[e]:(s.push(e),ee.hasOwnProperty(e)||(ee[e]=[]),ee[e].push((function(){a[t]=te[e],++i===s.length&&r(a)})))})),0===s.length&&r(a)}function le(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+e)}}var ce=void 0;function de(e){for(var t="",n=e;v[n];)t+=ce[v[n++]];return t}var pe=void 0;function he(e){throw new pe(e)}function fe(e,t,n){if(n=n||{},!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");var r=t.name;if(e||he('type "'+r+'" must have a positive integer typeid pointer'),te.hasOwnProperty(e)){if(n.ignoreDuplicateRegistrations)return;he("Cannot register type '"+r+"' twice")}if(te[e]=t,delete ne[e],ee.hasOwnProperty(e)){var a=ee[e];delete ee[e],a.forEach((function(e){e()}))}}var me=[],ge=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function ye(e){e>4&&0==--ge[e].refcount&&(ge[e]=void 0,me.push(e))}function be(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=me.length?me.pop():ge.length;return ge[t]={refcount:1,value:e},t}}function xe(e){if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e}function we(e,t){switch(t){case 2:return function(e){return this.fromWireType(T[e>>2])};case 3:return function(e){return this.fromWireType(C[e>>3])};default:throw new TypeError("Unknown float type: "+e)}}function ve(t,n){var r,a,s,i=-1!=(t=de(t)).indexOf("j")?(r=t,a=n,s=[],function(){s.length=arguments.length;for(var t=0;t<arguments.length;t++)s[t]=arguments[t];return function(t,n,r){return-1!=t.indexOf("j")?function(t,n,r){var a=e["dynCall_"+t];return r&&r.length?a.apply(null,[n].concat(r)):a.call(null,n)}(t,n,r):M.get(n).apply(null,r)}(r,a,s)}):M.get(n);return"function"!=typeof i&&he("unknown function pointer with signature "+t+": "+n),i}var ke=void 0;function Ie(e){var t=Pe(e),n=de(t);return ze(t),n}function Ne(e,t,n){switch(t){case 0:return n?function(e){return w[e]}:function(e){return v[e]};case 1:return n?function(e){return k[e>>1]}:function(e){return I[e>>1]};case 2:return n?function(e){return N[e>>2]}:function(e){return S[e>>2]};default:throw new TypeError("Unknown integer type: "+e)}}function Se(e){try{return c.grow(e-x.byteLength+65535>>>16),O(c.buffer),1}catch(e){}}var Te={};function Ce(){if(!Ce.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:o||"./this.program"};for(var t in Te)e[t]=Te[t];var n=[];for(var t in e)n.push(t+"="+e[t]);Ce.strings=n}return Ce.strings}var $e={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$e.buffers[e];0===t||10===t?((1===e?d:p)(m(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $e.varargs+=4,N[$e.varargs-4>>2]},getStr:function(e){return g(e)},get64:function(e,t){return e}};function _e(e){return e%4==0&&(e%100!=0||e%400==0)}function Ee(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ae=[31,29,31,30,31,30,31,31,30,31,30,31],Re=[31,28,31,30,31,30,31,31,30,31,30,31];function Fe(e,t){for(var n=new Date(e.getTime());t>0;){var r=_e(n.getFullYear()),a=n.getMonth(),s=(r?Ae:Re)[a];if(!(t>s-n.getDate()))return n.setDate(n.getDate()+t),n;t-=s-n.getDate()+1,n.setDate(1),a<11?n.setMonth(a+1):(n.setMonth(0),n.setFullYear(n.getFullYear()+1))}return n}ie=e.InternalError=se(Error,"InternalError"),function(){for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);ce=e}(),pe=e.BindingError=se(Error,"BindingError"),e.count_emval_handles=function(){for(var e=0,t=5;t<ge.length;++t)void 0!==ge[t]&&++e;return e},e.get_first_emval=function(){for(var e=5;e<ge.length;++e)if(void 0!==ge[e])return ge[e];return null},ke=e.UnboundTypeError=se(Error,"UnboundTypeError");var De,Oe={f:function(e){return Le(e+16)+16},e:function(e,t,n){throw new Y(e).init(t,n),e},q:function(e){var t=Z[e];delete Z[e];var n=t.rawConstructor,r=t.rawDestructor,a=t.fields;ue([e],a.map((function(e){return e.getterReturnType})).concat(a.map((function(e){return e.setterArgumentType}))),(function(e){var s={};return a.forEach((function(t,n){var r=t.fieldName,i=e[n],o=t.getter,u=t.getterContext,l=e[n+a.length],c=t.setter,d=t.setterContext;s[r]={read:function(e){return i.fromWireType(o(u,e))},write:function(e,t){var n=[];c(d,e,l.toWireType(n,t)),J(n)}}})),[{name:t.name,fromWireType:function(e){var t={};for(var n in s)t[n]=s[n].read(e);return r(e),t},toWireType:function(e,t){for(var a in s)if(!(a in t))throw new TypeError('Missing field:  "'+a+'"');var i=n();for(a in s)s[a].write(i,t[a]);return null!==e&&e.push(r,i),i},argPackAdvance:8,readValueFromPointer:Q,destructorFunction:r}]}))},B:function(e,t,n,r,a){var s=le(n);fe(e,{name:t=de(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:a},argPackAdvance:8,readValueFromPointer:function(e){var r;if(1===n)r=w;else if(2===n)r=k;else{if(4!==n)throw new TypeError("Unknown boolean type size: "+t);r=N}return this.fromWireType(r[e>>s])},destructorFunction:null})},A:function(e,t){fe(e,{name:t=de(t),fromWireType:function(e){var t=ge[e].value;return ye(e),t},toWireType:function(e,t){return be(t)},argPackAdvance:8,readValueFromPointer:Q,destructorFunction:null})},k:function(e,t,n){var r=le(n);fe(e,{name:t=de(t),fromWireType:function(e){return e},toWireType:function(e,t){if("number"!=typeof t&&"boolean"!=typeof t)throw new TypeError('Cannot convert "'+xe(t)+'" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:we(t,r),destructorFunction:null})},h:function(t,n,r,a,s,i){var o=function(e,t){for(var n=[],r=0;r<e;r++)n.push(N[(t>>2)+r]);return n}(n,r);t=de(t),s=ve(a,s),function(t,n,r){e.hasOwnProperty(t)?((void 0===r||void 0!==e[t].overloadTable&&void 0!==e[t].overloadTable[r])&&he("Cannot register public name '"+t+"' twice"),function(e,t,n){if(void 0===e[t].overloadTable){var r=e[t];e[t]=function(){return e[t].overloadTable.hasOwnProperty(arguments.length)||he("Function '"+n+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+e[t].overloadTable+")!"),e[t].overloadTable[arguments.length].apply(this,arguments)},e[t].overloadTable=[],e[t].overloadTable[r.argCount]=r}}(e,t,t),e.hasOwnProperty(r)&&he("Cannot register multiple overloads of a function with the same number of arguments ("+r+")!"),e[t].overloadTable[r]=n):(e[t]=n,void 0!==r&&(e[t].numArguments=r))}(t,(function(){!function(e,t){var n=[],r={};throw t.forEach((function e(t){r[t]||te[t]||(ne[t]?ne[t].forEach(e):(n.push(t),r[t]=!0))})),new ke(e+": "+n.map(Ie).join([", "]))}("Cannot call "+t+" due to unbound types",o)}),n-1),ue([],o,(function(r){var a=[r[0],null].concat(r.slice(1));return function(t,n,r){e.hasOwnProperty(t)||oe("Replacing nonexistant public symbol"),void 0!==e[t].overloadTable&&void 0!==r?e[t].overloadTable[r]=n:(e[t]=n,e[t].argCount=r)}(t,function(e,t,n,r,a){var s=t.length;s<2&&he("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var i=null!==t[1]&&null!==n,o=!1,u=1;u<t.length;++u)if(null!==t[u]&&void 0===t[u].destructorFunction){o=!0;break}var l="void"!==t[0].name,c="",d="";for(u=0;u<s-2;++u)c+=(0!==u?", ":"")+"arg"+u,d+=(0!==u?", ":"")+"arg"+u+"Wired";var p="return function "+re(e)+"("+c+") {\nif (arguments.length !== "+(s-2)+") {\nthrowBindingError('function "+e+" called with ' + arguments.length + ' arguments, expected "+(s-2)+" args!');\n}\n";o&&(p+="var destructors = [];\n");var h=o?"destructors":"null",f=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],m=[he,r,a,J,t[0],t[1]];for(i&&(p+="var thisWired = classParam.toWireType("+h+", this);\n"),u=0;u<s-2;++u)p+="var arg"+u+"Wired = argType"+u+".toWireType("+h+", arg"+u+"); // "+t[u+2].name+"\n",f.push("argType"+u),m.push(t[u+2]);if(i&&(d="thisWired"+(d.length>0?", ":"")+d),p+=(l?"var rv = ":"")+"invoker(fn"+(d.length>0?", ":"")+d+");\n",o)p+="runDestructors(destructors);\n";else for(u=i?1:2;u<t.length;++u){var g=1===u?"thisWired":"arg"+(u-2)+"Wired";null!==t[u].destructorFunction&&(p+=g+"_dtor("+g+"); // "+t[u].name+"\n",f.push(g+"_dtor"),m.push(t[u].destructorFunction))}return l&&(p+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),p+="}\n",f.push(p),function(e,t){if(!(e instanceof Function))throw new TypeError("new_ called with constructor type "+typeof e+" which is not a function");var n=ae(e.name||"unknownFunctionName",(function(){}));n.prototype=e.prototype;var r=new n,a=e.apply(r,t);return a instanceof Object?a:r}(Function,f).apply(null,m)}(t,a,null,s,i),n-1),[]}))},b:function(e,t,n,r,a){t=de(t),-1===a&&(a=4294967295);var s=le(n),i=function(e){return e};if(0===r){var o=32-8*n;i=function(e){return e<<o>>>o}}var u=-1!=t.indexOf("unsigned");fe(e,{name:t,fromWireType:i,toWireType:function(e,n){if("number"!=typeof n&&"boolean"!=typeof n)throw new TypeError('Cannot convert "'+xe(n)+'" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number "'+xe(n)+'" from JS side to C/C++ side to an argument of type "'+t+'", which is outside the valid range ['+r+", "+a+"]!");return u?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Ne(t,s,0!==r),destructorFunction:null})},a:function(e,t,n){var r=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function a(e){var t=S,n=t[e>>=2],a=t[e+1];return new r(x,a,n)}fe(e,{name:n=de(n),fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ignoreDuplicateRegistrations:!0})},l:function(e,t){var n="std::string"===(t=de(t));fe(e,{name:t,fromWireType:function(e){var t,r=S[e>>2];if(n)for(var a=e+4,s=0;s<=r;++s){var i=e+4+s;if(s==r||0==v[i]){var o=g(a,i-a);void 0===t?t=o:(t+=String.fromCharCode(0),t+=o),a=i+1}}else{var u=new Array(r);for(s=0;s<r;++s)u[s]=String.fromCharCode(v[e+4+s]);t=u.join("")}return ze(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r="string"==typeof t;r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||he("Cannot pass non-string to std::string");var a=(n&&r?function(){return b(t)}:function(){return t.length})(),s=Le(4+a+1);if(S[s>>2]=a,n&&r)y(t,v,s+4,a+1);else if(r)for(var i=0;i<a;++i){var o=t.charCodeAt(i);o>255&&(ze(s),he("String has UTF-16 code units that do not fit in 8 bits")),v[s+4+i]=o}else for(i=0;i<a;++i)v[s+4+i]=t[i];return null!==e&&e.push(ze,s),s},argPackAdvance:8,readValueFromPointer:Q,destructorFunction:function(e){ze(e)}})},g:function(e,t,n){var r,a,s,i,o;n=de(n),2===t?(r=_,a=E,i=A,s=function(){return I},o=1):4===t&&(r=R,a=F,i=D,s=function(){return S},o=2),fe(e,{name:n,fromWireType:function(e){for(var n,a=S[e>>2],i=s(),u=e+4,l=0;l<=a;++l){var c=e+4+l*t;if(l==a||0==i[c>>o]){var d=r(u,c-u);void 0===n?n=d:(n+=String.fromCharCode(0),n+=d),u=c+t}}return ze(e),n},toWireType:function(e,r){"string"!=typeof r&&he("Cannot pass non-string to C++ string type "+n);var s=i(r),u=Le(4+s+t);return S[u>>2]=s>>o,a(r,u+4,s+t),null!==e&&e.push(ze,u),u},argPackAdvance:8,readValueFromPointer:Q,destructorFunction:function(e){ze(e)}})},w:function(e,t,n,r,a,s){Z[e]={name:de(t),rawConstructor:ve(n,r),rawDestructor:ve(a,s),fields:[]}},d:function(e,t,n,r,a,s,i,o,u,l){Z[e].fields.push({fieldName:de(t),getterReturnType:n,getter:ve(r,a),getterContext:s,setterArgumentType:i,setter:ve(o,u),setterContext:l})},n:function(e,t){fe(e,{isVoid:!0,name:t=de(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,t){}})},o:ye,p:function(e){e>4&&(ge[e].refcount+=1)},m:function(e,t){var n,r;return void 0===(r=te[n=e])&&he("_emval_take_value has unknown type "+Ie(n)),be((e=r).readValueFromPointer(t))},j:function(){G()},s:function(e,t,n){v.copyWithin(e,t,t+n)},c:function(e){var t,n=v.length,r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),Se(Math.min(r,((t=Math.max(e,s))%65536>0&&(t+=65536-t%65536),t))))return!0}return!1},u:function(e,t){var n=0;return Ce().forEach((function(r,a){var s=t+n;N[e+4*a>>2]=s,function(e,t){for(var n=0;n<e.length;++n)w[0|t++]=e.charCodeAt(n);w[0|t]=0}(r,s),n+=r.length+1})),0},v:function(e,t){var n=Ce();N[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),N[t>>2]=r,0},z:function(e){return 0},x:function(e,t,n,r){var a=$e.getStreamFromFD(e),s=$e.doReadv(a,t,n);return N[r>>2]=s,0},r:function(e,t,n,r,a){},y:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=N[t+8*s>>2],o=N[t+(8*s+4)>>2],u=0;u<o;u++)$e.printChar(e,v[i+u]);a+=o}return N[r>>2]=a,0},i:function(e){},t:function(e,t,n,r){return function(e,t,n,r){var a=N[r+40>>2],s={tm_sec:N[r>>2],tm_min:N[r+4>>2],tm_hour:N[r+8>>2],tm_mday:N[r+12>>2],tm_mon:N[r+16>>2],tm_year:N[r+20>>2],tm_wday:N[r+24>>2],tm_yday:N[r+28>>2],tm_isdst:N[r+32>>2],tm_gmtoff:N[r+36>>2],tm_zone:a?g(a):""},i=g(n),o={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var u in o)i=i.replace(new RegExp(u,"g"),o[u]);var l=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],c=["January","February","March","April","May","June","July","August","September","October","November","December"];function d(e,t,n){for(var r="number"==typeof e?e.toString():e||"";r.length<t;)r=n[0]+r;return r}function p(e,t){return d(e,t,"0")}function h(e,t){function n(e){return e<0?-1:e>0?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function m(e){var t=Fe(new Date(e.tm_year+1900,0,1),e.tm_yday),n=new Date(t.getFullYear(),0,4),r=new Date(t.getFullYear()+1,0,4),a=f(n),s=f(r);return h(a,t)<=0?h(s,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var x={"%a":function(e){return l[e.tm_wday].substring(0,3)},"%A":function(e){return l[e.tm_wday]},"%b":function(e){return c[e.tm_mon].substring(0,3)},"%B":function(e){return c[e.tm_mon]},"%C":function(e){return p((e.tm_year+1900)/100|0,2)},"%d":function(e){return p(e.tm_mday,2)},"%e":function(e){return d(e.tm_mday,2," ")},"%g":function(e){return m(e).toString().substring(2)},"%G":function(e){return m(e)},"%H":function(e){return p(e.tm_hour,2)},"%I":function(e){var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),p(t,2)},"%j":function(e){return p(e.tm_mday+Ee(_e(e.tm_year+1900)?Ae:Re,e.tm_mon-1),3)},"%m":function(e){return p(e.tm_mon+1,2)},"%M":function(e){return p(e.tm_min,2)},"%n":function(){return"\n"},"%p":function(e){return e.tm_hour>=0&&e.tm_hour<12?"AM":"PM"},"%S":function(e){return p(e.tm_sec,2)},"%t":function(){return"\t"},"%u":function(e){return e.tm_wday||7},"%U":function(e){var t=new Date(e.tm_year+1900,0,1),n=0===t.getDay()?t:Fe(t,7-t.getDay()),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(h(n,r)<0){var a=Ee(_e(r.getFullYear())?Ae:Re,r.getMonth()-1)-31,s=31-n.getDate()+a+r.getDate();return p(Math.ceil(s/7),2)}return 0===h(n,t)?"01":"00"},"%V":function(e){var t,n=new Date(e.tm_year+1900,0,4),r=new Date(e.tm_year+1901,0,4),a=f(n),s=f(r),i=Fe(new Date(e.tm_year+1900,0,1),e.tm_yday);return h(i,a)<0?"53":h(s,i)<=0?"01":(t=a.getFullYear()<e.tm_year+1900?e.tm_yday+32-a.getDate():e.tm_yday+1-a.getDate(),p(Math.ceil(t/7),2))},"%w":function(e){return e.tm_wday},"%W":function(e){var t=new Date(e.tm_year,0,1),n=1===t.getDay()?t:Fe(t,0===t.getDay()?1:7-t.getDay()+1),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(h(n,r)<0){var a=Ee(_e(r.getFullYear())?Ae:Re,r.getMonth()-1)-31,s=31-n.getDate()+a+r.getDate();return p(Math.ceil(s/7),2)}return 0===h(n,t)?"01":"00"},"%y":function(e){return(e.tm_year+1900).toString().substring(2)},"%Y":function(e){return e.tm_year+1900},"%z":function(e){var t=e.tm_gmtoff,n=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(n?"+":"-")+String("0000"+t).slice(-4)},"%Z":function(e){return e.tm_zone},"%%":function(){return"%"}};for(var u in x)i.indexOf(u)>=0&&(i=i.replace(new RegExp(u,"g"),x[u](s)));var v,k,I,S=(k=b(v=i)+1,y(v,I=new Array(k),0,I.length),I);return S.length>t?0:(function(e,t){w.set(e,t)}(S,e),S.length-1)}(e,t,n,r)}},Me=(function(){var t={a:Oe};function n(t,n){var r=t.exports;e.asm=r,O((c=e.asm.C).buffer),M=e.asm.E,function(){if(W--,e.monitorRunDependencies&&e.monitorRunDependencies(W),0==W&&(null!==V&&(clearInterval(V),V=null),U)){var t=U;U=null,t()}}()}function a(e){n(e.instance)}function s(e){return(l||"function"!=typeof fetch?Promise.resolve().then((function(){return K(q)})):fetch(q,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+q+"'";return e.arrayBuffer()})).catch((function(){return K(q)}))).then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(e){p("failed to asynchronously prepare wasm: "+e),G(e)}))}if(W++,e.monitorRunDependencies&&e.monitorRunDependencies(W),e.instantiateWasm)try{return e.instantiateWasm(t,n)}catch(e){return p("Module.instantiateWasm callback failed with error: "+e),!1}(l||"function"!=typeof WebAssembly.instantiateStreaming||H(q)||"function"!=typeof fetch?s(a):fetch(q,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(a,(function(e){return p("wasm streaming compile failed: "+e),p("falling back to ArrayBuffer instantiation"),s(a)}))}))).catch(r)}(),e.___wasm_call_ctors=function(){return(Me=e.___wasm_call_ctors=e.asm.D).apply(null,arguments)}),Le=e._malloc=function(){return(Le=e._malloc=e.asm.F).apply(null,arguments)},ze=e._free=function(){return(ze=e._free=e.asm.G).apply(null,arguments)},Pe=e.___getTypeName=function(){return(Pe=e.___getTypeName=e.asm.H).apply(null,arguments)};function Be(t){function r(){De||(De=!0,e.calledRun=!0,h||(X(z),X(P),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),function(){if(e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)t=e.postRun.shift(),B.unshift(t);var t;X(B)}()))}t=t||i,W>0||(function(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)t=e.preRun.shift(),L.unshift(t);var t;X(L)}(),W>0||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("")}),1),r()}),1)):r()))}if(e.___embind_register_native_and_builtin_types=function(){return(e.___embind_register_native_and_builtin_types=e.asm.I).apply(null,arguments)},e.dynCall_ji=function(){return(e.dynCall_ji=e.asm.J).apply(null,arguments)},e.dynCall_viijii=function(){return(e.dynCall_viijii=e.asm.K).apply(null,arguments)},e.dynCall_jiji=function(){return(e.dynCall_jiji=e.asm.L).apply(null,arguments)},e.dynCall_iiiiiijj=function(){return(e.dynCall_iiiiiijj=e.asm.M).apply(null,arguments)},e.dynCall_iiiiij=function(){return(e.dynCall_iiiiij=e.asm.N).apply(null,arguments)},e.dynCall_iiiiijj=function(){return(e.dynCall_iiiiijj=e.asm.O).apply(null,arguments)},U=function e(){De||Be(),De||(U=e)},e.run=Be,e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return Be(),e.ready});e.exports=n},546:(e,t,n)=>{var r=n(123),a=n(686),s=n(316),i=n(806),o=n(4),u=n(802),l=n(421);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},123:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},802:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},686:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},4:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},806:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},316:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},421:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l="random",c=s.pow(u,6),d=s.pow(2,52),p=2*d,h=255;function f(e,t,n){var r=[],h=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),f=new m(r),w=function(){for(var e=f.g(6),t=c,n=0;e<d;)e=(e+n)*u,t*=u,n=f.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(s[l]=e,t):e})(w,h,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s["seed"+l]=f,b(s.random(),a),e.exports){e.exports=f;try{i=n(351)}catch(e){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},417:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return R.buffer!=O&&q(R.buffer),M}function a(){return R.buffer!=O&&q(R.buffer),L}function s(){return R.buffer!=O&&q(R.buffer),z}function i(){return R.buffer!=O&&q(R.buffer),P}function o(){return R.buffer!=O&&q(R.buffer),B}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){u=e,l=t}));var d,p={};for(d in c)c.hasOwnProperty(d)&&(p[d]=c[d]);var h,f,m,g,y=[],b=function(e,t){throw t};h="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g=!h&&!m&&!f;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(O=c.buffer);var w,v,k,I,N,S="";function T(e){return c.locateFile?c.locateFile(e,S):S+e}if(m){var C;S=f?n(281).dirname(S)+"/":"//",w=function(e,t){return I||(I=n(893)),N||(N=n(281)),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof lt))throw e})),process.on("unhandledRejection",se),b=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{C=n(556)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else g?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?y=scriptArgs:void 0!==arguments&&(y=arguments),"function"==typeof quit&&(b=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(h||f)&&(f?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==r&&r&&(S=r),S=0!==S.indexOf("blob:")?S.substr(0,S.lastIndexOf("/")+1):"",m?(w=function(e,t){return I||(I=n(893)),N||(N=n(281)),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));m&&"undefined"==typeof performance&&(n.g.performance=n(244).performance);var $,_=c.print||console.log.bind(console),E=c.printErr||console.warn.bind(console);for(d in p)p.hasOwnProperty(d)&&(c[d]=p[d]);function A(e){A.shown||(A.shown={}),A.shown[e]||(A.shown[e]=1,E(e))}p=null,c.arguments&&(y=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(b=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&($=c.wasmBinary);var R,F,D=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&se("no native wasm support detected");var O,M,L,z,P,B,W=!1;function V(e,t){e||se("Assertion failed: "+t)}function U(e){var t=c["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function G(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function H(e,t){return e?G(a(),e,t):""}function j(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,a(),t,n)}function q(e){O=e,c.HEAP8=M=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=L=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=P=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=B=new Float64Array(e)}var K,X=c.INITIAL_MEMORY||16777216;if(x)R=c.wasmMemory,O=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:X/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),m&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(O=R.buffer),X=O.byteLength,q(O);var Y=[],Z=[],J=[],Q=[],ee=[];function te(){x||pe(Z)}x||Z.push({func:function(){We()}});var ne=0,re=null,ae=null;function se(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),E(e+=""),W=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function ie(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function oe(e){return ie(e,"data:application/octet-stream;base64,")}function ue(e){return ie(e,"file://")}c.preloadedImages={},c.preloadedAudios={};var le="tfjs-backend-wasm-threaded-simd.wasm";function ce(e){try{if(e==le&&$)return new Uint8Array($);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){se(e)}}oe(le)||(le=T(le));var de={10520:function(){throw"Canceled!"},10538:function(e,t){setTimeout((function(){Ze(e,t)}),0)}};function pe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?K.get(n)():K.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function he(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),ut>>2),a=0;if(r==e&&Atomics.compareExchange(s(),ut>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function fe(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=ge.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;ge.returnWorkerToPool(n)}}c._emscripten_futex_wake=he;var me,ge={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)ge.allocateUnusedWorker()},initRuntime:function(){for(var e=Ve(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Ve(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),tt(e,!f,1),Xe(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;ge.threadExitHandlers.length>0;)ge.threadExitHandlers.pop()();x&&je()&&qe()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ge.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),he(e+0,2147483647),tt(0,0,0)},threadExit:function(e){var t=je();t&&(ge.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){ge.runExitHandlersAndDeinitThread(je(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in ge.pthreads)(r=ge.pthreads[e])&&r.worker&&ge.returnWorkerToPool(r.worker);ge.pthreads={};for(var t=0;t<ge.unusedWorkers.length;++t)(n=ge.unusedWorkers[t]).terminate();for(ge.unusedWorkers=[],t=0;t<ge.runningWorkers.length;++t){var n,r=(n=ge.runningWorkers[t]).pthread;ge.freeThreadData(r),n.terminate()}ge.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Ue(t),Ue(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Ue(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){ge.runWithoutMainThreadQueuedCalls((function(){delete ge.pthreads[e.pthread.threadInfoStruct],ge.unusedWorkers.push(e),ge.runningWorkers.splice(ge.runningWorkers.indexOf(e),1),ge.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[ot>>2]=0;try{e()}finally{s()[ot>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(ge.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=je()){var o=ge.pthreads[r.targetThread];return o?o.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ge.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Ke();else if("spawnThread"===a)De(n.data);else if("cleanupThread"===a)fe(r.thread);else if("killThread"===a)!function(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=ge.pthreads[e];t.worker.terminate(),ge.freeThreadData(t),ge.runningWorkers.splice(ge.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread);else if("cancelThread"===a)!function(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";ge.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)_("Thread "+r.threadId+": "+r.text);else if("printErr"===a)E("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&ge.returnWorkerToPool(e);else if("exitProcess"===a)try{!function(e){if(x)throw postMessage({cmd:"exitProcess",returnCode:e}),new lt(e);D||(ge.terminateAllThreads(),c.onExit&&c.onExit(e),W=!0),b(e,new lt(e))}(r.returnCode)}catch(n){if(n instanceof lt)return;throw n}else"cancelDone"===a?ge.returnWorkerToPool(e):"objectTransfer"===a?ge.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):E("worker sent an unknown command "+a);ge.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){E("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},m&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:R,wasmModule:F})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");ge.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==ge.unusedWorkers.length&&(ge.allocateUnusedWorker(),ge.loadWasmModuleToWorker(ge.unusedWorkers[0])),ge.unusedWorkers.length>0?ge.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function ye(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(h){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),ut>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),ut>>2,0),-73;if(0==Atomics.exchange(s(),ut>>2,0))break;if(Ke(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),ut>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function be(e,t){for(var n=arguments.length-2,r=nt(),a=n,s=at(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=Qe(e,a,s,t);return rt(r),c}c.establishStackSpace=function(e,t){st(e,t),rt(e)},c.getNoExitRuntime=function(){return D},c.invokeEntryPoint=function(e,t){return K.get(e)(t)},me=m?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var xe=[],we=[];function ve(e){try{return R.grow(e-O.byteLength+65535>>>16),q(R.buffer),1}catch(e){}}var ke={inEventHandler:0,removeAllEventListeners:function(){for(var e=ke.eventHandlers.length-1;e>=0;--e)ke._removeHandler(e);ke.eventHandlers=[],ke.deferredCalls=[]},registerRemoveEventListeners:function(){ke.removeEventListenersRegistered||(Q.push(ke.removeAllEventListeners),ke.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ke.deferredCalls){var s=ke.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ke.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ke.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ke.deferredCalls.length;++t)ke.deferredCalls[t].targetFunction==e&&(ke.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ke.inEventHandler&&ke.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ke.canPerformEventHandlerRequests())for(var e=0;e<ke.deferredCalls.length;++e){var t=ke.deferredCalls[e];ke.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ke.eventHandlers.length;++n)ke.eventHandlers[n].target!=e||t&&t!=ke.eventHandlers[n].eventTypeString||ke._removeHandler(n--)},_removeHandler:function(e){var t=ke.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ke.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ke.inEventHandler,ke.currentEventHandler=e,ke.runDeferredCalls(),e.handlerFunc(t),ke.runDeferredCalls(),--ke.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ke.eventHandlers.push(e),ke.registerRemoveEventListeners();else for(var n=0;n<ke.eventHandlers.length;++n)ke.eventHandlers[n].target==e.target&&ke.eventHandlers[n].eventTypeString==e.eventTypeString&&ke._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=nt(),o=at(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,et(0,e,637534208,t,r,o),rt(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return ge.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var Ie=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Ne(e){return function(e){var t;return e=(t=e)>2?H(t):t,Ie[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}(e)}function Se(e,t,n){var r=Ne(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){!function(e,t,n,r){var a,i,o,u=nt(),l=at(12),c=0;t&&(i=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(a=t)+1,j(a,o=Ve(i),i),c=o),s()[l>>2]=c,s()[l+4>>2]=n,s()[l+8>>2]=r,et(0,e,657457152,0,c,l),rt(u)}(e,t=t?H(t):"",n,r)}(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Te(e,t,n){return x?be(2,1,e,t,n):Se(e,t,n)}var Ce,$e={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){$e.lastError||($e.lastError=e)},getNewId:function(e){for(var t=$e.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=H(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?$e.registerContext(n,t):0},registerContext:function(e,t){var n=Ve(8);s()[n+4>>2]=je();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),$e.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&$e.initExtensions(r),n},makeContextCurrent:function(e){return $e.currentContext=$e.contexts[e],c.ctx=Ce=$e.currentContext&&$e.currentContext.GLctx,!(e&&!Ce)},getContext:function(e){return $e.contexts[e]},deleteContext:function(e){$e.currentContext===$e.contexts[e]&&($e.currentContext=null),"object"==typeof ke&&ke.removeAllHandlersOnTarget($e.contexts[e].GLctx.canvas),$e.contexts[e]&&$e.contexts[e].GLctx.canvas&&($e.contexts[e].GLctx.canvas.GLctxObject=void 0),Ue($e.contexts[e].handle),$e.contexts[e]=null},initExtensions:function(e){if(e||(e=$e.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t,n=e.GLctx;!function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})}(n),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(n),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(n),n.disjointTimerQueryExt=n.getExtension("EXT_disjoint_timer_query"),(t=n).multiDrawWebgl=t.getExtension("WEBGL_multi_draw"),(n.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&n.getExtension(e)}))}},populateUniformTable:function(e){for(var t=$e.programs[e],n=$e.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Ce.getProgramParameter(t,35718),s=0;s<a;++s){var i=Ce.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Ce.getUniformLocation(t,o);if(u){var l=$e.getNewId($e.uniforms);r[o]=[i.size,l],$e.uniforms[l]=u;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";u=Ce.getUniformLocation(t,d),l=$e.getNewId($e.uniforms),$e.uniforms[l]=u}}}}},_e=["default","low-power","high-performance"],Ee={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ee.buffers[e];0===t||10===t?((1===e?_:E)(G(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ee.varargs+=4,s()[Ee.varargs-4>>2]},getStr:function(e){return H(e)},get64:function(e,t){return e}};function Ae(e){return x?be(3,1,e):0}function Re(e,t,n,r,a){if(x)return be(4,1,e,t,n,r,a)}function Fe(e,t,n,r){if(x)return be(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Ee.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function De(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=ge.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";ge.runningWorkers.push(t);for(var n=Ve(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=ge.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=He()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Oe(){if(x){var e=je();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Me(){m||f||A("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Le(e){if(x)return be(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return s()[Ge()>>2]=28,-1}x||ge.initMainThreadBlock();var ze,Pe=[null,function(e,t){if(x)return be(1,1,e,t)},Te,Ae,Re,Fe,Le],Be={e:function(e,t,n,r){se("Assertion failed: "+H(e)+", at: "+[t?H(t):"unknown filename",n,r?H(r):"unknown function"])},r:function(e,t){_main(e,t)},x:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=ge.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},b:function(){se()},y:function(e,t,n){var r=function(e,t){var n;for(we.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,we.push(r?o()[t++>>1]:s()[t]),++t}return we}(t,n);return de[e].apply(null,r)},j:function(e,t){},d:ye,c:he,f:me,p:function(e,t,n){a().copyWithin(e,t,t+n)},A:function(){return m?n(74).cpus().length:navigator.hardwareConcurrency},u:function(e,t,n){xe.length=t;for(var r=n>>3,a=0;a<t;a++)xe[a]=o()[r+a];return(e<0?de[-e-1]:Pe[e]).apply(null,xe)},q:function(e){var t=a().length;if(e<=t)return!1;var n,r=2147483648;if(e>r)return!1;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+100663296),ve(Math.min(r,((n=Math.max(e,i))%65536>0&&(n+=65536-n%65536),n))))return!0}return!1},v:function(e,t,n){return Ne(e)?Se(e,t,n):Te(e,t,n)},i:function(e){},s:function(e,t){},w:function(e,t){return n=e,r=t>>2,a=s()[r+6],i={alpha:!!s()[r+0],depth:!!s()[r+1],stencil:!!s()[r+2],antialias:!!s()[r+3],premultipliedAlpha:!!s()[r+4],preserveDrawingBuffer:!!s()[r+5],powerPreference:_e[a],failIfMajorPerformanceCaveat:!!s()[r+7],majorVersion:s()[r+8],minorVersion:s()[r+9],enableExtensionsByDefault:s()[r+10],explicitSwapControl:s()[r+11],proxyContextToMainThread:s()[r+12],renderViaOffscreenBackBuffer:s()[r+13]},(o=Ne(n))?i.explicitSwapControl?0:$e.createContext(o,i):0;var n,r,a,i,o},l:Ae,n:Re,g:Fe,o:function(){ge.initRuntime()},a:R||c.wasmMemory,z:function(e){var t=ge.threadExitHandlers.pop();e&&t()},k:function(e,t){ge.threadExitHandlers.push((function(){K.get(e)(t)}))},h:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return E("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return Je(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=it(16,o):V((u-=o)>0);for(var d=Ve(228),p=0;p<57;++p)i()[(d>>2)+p]=0;s()[e>>2]=d,s()[d+12>>2]=d;var h=d+152;s()[h>>2]=h;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):De(f),0},m:function(e,t){return function(e,t){if(!e)return E("pthread_join attempted on a null thread pointer!"),71;if(x&&je()==e)return E("PThread "+e+" is attempting to join to itself!"),16;if(!x&&Ye()==e)return E("Main thread "+e+" is attempting to join to itself!"),16;if(s()[e+12>>2]!==e)return E("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),71;if(Atomics.load(i(),e+64>>2))return E("Attempted to join thread "+e+", which was already detached!"),28;for(Me();;){var n=Atomics.load(i(),e+0>>2);if(1==n){var r=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=r),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):fe(e),0}0,Oe(),x||Ke(),ye(e+0,n,x?100:1)}}(e,t)},t:Le},We=(function(){var e={a:Be};function t(e,t){var n=e.exports;if(c.asm=n,K=c.asm.I,F=t,!x){var r=ge.unusedWorkers.length;ge.unusedWorkers.forEach((function(e){ge.loadWasmModuleToWorker(e,(function(){--r||function(){if(ne--,c.monitorRunDependencies&&c.monitorRunDependencies(ne),0==ne&&(null!==re&&(clearInterval(re),re=null),ae)){var e=ae;ae=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!$&&(h||f)){if("function"==typeof fetch&&!ue(le))return fetch(le,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+le+"'";return e.arrayBuffer()})).catch((function(){return ce(le)}));if(v)return new Promise((function(e,t){v(le,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ce(le)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),se(e)}))}if(x||(V(!x,"addRunDependency cannot be used in a pthread worker"),ne++,c.monitorRunDependencies&&c.monitorRunDependencies(ne)),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}($||"function"!=typeof WebAssembly.instantiateStreaming||oe(le)||ue(le)||"function"!=typeof fetch?r(n):fetch(le,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),c.___wasm_call_ctors=function(){return(We=c.___wasm_call_ctors=c.asm.B).apply(null,arguments)}),Ve=(c._init=function(){return(c._init=c.asm.C).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.D).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.E).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.F).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.G).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.H).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.J).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.K).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.L).apply(null,arguments)},c._All=function(){return(c._All=c.asm.M).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.N).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.O).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.P).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.Q).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.R).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.S).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.T).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.U).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.V).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.W).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.X).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Y).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.Z).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm._).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.$).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.aa).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.ba).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.ca).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.da).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.ea).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.fa).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ga).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.ha).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ia).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ja).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ka).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.la).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ma).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.na).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.oa).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.pa).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.qa).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ra).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.sa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.ta).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.ua).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.va).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.wa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.xa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ya).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.za).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.Aa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.Ba).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.Ca).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.Da).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Ea).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Fa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ga).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Ha).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ia).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ja).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ka).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.La).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ma).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Na).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Oa).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Pa).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Qa).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ra).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Sa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Ta).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Ua).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Va).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Wa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Xa).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ya).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Za).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm._a).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.$a).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.ab).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.bb).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.cb).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.db).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.eb).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.fb).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.gb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.hb).apply(null,arguments)},c._malloc=function(){return(Ve=c._malloc=c.asm.ib).apply(null,arguments)}),Ue=c._free=function(){return(Ue=c._free=c.asm.jb).apply(null,arguments)},Ge=c.___errno_location=function(){return(Ge=c.___errno_location=c.asm.kb).apply(null,arguments)},He=c._emscripten_get_global_libc=function(){return(He=c._emscripten_get_global_libc=c.asm.lb).apply(null,arguments)},je=c._pthread_self=function(){return(je=c._pthread_self=c.asm.mb).apply(null,arguments)},qe=c.___pthread_tsd_run_dtors=function(){return(qe=c.___pthread_tsd_run_dtors=c.asm.nb).apply(null,arguments)},Ke=c._emscripten_main_thread_process_queued_calls=function(){return(Ke=c._emscripten_main_thread_process_queued_calls=c.asm.ob).apply(null,arguments)},Xe=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.pb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(Xe=c._emscripten_register_main_browser_thread_id=c.asm.qb).apply(null,arguments)}),Ye=c._emscripten_main_browser_thread_id=function(){return(Ye=c._emscripten_main_browser_thread_id=c.asm.rb).apply(null,arguments)},Ze=c.__emscripten_do_dispatch_to_thread=function(){return(Ze=c.__emscripten_do_dispatch_to_thread=c.asm.sb).apply(null,arguments)},Je=c._emscripten_sync_run_in_main_thread_4=function(){return(Je=c._emscripten_sync_run_in_main_thread_4=c.asm.tb).apply(null,arguments)},Qe=c._emscripten_run_in_main_runtime_thread_js=function(){return(Qe=c._emscripten_run_in_main_runtime_thread_js=c.asm.ub).apply(null,arguments)},et=c.__emscripten_call_on_thread=function(){return(et=c.__emscripten_call_on_thread=c.asm.vb).apply(null,arguments)},tt=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.wb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(tt=c.__emscripten_thread_init=c.asm.xb).apply(null,arguments)}),nt=c.stackSave=function(){return(nt=c.stackSave=c.asm.yb).apply(null,arguments)},rt=c.stackRestore=function(){return(rt=c.stackRestore=c.asm.zb).apply(null,arguments)},at=c.stackAlloc=function(){return(at=c.stackAlloc=c.asm.Ab).apply(null,arguments)},st=c._emscripten_stack_set_limits=function(){return(st=c._emscripten_stack_set_limits=c.asm.Bb).apply(null,arguments)},it=c._memalign=function(){return(it=c._memalign=c.asm.Cb).apply(null,arguments)},ot=c.__emscripten_allow_main_runtime_queued_calls=10512,ut=c.__emscripten_main_thread_futex=12148;function lt(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ct(e){if(e=e||y,!(ne>0)){if(x)return u(c),te(),void postMessage({cmd:"loaded"});!function(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)e=c.preRun.shift(),Y.unshift(e);var e;pe(Y)}}(),ne>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){ze||(ze=!0,c.calledRun=!0,W||(te(),x||pe(J),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),function(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)e=c.postRun.shift(),ee.unshift(e);var e;pe(ee)}}()))}}if(c.cwrap=function(e,n,r,a){var s=(r=r||[]).every((function(e){return"number"===e}));return"string"!==n&&s&&!a?U(e):function(){return function(e,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);j(e,t=at(n),n)}return t},array:function(e){var n=at(e.length);return function(e,n){t().set(e,n)}(e,n),n}},i=U(e),o=[],u=0;if(a)for(var l=0;l<a.length;l++){var c=s[r[l]];c?(0===u&&(u=nt()),o[l]=c(a[l])):o[l]=a[l]}var d=i.apply(null,o);return d=function(e){return"string"===n?H(e):"boolean"===n?Boolean(e):e}(d),0!==u&&rt(u),d}(e,n,r,arguments)}},c.PThread=ge,c.PThread=ge,c.wasmMemory=R,c.ExitStatus=lt,ae=function e(){ze||ct(),ze||(ae=e)},c.run=ct,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(D=!1,ge.initWorker()),ct(),e.ready});e.exports=a},805:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,a=n}));var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u,l,c,d,p=[];u="object"==typeof window,l="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d=!u&&!c&&!l;var h,f,m,g,y,b="";c?(b=l?n(281).dirname(b)+"/":"//",h=function(e,t){return g||(g=n(893)),y||(y=n(281)),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),p=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof se))throw e})),process.on("unhandledRejection",V),s.inspect=function(){return"[Emscripten Module object]"}):d?("undefined"!=typeof read&&(h=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?p=scriptArgs:void 0!==arguments&&(p=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||l)&&(l?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",h=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},l&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var x,w,v=s.print||console.log.bind(console),k=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(p=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(x=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&V("no native wasm support detected");var I=!1;function N(e,t){e||V("Assertion failed: "+t)}function S(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}var T,C,$,_,E="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function A(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&E)return E.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function R(e,t){return e?A($,e,t):""}function F(e){T=e,s.HEAP8=C=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=_=new Int32Array(e),s.HEAPU8=$=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var D,O=[],M=[],L=[],z=[];M.push({func:function(){ee()}});var P=0,B=null,W=null;function V(e){s.onAbort&&s.onAbort(e),k(e+=""),I=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function U(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function G(e){return U(e,"data:application/octet-stream;base64,")}function H(e){return U(e,"file://")}s.preloadedImages={},s.preloadedAudios={};var j,q="tfjs-backend-wasm.wasm";function K(e){try{if(e==q&&x)return new Uint8Array(x);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){V(e)}}function X(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?D.get(n)():D.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function Y(e){try{return w.grow(e-T.byteLength+65535>>>16),F(w.buffer),1}catch(e){}}G(q)||(j=q,q=s.locateFile?s.locateFile(j,b):b+j);var Z,J={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=J.buffers[e];0===t||10===t?((1===e?v:k)(A(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return J.varargs+=4,_[J.varargs-4>>2]},getStr:function(e){return R(e)},get64:function(e,t){return e}},Q={a:function(){V()},d:function(e,t,n){$.copyWithin(e,t,t+n)},e:function(e){var t,n=$.length,r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),Y(Math.min(r,((t=Math.max(e,s))%65536>0&&(t+=65536-t%65536),t))))return!0}return!1},f:function(e){return 0},c:function(e,t,n,r,a){},b:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=_[t+8*s>>2],o=_[t+(8*s+4)>>2],u=0;u<o;u++)J.printChar(e,$[i+u]);a+=o}return _[r>>2]=a,0},h:function(){return 6},g:function(){return 28},i:function(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return _[te()>>2]=28,-1}},ee=(function(){var e={a:Q};function t(e,t){var n=e.exports;s.asm=n,F((w=s.asm.j).buffer),D=s.asm.r,function(){if(P--,s.monitorRunDependencies&&s.monitorRunDependencies(P),0==P&&(null!==B&&(clearInterval(B),B=null),W)){var e=W;W=null,e()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!x&&(u||l)){if("function"==typeof fetch&&!H(q))return fetch(q,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+q+"'";return e.arrayBuffer()})).catch((function(){return K(q)}));if(f)return new Promise((function(e,t){f(q,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return K(q)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),V(e)}))}if(P++,s.monitorRunDependencies&&s.monitorRunDependencies(P),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return k("Module.instantiateWasm callback failed with error: "+e),!1}(x||"function"!=typeof WebAssembly.instantiateStreaming||G(q)||H(q)||"function"!=typeof fetch?r(n):fetch(q,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),s.___wasm_call_ctors=function(){return(ee=s.___wasm_call_ctors=s.asm.k).apply(null,arguments)}),te=(s._init=function(){return(s._init=s.asm.l).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.m).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.n).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.o).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.p).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.q).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.s).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.t).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.u).apply(null,arguments)},s._All=function(){return(s._All=s.asm.v).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.w).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.x).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.y).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.z).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.A).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.B).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.C).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.D).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.E).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.F).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.G).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.H).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.I).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.J).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.K).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.L).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.M).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.N).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.O).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.P).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.Q).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.R).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.S).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.T).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.U).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.V).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.W).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.X).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Y).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.Z).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm._).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.$).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.aa).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.ba).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.ca).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.da).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ea).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.fa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ga).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ha).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ia).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ja).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ka).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.la).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ma).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.na).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.oa).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.pa).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.qa).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ra).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.sa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.ta).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ua).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.va).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.wa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.xa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ya).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.za).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.Aa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.Ba).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Ca).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Da).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ea).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Fa).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ga).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ha).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Ia).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ja).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Ka).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.La).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ma).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Na).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Oa).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Pa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Qa).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ra).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Sa).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Ta).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Ua).apply(null,arguments)},s.___errno_location=function(){return(te=s.___errno_location=s.asm.Va).apply(null,arguments)}),ne=s.stackSave=function(){return(ne=s.stackSave=s.asm.Wa).apply(null,arguments)},re=s.stackRestore=function(){return(re=s.stackRestore=s.asm.Xa).apply(null,arguments)},ae=s.stackAlloc=function(){return(ae=s.stackAlloc=s.asm.Ya).apply(null,arguments)};function se(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ie(e){function n(){Z||(Z=!0,s.calledRun=!0,I||(X(M),X(L),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),z.unshift(e);var e;X(z)}()))}e=e||p,P>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),O.unshift(e);var e;X(O)}(),P>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?S(e):function(){return function(e,t,n,r){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,$,t,n)}(e,t=ae(n),n)}return t},array:function(e){var t=ae(e.length);return function(e,t){C.set(e,t)}(e,t),t}},s=S(e),i=[],o=0;if(r)for(var u=0;u<r.length;u++){var l=a[n[u]];l?(0===o&&(o=ne()),i[u]=l(r[u])):i[u]=r[u]}var c=s.apply(null,i);return c=function(e){return"string"===t?R(e):"boolean"===t?Boolean(e):e}(c),0!==o&&re(o),c}(e,t,n,arguments)}},W=function e(){Z||ie(),Z||(W=e)},s.run=ie,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return ie(),e.ready});e.exports=a},264:(e,t,n)=>{var r=n(297),a=n(72),s=n(950),i=n(436),o=n(242),u=n(668),l=n(456);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},297:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},668:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},72:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},242:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},436:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},950:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},456:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l="random",c=s.pow(u,6),d=s.pow(2,52),p=2*d,h=255;function f(e,t,n){var r=[],h=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),f=new m(r),w=function(){for(var e=f.g(6),t=c,n=0;e<d;)e=(e+n)*u,t*=u,n=f.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(s[l]=e,t):e})(w,h,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s["seed"+l]=f,b(s.random(),a),e.exports){e.exports=f;try{i=n(857)}catch(e){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));s=s.mul(p).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return!(1&~this.low)},N.isEven=function(){return!(1&this.low)},N.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*h+a*p+s*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(h)}return s},N.div=N.divide,N.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},391:(e,t,n)=>{var r=n(180),a=n(181),s=n(31),i=n(67),o=n(833),u=n(717),l=n(801);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},180:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},833:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},801:(e,t,n)=>{var r;!function(a,s){var i,o=(0,eval)("this"),u=256,l="random",c=s.pow(u,6),d=s.pow(2,52),p=2*d,h=255;function f(e,t,n){var r=[],h=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),f=new m(r),w=function(){for(var e=f.g(6),t=c,n=0;e<d;)e=(e+n)*u,t*=u,n=f.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(s[l]=e,t):e})(w,h,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s["seed"+l]=f,b(s.random(),a),e.exports){e.exports=f;try{i=n(234)}catch(e){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},351:()=>{},893:()=>{},74:()=>{},281:()=>{},244:()=>{},556:()=>{},817:()=>{},590:()=>{},857:()=>{},530:()=>{},108:()=>{},551:()=>{},234:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};return(()=>{"use strict";n.r(r),n.d(r,{capturePic:()=>dV,getClientInfo:()=>hV,stop:()=>pV,version:()=>fV});var e={};n.r(e),n.d(e,{assertParamsValid:()=>Ys,computeFlatOffset:()=>li,computeOutShape:()=>Js,getNormalizedAxes:()=>ni,isSliceContinous:()=>ui,maskToAxes:()=>Zs,parseSliceParams:()=>ci,sliceInfo:()=>di,startForAxis:()=>ii,startIndicesWithElidedDims:()=>ri,stopForAxis:()=>oi,stopIndicesWithElidedDims:()=>ai,stridesForAxis:()=>si,stridesWithElidedDims:()=>Qs});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Xc,computeOutShape:()=>Kc,segOpComputeOptimalWindowSize:()=>qc});var a={};n.r(a),n.d(a,{ERF_A1:()=>Ic,ERF_A2:()=>Nc,ERF_A3:()=>Sc,ERF_A4:()=>Tc,ERF_A5:()=>Cc,ERF_P:()=>kc,PARALLELIZE_THRESHOLD:()=>pc,SELU_SCALE:()=>vc,SELU_SCALEALPHA:()=>wc,applyActivation:()=>Ku,assertAndGetBroadcastShape:()=>go,assertAxesAreInnerMostDims:()=>jo,assertParamsConsistent:()=>cc,assignToTypedArray:()=>Fc,axesAreInnerMostDims:()=>Vo,calculateShapes:()=>qs,checkEinsumDimSizes:()=>Vc,combineLocations:()=>Uo,complexWithEvenIndex:()=>Ec,complexWithOddIndex:()=>Ac,computeConv2DInfo:()=>Fi,computeConv3DInfo:()=>Di,computeDefaultPad:()=>Oi,computeDilation2DInfo:()=>Ei,computeOptimalWindowSize:()=>hc,computeOutAndReduceShapes:()=>Go,computeOutShape:()=>dc,computePool2DInfo:()=>Ai,computePool3DInfo:()=>Ri,convertConv2DDataFormat:()=>Vi,decodeEinsumEquation:()=>Bc,eitherStridesOrDilationsAreOne:()=>Wi,expandShapeToKeepDim:()=>Ho,exponent:()=>Oc,exponents:()=>Dc,fromStringArrayToUint8:()=>Zc,fromUint8ToStringArray:()=>Yc,getAxesPermutation:()=>qo,getBroadcastDims:()=>fo,getComplexWithIndex:()=>Rc,getEinsumComputePath:()=>Uc,getEinsumPermutation:()=>Wc,getFusedBiasGradient:()=>qu,getFusedDyActivation:()=>ju,getImageCenter:()=>fc,getInnerMostAxes:()=>Xo,getPermuted:()=>gc,getReductionAxes:()=>mo,getReshaped:()=>mc,getReshapedPermuted:()=>yc,getSliceBeginCoords:()=>bc,getSliceSize:()=>xc,getUndoAxesPermutation:()=>Ko,isIdentityPermutation:()=>Gc,log:()=>he,mergeRealAndImagArrays:()=>$c,prepareAndValidate:()=>Gs,prepareSplitSize:()=>jc,segment_util:()=>t,shouldFuse:()=>Xu,slice_util:()=>e,splitRealAndImagArrays:()=>_c,tupleValuesAreOne:()=>Bi,upcastType:()=>Na,validateInput:()=>js,validateUpdateShape:()=>Hs,warn:()=>pe});var s={};n.r(s),n.d(s,{json:()=>dx});var i={};n.r(i),n.d(i,{json:()=>px});var o={};n.r(o),n.d(o,{json:()=>hx});var u={};n.r(u),n.d(u,{json:()=>fx});var l={};n.r(l),n.d(l,{json:()=>mx});var c={};n.r(c),n.d(c,{json:()=>gx});var d={};n.r(d),n.d(d,{json:()=>yx});var p={};n.r(p),n.d(p,{json:()=>bx});var h={};n.r(h),n.d(h,{json:()=>xx});var f={};n.r(f),n.d(f,{json:()=>wx});var m={};n.r(m),n.d(m,{json:()=>vx});var g={};n.r(g),n.d(g,{json:()=>kx});var y={};n.r(y),n.d(y,{json:()=>Ix});var b={};n.r(b),n.d(b,{json:()=>Nx});var x={};n.r(x),n.d(x,{json:()=>Sx});var w={};n.r(w),n.d(w,{json:()=>Tx});var v={};n.r(v),n.d(v,{json:()=>Cx});var k={};n.r(k),n.d(k,{json:()=>$x});var I={};n.r(I),n.d(I,{json:()=>_x});var N={};n.r(N),n.d(N,{mx:()=>Ov,XI:()=>Ck,Nk:()=>$k,YG:()=>Ak,hH:()=>Lk,z3:()=>xI,sG:()=>EI,uM:()=>OI,vS:()=>JI,qB:()=>iN,GG:()=>uN,lg:()=>hN,rq:()=>cN,cu:()=>TN,WR:()=>IN,GE:()=>_N,px:()=>AN,jC:()=>jN,He:()=>XN,hE:()=>sS,BF:()=>dI,Dk:()=>gS,cl:()=>NS,_B:()=>LS,qy:()=>PS,Zy:()=>ZS,zv:()=>kv,dH:()=>Gv,HS:()=>Ik,yH:()=>yT,l3:()=>xT,z9:()=>vT,x6:()=>TT,eW:()=>OT,GK:()=>zT,SP:()=>WT,f6:()=>UT,dl:()=>WI,Dw:()=>KT,xT:()=>ZT,_X:()=>Zv,wz:()=>nC});class S{static VERSION="1.0.0";static STATIC_ASSETS_BASE_URL="https://makeup.sdk.orbo.ai/";static CLIENT_INFO={NAME:"Conscious Chemist"};static ASSETS_BASE_URL=`${this.STATIC_ASSETS_BASE_URL}bxU3A3bSJO/${this.VERSION}/smart-capture/`;static getClientInfo(){return{name:S.CLIENT_INFO.NAME}}}class T{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class C{refCount(e){return $("refCount")}incRef(e){return $("incRef")}timerAvailable(){return!0}time(e){return $("time")}read(e){return $("read")}readSync(e){return $("readSync")}numDataIds(){return $("numDataIds")}disposeData(e,t){return $("disposeData")}write(e,t,n){return $("write")}move(e,t,n,r,a){return $("move")}memory(){return $("memory")}floatPrecision(){return $("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return $("dispose")}}function $(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function _(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,R(e,t,n)}function E(e,t,n){return Math.max(e,Math.min(t,n))}function A(e){return e%2==0?e:e+1}function R(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function F(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function D(e,t,n=""){F(z(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function O(e){F(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function M(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||X(e)&&!n)for(let r=0;r<e.length;++r)M(e[r],t,n);else t.push(e);return t}function L(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function z(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function P(e){return e%1==0}function B(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function W(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function V(e,t=e=>0,n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function U(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function G(e,t){const n=t.length;return F((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),F(e.every((e=>P(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function H(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:G(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function q(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function K(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function X(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Y(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Z(e){return"string"==typeof e||e instanceof String}function J(e){return"number"==typeof e}function Q(e){return Array.isArray(e)?Q(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":J(e)?"float32":Z(e)?"string":"boolean"==typeof e?"bool":"float32"}function ee(e){return!!(e&&e.constructor&&e.call&&e.apply)}function te(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ne(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function re(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=re(e+t*o,i,n,r)}return a}function ae(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return re(0,e,t,n)}function se(e,t){const n=ie(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ie(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function oe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ae(e,new Float32Array(n));if("int32"===t)return ae(e,new Int32Array(n));if("bool"===t)return ae(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ue(e){e.forEach((t=>{F(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function le(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ce(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function de(e){return e&&e.then&&"function"==typeof e.then}function pe(...e){ye().getBool("IS_TEST")||ye().getBool("PROD")||console.warn(...e)}function he(...e){ye().getBool("IS_TEST")||ye().getBool("PROD")||console.log(...e)}const fe="tfjsflags";class me{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ge,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&pe(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];pe(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(de(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);fe in e&&e[fe].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function ge(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function ye(){return xe}let be,xe=null;function we(){if(null==be){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}be=e}return be}function ve(e,t){const n=function(){const e=we();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const ke="Abs",Ie="Acos",Ne="Acosh",Se="Add",Te="AddN",Ce="All",$e="Any",_e="ArgMax",Ee="ArgMin",Ae="Asin",Re="Asinh",Fe="Atan",De="Atanh",Oe="Atan2",Me="AvgPool",Le="AvgPoolGrad",ze="AvgPool3D",Pe="AvgPool3DGrad",Be="BatchMatMul",We="BatchToSpaceND",Ve="Bincount",Ue="BroadcastArgs",Ge="Cast",He="Ceil",je="ClipByValue",qe="Complex",Ke="ComplexAbs",Xe="Concat",Ye="Conv2D",Ze="Conv2DBackpropFilter",Je="Conv2DBackpropInput",Qe="Conv3D",et="Conv3DBackpropFilterV2",tt="Conv3DBackpropInputV2",nt="Cos",rt="Cosh",at="Cumsum",st="CropAndResize",it="DenseBincount",ot="DepthToSpace",ut="DepthwiseConv2dNative",lt="DepthwiseConv2dNativeBackpropFilter",ct="DepthwiseConv2dNativeBackpropInput",dt="Diag",pt="Dilation2D",ht="Dilation2DBackpropInput",ft="Dilation2DBackpropFilter",mt="RealDiv",gt="Einsum",yt="Elu",bt="EluGrad",xt="Erf",wt="Equal",vt="Exp",kt="ExpandDims",It="Expm1",Nt="FFT",St="Fill",Tt="FlipLeftRight",Ct="Floor",$t="FloorDiv",_t="FusedBatchNorm",Et="GatherV2",At="GatherNd",Rt="Greater",Ft="GreaterEqual",Dt="Identity",Ot="IFFT",Mt="Imag",Lt="IsFinite",zt="IsInf",Pt="IsNan",Bt="LeakyRelu",Wt="Less",Vt="LessEqual",Ut="LinSpace",Gt="Log",Ht="Log1p",jt="LogicalAnd",qt="LogicalNot",Kt="LogicalOr",Xt="LRN",Yt="LRNGrad",Zt="Max",Jt="Maximum",Qt="MaxPool",en="MaxPoolGrad",tn="MaxPool3D",nn="MaxPool3DGrad",rn="MaxPoolWithArgmax",an="Mean",sn="Min",on="Minimum",un="MirrorPad",ln="Mod",cn="Multinomial",dn="Multiply",pn="Neg",hn="NotEqual",fn="NonMaxSuppressionV3",mn="NonMaxSuppressionV4",gn="NonMaxSuppressionV5",yn="OnesLike",bn="OneHot",xn="Pack",wn="PadV2",vn="Pow",kn="Prelu",In="Prod",Nn="Range",Sn="Real",Tn="Reciprocal",Cn="Relu",$n="Reshape",_n="ResizeNearestNeighbor",En="ResizeNearestNeighborGrad",An="ResizeBilinear",Rn="ResizeBilinearGrad",Fn="Relu6",Dn="Reverse",On="Round",Mn="Rsqrt",Ln="ScatterNd",zn="Select",Pn="Selu",Bn="Slice",Wn="Sin",Vn="Sinh",Un="Sign",Gn="Sigmoid",Hn="Softplus",jn="Sqrt",qn="Sum",Kn="SpaceToBatchND",Xn="SplitV",Yn="Softmax",Zn="SparseFillEmptyRows",Jn="SparseReshape",Qn="SparseSegmentMean",er="SparseSegmentSum",tr="SparseToDense",nr="SquaredDifference",rr="Square",ar="StridedSlice",sr="StringNGrams",ir="StringSplit",or="StringToHashBucketFast",ur="Sub",lr="Tan",cr="Tanh",dr="Tile",pr="TopK",hr="Transform",fr="Transpose",mr="Unique",gr="Unpack",yr="UnsortedSegmentSum",br="ZerosLike",xr="Step",wr="FromPixels",vr="RotateWithOffset",kr="_FusedMatMul",Ir="FusedConv2D",Nr="FusedDepthwiseConv2D",Sr=ve("kernelRegistry",(()=>new Map)),Tr=ve("gradRegistry",(()=>new Map));function Cr(e,t){const n=Rr(e,t);return Sr.get(n)}function $r(e){return Tr.get(e)}function _r(e){const t=Sr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Er(e){const{kernelName:t,backendName:n}=e,r=Rr(t,n);Sr.has(r)&&pe(`The kernel '${t}' for backend '${n}' is already registered`),Sr.set(r,e)}function Ar(e){const{kernelName:t}=e;Tr.has(t)&&ye().getBool("DEBUG")&&pe(`Overriding the gradient for '${t}'`),Tr.set(t,e)}function Rr(e,t){return`${t}_${e}`}var Fr=n(570);const Dr=n.n(Fr)()||Fr;function Or(e){return Dr.fromString(e,!0,16)}const Mr=Or("c3a5c85c97cb3127"),Lr=Or("b492b66fbe98f273"),zr=Or("9ae16a3b2f90404f");function Pr(e){return e.xor(e.shru(47))}function Br(e,t,n){const r=e.slice(t,t+n);return Dr.fromBytes(Array.from(r),!0,!0)}function Wr(e,t){return Br(e,t,8)}function Vr(e,t){return Br(e,t,4)}function Ur(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gr(e,t,n=Or("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Hr(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Ur(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(Ur(a,44)),[a.add(r),s.add(i)]}(Wr(e,t),Wr(e,t+8),Wr(e,t+16),Wr(e,t+24),n,r)}function jr(e,t=e.length){const n=Dr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=zr.add(2*t),r=Wr(e,0).add(zr),a=Wr(e,t-8);return Gr(Ur(a,37).mul(n).add(r),Ur(r,25).add(a).mul(n),n)}if(t>=4){const n=zr.add(2*t);return Gr(Vr(e,0).shl(3).add(t),Vr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Pr(zr.mul(n).xor(Mr.mul(r))).mul(zr)}return zr}(e,t):function(e,t=e.length){const n=zr.add(2*t),r=Wr(e,0).mul(Lr),a=Wr(e,8),s=Wr(e,t-8).mul(n),i=Wr(e,t-16).mul(zr);return Gr(Ur(r.add(a),43).add(Ur(s,30)).add(i),r.add(Ur(a.add(zr),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=zr.add(2*t),r=Wr(e,0).mul(zr),a=Wr(e,8),s=Wr(e,t-8).mul(n),i=Wr(e,t-16).mul(zr),o=Ur(r.add(a),43).add(Ur(s,30)).add(i),u=Gr(o,r.add(Ur(a.add(zr),18)).add(s),n),l=Wr(e,16).mul(n),c=Wr(e,24),d=o.add(Wr(e,t-32)).mul(n),p=u.add(Wr(e,t-24)).mul(n);return Gr(Ur(l.add(c),43).add(Ur(d,30)).add(p),l.add(Ur(c.add(r),18)).add(d),n)}(e,t);let r=n,a=n.mul(Lr).add(113),s=Pr(a.mul(zr).add(113)).mul(zr),i=[Dr.UZERO,Dr.UZERO],o=[Dr.UZERO,Dr.UZERO];r=r.mul(zr).add(Wr(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ur(r.add(a).add(i[0]).add(Wr(e,u+8)),37).mul(Lr),a=Ur(a.add(i[1]).add(Wr(e,u+48)),42).mul(Lr),r=r.xor(o[1]),a=a.add(i[0]).add(Wr(e,u+40)),s=Ur(s.add(o[0]),33).mul(Lr),i=Hr(e,u,i[1].mul(Lr),r.add(o[0])),o=Hr(e,u+32,s.add(o[1]),a.add(Wr(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const d=Lr.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ur(r.add(a).add(i[0]).add(Wr(e,u+8)),37).mul(d),a=Ur(a.add(i[1]).add(Wr(e,u+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Wr(e,u+40))),s=Ur(s.add(o[0]),33).mul(d),i=Hr(e,u,i[1].mul(d),r.add(o[0])),o=Hr(e,u+32,s.add(o[1]),a.add(Wr(e,u+16))),[s,r]=[r,s],Gr(Gr(i[0],o[0],d).add(Pr(a).mul(Mr)).add(s),Gr(i[1],o[1],d).add(r),d)}function qr(e,t){return"string"===t?Yr(e):Kr([e],t)}function Kr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=M(e)),ye().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Xr(){return ye().platform.now()}function Yr(e,t="utf-8"){return t=t||"utf-8",ye().platform.encode(e,t)}function Zr(e,t="utf-8"){return t=t||"utf-8",ye().platform.decode(e,t)}class Jr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ea)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Xr();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Xr()-i})}if(ye().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Qr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Qr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ea{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?W(`${r}ms`,9):r.error,o=W(e,25),u=t.rank,l=t.size,c=W(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ta(e,t,n,r){const a=ne(t),s=function(e,t,n,r){const a=L(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?sa(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],na(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=aa(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function na(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Z(e)?`'${e}'`:"bool"===n?ra(e):parseFloat(e.toFixed(7)).toString(),W(r,t)}function ra(e){return 0===e?"false":"true"}function aa(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[na(sa(e)[0],0,n)]:"bool"===n?[ra(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=sa(r),s=sa(s)),["["+r.map(((e,t)=>na(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>na(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?sa(e):Array.from(e)).map(((e,t)=>na(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;p.push(...aa(e.slice(r,s),l,n,c,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*d,s=r+d;p.push(...aa(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,s=r+d;p.push(...aa(e.slice(r,s),l,n,c,a,t===o-1))}const h=2===u?",":"";p[0]="["+p[0]+h;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+h;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function sa(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ia{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=L(e),null!=n){const e=n.length;F(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||q(t,this.size),this.strides=ne(e)}set(e,...t){0===t.length&&(t=[0]),F(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return oa().makeTensor(this.values,this.shape,this.dtype)}}let oa=null,ua=null,la=null;class ca{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=L(e),this.strides=ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ua.buffer(this.shape,this.dtype,e)}bufferSync(){return ua.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ae(this.shape,e,"complex64"===this.dtype)}arraySync(){return ae(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=oa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=oa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await oa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(oa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ua.print(this,e)}clone(){return this.throwIfDisposed(),ua.clone(this)}toString(e=!1){return ta(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ua.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),oa().makeVariable(this,e,t,n)}}function da(){return ve("Tensor",(()=>ca))}Object.defineProperty(ca,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),da();class pa extends ca{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!z(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);oa().disposeTensor(this),this.dataId=e.dataId,oa().incRef(this,null)}dispose(){oa().disposeVariable(this),this.isDisposedInternal=!0}}var ha,fa,ma,ga,ya,ba,xa,wa,va,ka;Object.defineProperty(pa,Symbol.hasInstance,{value:e=>e instanceof ca&&null!=e.assign&&e.assign instanceof Function}),(fa=ha||(ha={})).R0="R0",fa.R1="R1",fa.R2="R2",fa.R3="R3",fa.R4="R4",fa.R5="R5",fa.R6="R6",(ga=ma||(ma={})).float32="float32",ga.int32="int32",ga.bool="int32",ga.complex64="complex64",(ba=ya||(ya={})).float32="float32",ba.int32="int32",ba.bool="bool",ba.complex64="complex64",(wa=xa||(xa={})).float32="float32",wa.int32="float32",wa.bool="float32",wa.complex64="complex64",(ka=va||(va={})).float32="complex64",ka.int32="complex64",ka.bool="complex64",ka.complex64="complex64";const Ia={float32:xa,int32:ma,bool:ya,complex64:va};function Na(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ia[e][t]}function Sa(e){return Na(e,"int32")}function Ta(e,t){if(e.dtype===t.dtype)return[e,t];const n=Na(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ca(e,t){return t.some((t=>t.id===e.id))}function $a(e){const t=[];return _a(e,t,new Set),t}function _a(e,t,n){if(null==e)return;if(e instanceof ca)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),_a(r,t,n))}}function Ea(e){return null!=e.kernelName}class Aa{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ra{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Aa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(pe(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Jr(this.backendInstance),!0}setupRegisteredKernels(){_r(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){_r(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof C||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,pe(`Initialization of backend ${e} failed`),pe(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return pe(`Initialization of backend ${e} failed`),pe(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ra.nextTensorId++}nextVariableId(){return Ra.nextVariableId++}clone(e){const t=Da.runKernel(Dt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Da.runKernel(Ge,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Cr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Ea(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ea(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=Cr(t,this.backendName);F(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,d=Ea(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(u,l,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=$r(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(F(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Z(e[0])&&(a=e.map((e=>Yr(e))));const s=r.write(a,t,n),i=new ca(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new ca(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new pa(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Y(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof pa||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Y(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=$r(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=ie(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$a(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(F(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));F(a instanceof ca,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=se(L(e),"float32");return Da.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!z(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Oa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return F(ee(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;F(t.every((e=>e instanceof ca)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),F(n.value instanceof ca,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),F(ee(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];F(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),F(s.every((e=>e instanceof ca)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Xr(),n=await this.backend.time(e);return n.wallMs=Xr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Aa;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Fa(){const e=we();if(null==e._tfengine){const t=new me(e);e._tfengine=new Ra(t)}var t;return t=e._tfengine.ENV,xe=t,oa=()=>e._tfengine,e._tfengine}Ra.nextTensorId=0,Ra.nextVariableId=0;const Da=Fa();function Oa(e,t){const n={a:e,b:t};return Da.runKernel(Se,n)}function Ma(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function La(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const za=ye();function Pa(e,t){let n=e;if(X(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||X(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ye().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ba(e,r,[]),r}function Ba(e,t,n){if(n=n||[],!Array.isArray(e)&&!X(e))return void F(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));F(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),F(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ba(e[t],r,n.concat(t))}function Wa(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Va(e,t,n,r="numeric"){if(e instanceof ca)return Wa(r,e.dtype,t,n),e;let a=Q(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Wa(r,a,t,n),null==e||!X(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Pa(e,a);X(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Kr(e,a):M(e,[],!0);return Da.makeTensor(i,s,a)}function Ua(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Va(e,`${t}[${a}]`,n,r)))}function Ga(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{Da.startScope(n);try{const t=r(...e);return de(t)&&console.error("Cannot return a Promise inside of tidy."),Da.endScope(t),t}catch(e){throw Da.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}za.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),za.registerFlag("IS_BROWSER",(()=>La())),za.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),za.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),za.registerFlag("PROD",(()=>!1)),za.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>za.getBool("DEBUG"))),za.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),za.registerFlag("IS_TEST",(()=>!1)),za.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),za.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Ha=Ga({complex_:function(e,t){const n=Va(e,"real","complex"),r=Va(t,"imag","complex");D(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Da.runKernel(qe,a)}});function ja(e,t,n,r){if(null==r&&(r=Q(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!X(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ue(t);const e=L(t),r=L(n);F(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==L(t.slice(e));F(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return X(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Kr(e,r):M(e,[],!0),Da.makeTensor(e,t,r)}function qa(e,t,n){return ja(e,t,Pa(e,n),n)}const Ka={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Xa(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Ya(await Promise.all(r)),specs:n}}function Ya(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Za="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ja(e){return Za?Buffer.byteLength(e):new Blob([e]).size}function Qa(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function es(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ts(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ja(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ja(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ns(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class rs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==rs.instance&&(rs.instance=new rs),rs.instance}static registerSaveRouter(e){rs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){rs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return rs.getHandlers(e,"save")}static getLoadHandlers(e,t){return rs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?rs.getInstance().loadRouters:rs.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const as=e=>rs.getSaveHandlers(e),ss="tensorflowjs",is="models_store",os="model_info_store";function us(){if(!ye().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ls(e){const t=e.result;t.createObjectStore(is,{keyPath:"modelPath"}),t.createObjectStore(os,{keyPath:"modelPath"})}class cs{constructor(e){if(this.indexedDB=us(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(ss,1);r.onupgradeneeded=()=>ls(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(is,"readonly"),r=t.objectStore(is).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=ts(t),s=a.transaction(os,"readwrite");let i=s.objectStore(os);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(is,"readwrite");const o=u.objectStore(is).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(os);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}cs.URL_SCHEME="indexeddb://";const ds=e=>{return ye().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(cs.URL_SCHEME)?(t=e.slice(cs.URL_SCHEME.length),new cs(t)):null;var t};rs.registerSaveRouter(ds),rs.registerLoadRouter(ds);class ps{constructor(){this.indexedDB=us()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ss,1);n.onupgradeneeded=()=>ls(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(os,"readonly"),s=a.objectStore(os).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(cs.URL_SCHEME)?t.slice(cs.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(ss,1);r.onupgradeneeded=()=>ls(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(os,"readwrite"),i=s.objectStore(os),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(is,"readwrite");const r=u.objectStore(is).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const hs="/",fs="tensorflowjs_models",ms="info",gs="model_topology",ys="weight_specs",bs="weight_data",xs="model_metadata";function ws(e){return{info:[fs,e,ms].join(hs),topology:[fs,e,gs].join(hs),weightSpecs:[fs,e,ys].join(hs),weightData:[fs,e,bs].join(hs),modelMetadata:[fs,e,xs].join(hs)}}function vs(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ks(e){const t=e.split(hs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(hs)}class Is{constructor(e){if(!ye().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ws(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=ts(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Za)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw vs(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Za){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}Is.URL_SCHEME="localstorage://";const Ns=e=>{return ye().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Is.URL_SCHEME)?(t=e.slice(Is.URL_SCHEME.length),new Is(t)):null;var t};rs.registerSaveRouter(Ns),rs.registerLoadRouter(Ns);class Ss{constructor(){F(ye().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),F("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=fs+hs,n=hs+ms;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ks(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ws(e=(t=e).startsWith(Is.URL_SCHEME)?t.slice(Is.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return vs(n),r}}class Ts{constructor(){this.managers={}}static getInstance(){return null==Ts.instance&&(Ts.instance=new Ts),Ts.instance}static registerManager(e,t){F(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),F(e.length>0,(()=>"scheme must not be an empty string."));const n=Ts.getInstance();F(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Cs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(ye().get("IS_BROWSER")){ye().setPlatform("browser",new Cs);try{Ts.registerManager(Is.URL_SCHEME,new Ss)}catch(e){}try{Ts.registerManager(cs.URL_SCHEME,new ps)}catch(e){}}let $s;function _s(e,t="float32",n){return t=t||"float32",ue(e),new ia(e,t,n)}ye().get("IS_NODE")&&ye().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ye().global.fetch?ye().global.fetch(e,t):(null==$s&&($s=n(817)),$s(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Es=Ga({cast_:function(e,t){const n=Va(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Da.runKernel(Ge,r,a)}}),As=Ga({clone_:function(e){const t={x:Va(e,"x","clone","string_or_numeric")};return Da.runKernel(Dt,t)}});function Rs(e){return new Promise((e=>setTimeout(e))).then(e)}Fa(),ua={buffer:_s,cast:Es,clone:As,print:function(e,t=!1){console.log(e.toString(t))}};class Fs{constructor(e){if(!ye().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Fs.URL_SCHEME)&&(e=e.slice(Fs.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=es(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Rs((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Rs((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ts(e)}}}}function Ds(e,t,n,r){!function(e){F(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){F(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),F(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),F(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Os(e,t){null==t&&(t={});const n=null==t.fetchFunc?ye().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ds(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ds(a,t.onProgress,.5,1)}Fs.URL_SCHEME="downloads://",rs.registerSaveRouter((e=>ye().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Fs.URL_SCHEME)?function(e="model"){return new Fs(e)}(e.slice(Fs.URL_SCHEME.length)):null));class Ms{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(F("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ye().platform.fetch,F(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&F(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=es(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:ts(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Qa(await Os(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ls(e){return null!=e.match(Ms.URL_SCHEME_REGEX)}Ms.URL_SCHEME_REGEX=/^https?:\/\//;const zs=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ls(e))):Ls(e),n)return Ps(e,t)}return null};function Ps(e,t){return new Ms(e,t)}function Bs(e,t){return Ps(e,t)}rs.registerSaveRouter(zs),rs.registerLoadRouter(zs);class Ws{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}let Vs;const Us=Ga({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Cr(wr,Da.backendName)){const n={pixels:e},r={numChannels:t};return Da.runKernel(wr,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||o){if(null==Vs)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Vs=new OffscreenCanvas(1,1).getContext("2d")}else Vs=document.createElement("canvas").getContext("2d");Vs.canvas.width=u,Vs.canvas.height=l,Vs.drawImage(e,0,0,u,l),c=Vs.getImageData(0,0,u,l).data}if(4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return function(e,t,n){if(O(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Pa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ja(e,t,r,n)}(d,[l,u,t],"int32")}});function Gs(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===L(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...ne(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}function Hs(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function js(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Hs(n,t,e)}function qs(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:L(t.shape)/o,sliceSize:i,strides:[...ne(n.slice(0,a)),1],outputSize:L(n)}}const Ks=-2,Xs=-1;function Ys(e,t,n){const r=e.shape.length;F(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),F(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)F(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Zs(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Js(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Qs(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ei(e,t,n){return n<=e?n:n-(t-1)}function ti(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ni(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),d=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ri(i,u,l,r,e),d=ai(o,u,l,a,e),p=Qs(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=ii(i,r,s,e,t,u),d[t]=oi(o,a,s,e,t,u),p[t]=si(s,t,u);return{begin:c,end:d,strides:p}}function ri(e,t,n,r,a){const s=[...a],i=ti(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=ei(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function ai(e,t,n,r,a){const s=[...a],i=ti(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=ei(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=E(0,s[e],a[e])}return s}function si(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ii(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=E(0,i,u-1),i}function oi(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?E(0,i,u):E(-1,i,u-1),i}function ui(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function li(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ci(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{F(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(F(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function di(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)c&&1<<e&o&&d.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ks),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Xs),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,p);let h=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=pi(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=pi(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;h=h&&e,f=f&&(0===t&&1===p.strides[t]||e)}else h=h&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Ks&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==Ks)),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function pi(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class hi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class fi{constructor(){this.classNameMap={}}static getMap(){return null==fi.instance&&(fi.instance=new fi),fi.instance}static register(e){fi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function mi(e){F(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),F("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),F(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),fi.register(e)}function gi(){return Da}function yi(){return Da.memory()}function bi(e,t){return Da.tidy(e,t)}function xi(e){$a(e).forEach((e=>e.dispose()))}function wi(e){return Da.keep(e)}function vi(e,t,n=1){return Da.registerBackend(e,t,n)}function ki(e){return Da.customGrad(e)}function Ii(e,t){if((X(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&X(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ja(e,[],[],t)}la=function(e){ye().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Ni extends hi{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return xi(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){F(ee(e),(()=>"The f passed in variableGrads(f) must be a function")),F(null==t||Array.isArray(t)&&t.every((e=>e instanceof pa)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Da.registeredVariables)t.push(Da.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;F((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=Da.gradients(e,t,null,!0);F(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),F(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&xi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ii(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ni,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Si=Ga({abs_:function(e){const t=Va(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Da.runKernel(Ke,e)}{const e={x:t};return Da.runKernel(ke,e)}}}),Ti=Ga({add_:function(e,t){let n=Va(e,"a","add"),r=Va(t,"b","add");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel(Se,a)}}),Ci=Ga({all_:function(e,t=null,n=!1){const r={x:Va(e,"x","all","bool")},a={axis:t,keepDims:n};return Da.runKernel(Ce,r,a)}}),$i=Ga({any_:function(e,t=null,n=!1){const r={x:Va(e,"x","any","bool")},a={axis:t,keepDims:n};return Da.runKernel($e,r,a)}}),_i=Ga({argMax_:function(e,t=0){const n={x:Va(e,"x","argMax")},r={axis:t};return Da.runKernel(_e,n,r)}});function Ei(e,t,n,r,a="NHWC",s){return Fi(e,[...t,e[3]],n,s,r,null,null,Vi(a))}function Ai(e,t,n,r,a,s,i="channelsLast"){const[o,u]=Mi(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Fi(e,l,n,r,a,s,!1,i)}function Ri(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=Li(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",c=[o,u,l,e[1],e[1]]}return Di(e,c,n,r,a,!1,d,s)}function Fi(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c]=e}const[p,h,,f]=t,[m,g]=Mi(n),[y,b]=Mi(r),x=zi(p,y),w=zi(h,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Oi(e,t,n));const s=e[1];return[Pi((e[0]-t+2*r)/n+1,a),Pi((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),p=e-u,h=Math.floor(o/2);l={top:u,bottom:p,left:h,right:o-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},c=Pi((t-s+p+h)/r+1,o),d=Pi((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:d}}(a,l,c,m,g,x,w,s,o),N=i?f*d:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Di(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c,d]=e}const[h,f,m,,g]=t,[y,b,x]=Li(n),[w,v,k]=Li(r),I=zi(h,w),N=zi(f,v),S=zi(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:_}=function(e,t,n,r,a,s,i,o,u,l,c){let d,p,h,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Oi(e,t,r));const i=e[1],o=e[2];return[Pi((e[0]-t+2*a)/r+1,s),Pi((i-t+2*a)/r+1,s),Pi((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);p=s[0],h=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(h-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);d={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),h=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(a,l,c,d,y,b,x,I,N,S,o),E=s?g*p:g;let A;return"channelsFirst"===i?A=[u,E,C,$,_]:"channelsLast"===i&&(A=[u,C,$,_,E]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:d,inChannels:p,outDepth:C,outHeight:$,outWidth:_,outChannels:E,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Oi(e,t,n,r=1){const a=zi(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Mi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Li(e){return"number"==typeof e?[e,e,e]:e}function zi(e,t){return t<=1?e:e+(e-1)*(t-1)}function Pi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Bi(e){const[t,n,r]=Mi(e);return 1===t&&1===n&&1===r}function Wi(e,t){return Bi(e)||Bi(t)}function Vi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Ui=Ga({reshape_:function(e,t){const n={x:Va(e,"x","reshape","string_or_numeric")},r={shape:t};return Da.runKernel($n,n,r)}}),Gi=Ga({avgPool_:function(e,t,n,r,a){const s=Va(e,"x","avgPool","float32");F(Wi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ui(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&F(P(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Da.runKernel(Me,u,l);return c=Es(c,s.dtype),o?Ui(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Hi=Ga({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=Va(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),F("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&F(P(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=Da.runKernel(ze,l,c);return d=Es(d,o.dtype),u?Ui(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ji=Ga({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=Va(e,"x","batchNorm"),o=Va(t,"mean","batchNorm"),u=Va(n,"variance","batchNorm");let l,c;null!=a&&(l=Va(a,"scale","batchNorm")),null!=r&&(c=Va(r,"offset","batchNorm")),F(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:function(e){let t;return t=0===e.rank||1===e.rank?Ui(e,[1,1,1,e.size]):2===e.rank?Ui(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ui(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:s},h=Da.runKernel(_t,d,p);return Ui(h,i.shape)}}),qi=Ga({batchNorm2d_:function(e,t,n,r,a,s){const i=Va(e,"x","batchNorm"),o=Va(t,"mean","batchNorm"),u=Va(n,"variance","batchNorm");let l,c;return null!=a&&(l=Va(a,"scale","batchNorm")),null!=r&&(c=Va(r,"offset","batchNorm")),F(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),F(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),F(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&F(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&F(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ji(i,o,u,c,l,s)}}),Ki=Ga({batchNorm3d_:function(e,t,n,r,a,s){const i=Va(e,"x","batchNorm"),o=Va(t,"mean","batchNorm"),u=Va(n,"variance","batchNorm");let l,c;return null!=a&&(l=Va(a,"scale","batchNorm")),null!=r&&(c=Va(r,"offset","batchNorm")),F(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),F(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),F(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&F(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&F(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ji(i,o,u,c,l,s)}}),Xi=Ga({batchNorm4d_:function(e,t,n,r,a,s){const i=Va(e,"x","batchNorm"),o=Va(t,"mean","batchNorm"),u=Va(n,"variance","batchNorm");let l,c;return null!=a&&(l=Va(a,"scale","batchNorm")),null!=r&&(c=Va(r,"offset","batchNorm")),F(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),F(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),F(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&F(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&F(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ji(i,o,u,c,l,s)}}),Yi=Ga({clipByValue_:function(e,t,n){const r=Va(e,"x","clipByValue");F(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return Da.runKernel(je,a,s)}}),Zi=Ga({concat_:function(e,t=0){F(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ua(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return As(n[0]);const r=n,a={axis:t};return Da.runKernel(Xe,r,a)}}),Ji=Ga({concat1d_:function(e){return Zi(e,0)}}),Qi=Ga({concat2d_:function(e,t){return Zi(e,t)}}),eo=Ga({concat3d_:function(e,t){return Zi(e,t)}}),to=Ga({concat4d_:function(e,t){return Zi(e,t)}}),no=Ga({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Va(e,"x","conv2d","float32"),u=Va(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Ui(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),F(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&F(P(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d="NHWC"===a?l.shape[3]:l.shape[1];F(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),F(Wi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Da.runKernel(Ye,p,h);return c?Ui(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ro=Ga({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=Va(e,"x","conv1d"),u=Va(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Ui(o,[1,o.shape[0],o.shape[1]])),F(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),F(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&F(P(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),F(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),F(Wi(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),F("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=Ui(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Ui(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=no(p,d,[1,n],r,"NHWC",[1,s],i);return Ui(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),ao=Ga({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){F(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ui(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),F(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),F(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),F(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],d="NHWC"===s?u.shape[3]:u.shape[1];F(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),F(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&F(P(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Da.runKernel(Je,p,h);return l?Ui(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),so=Ga({conv2dTranspose_:function(e,t,n,r,a,s){const i=Va(e,"x","conv2dTranspose"),o=Va(t,"filter","conv2dTranspose");return ao(n,i,o,r,a,"NHWC",s)}}),io=Ga({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=Va(e,"x","conv3d"),o=Va(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),F(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),F(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),F(Wi(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),F("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},p=Da.runKernel(Qe,c,d);return l?Ui(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),oo=Ga({conv3DBackpropInput_:function(e,t,n,r,a){F(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ui(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];F(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),F(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),F(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),F(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),F(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},p=Da.runKernel(tt,c,d);return o?Ui(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),uo=Ga({conv3dTranspose_:function(e,t,n,r,a){const s=Va(e,"x","conv3dTranspose"),i=Va(t,"filter","conv3dTranspose");return oo(n,s,i,r,a)}}),lo=Ga({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Va(e,"x","depthwiseConv2d","float32"),u=Va(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Ui(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),F(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),F(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&F(P(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},h=Da.runKernel(ut,d,p);return c?Ui(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),co=Ga({floorDiv_:function(e,t){let n=Va(e,"a","floorDiv"),r=Va(t,"b","floorDiv");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel($t,a)}}),po=Ga({div_:function(e,t){let n=Va(e,"a","div"),r=Va(t,"b","div");if([n,r]=Ta(n,r),"int32"===n.dtype&&"int32"===r.dtype)return co(n,r);const a={a:n,b:r};return Da.runKernel(mt,a,{})}}),ho=Ga({elu_:function(e){const t={x:Va(e,"x","elu","float32")};return Da.runKernel(yt,t)}});function fo(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function mo(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function go(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const yo=Ga({equal_:function(e,t){let n=Va(e,"a","equal","string_or_numeric"),r=Va(t,"b","equal","string_or_numeric");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(wt,a)}}),bo=Ga({exp_:function(e){const t={x:Va(e,"x","exp")};return Da.runKernel(vt,t)}}),xo=Ga({expandDims_:function(e,t=0){const n=Va(e,"x","expandDims","string_or_numeric");F(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return Da.runKernel(kt,r,a)}}),wo=Ga({tile_:function(e,t){const n=Va(e,"x","tile","string_or_numeric");F(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return Da.runKernel(dr,r,a)}}),vo=Ga({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=_s([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Ui(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return wo(xo(i,0),[n[0],1,1]);if(2===n.length)return wo(xo(xo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return wo(xo(xo(xo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ko(e,t,n){const r={shape:e,value:t,dtype:n};return Da.runKernel(St,{},r)}const Io=Ga({floor_:function(e){const t={x:Va(e,"x","floor","float32")};return Da.runKernel(Ct,t)}}),No=Ga({gather_:function(e,t,n=0,r=0){const a={x:Va(e,"x","gather"),indices:Va(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Da.runKernel(Et,a,s)}}),So=Ga({greater_:function(e,t){let n=Va(e,"a","greater","string_or_numeric"),r=Va(t,"b","greater","string_or_numeric");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(Rt,a)}}),To=Ga({greaterEqual_:function(e,t){let n=Va(e,"a","greaterEqual","string_or_numeric"),r=Va(t,"b","greaterEqual","string_or_numeric");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(Ft,a)}}),Co=Ga({leakyRelu_:function(e,t=.2){const n={x:Va(e,"x","leakyRelu")},r={alpha:t};return Da.runKernel(Bt,n,r)}}),$o=Ga({log_:function(e){const t={x:Va(e,"x","log","float32")};return Da.runKernel(Gt,t)}}),_o=Ga({log1p_:function(e){const t={x:Va(e,"x","log1p")};return Da.runKernel(Ht,t)}}),Eo=Ga({max_:function(e,t=null,n=!1){const r={x:Va(e,"x","max")},a={reductionIndices:t,keepDims:n};return Da.runKernel(Zt,r,a)}}),Ao=Ga({mul_:function(e,t){let n=Va(e,"a","mul"),r=Va(t,"b","mul");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel(dn,a)}}),Ro=Ga({sub_:function(e,t){let n=Va(e,"a","sub"),r=Va(t,"b","sub");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel(ur,a)}}),Fo=Ga({sum_:function(e,t=null,n=!1){let r=Va(e,"x","sum");"bool"===r.dtype&&(r=Es(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Da.runKernel(qn,a,s)}}),Do=Ga({logSoftmax_:function(e,t=-1){const n=Va(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ki(((e,n)=>{const r=Eo(e,t,!0),a=Ro(e,r),s=Ro(Es(a,"float32"),$o(Fo(bo(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=bo(r);return Ro(e,Ao(Fo(e,t,!0),a))}}}))(n)}}),Oo=Ga({logicalAnd_:function(e,t){const n=Va(e,"a","logicalAnd","bool"),r=Va(t,"b","logicalAnd","bool");go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(jt,a)}}),Mo=Ga({matMul_:function(e,t,n=!1,r=!1){let a=Va(e,"a","matMul"),s=Va(t,"b","matMul");[a,s]=Ta(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Da.runKernel(Be,i,o)}}),Lo=Ga({maxPool_:function(e,t,n,r,a){const s=Va(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Ui(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),F(Wi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&F(P(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Da.runKernel(Qt,u,l);return o?Ui(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),zo=Ga({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=Va(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),F("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&F(P(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=Da.runKernel(tn,l,c);return u?Ui(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Po=Ga({maximum_:function(e,t){let n=Va(e,"a","maximum"),r=Va(t,"b","maximum");[n,r]=Ta(n,r),"bool"===n.dtype&&(n=Es(n,"int32"),r=Es(r,"int32")),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(Jt,a)}}),Bo=Ga({mean_:function(e,t=null,n=!1){const r={x:Va(e,"x","mean")},a={axis:t,keepDims:n};return Da.runKernel(an,r,a)}}),Wo=Ga({minimum_:function(e,t){let n=Va(e,"a","minimum"),r=Va(t,"b","minimum");[n,r]=Ta(n,r),"bool"===n.dtype&&(n=Es(n,"int32"),r=Es(r,"int32")),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(on,a)}});function Vo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Uo(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Go(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Ho(e,t){return Uo(e,t.map((e=>1)),t)}function jo(e,t,n){F(Vo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function qo(e,t){if(Vo(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ko(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Xo(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Yo=Ga({square_:function(e){const t=Va(e,"x","square");return Da.runKernel("Square",{x:t},{})}}),Zo=Ga({moments_:function(e,t=null,n=!1){const r=G(t,(e=Va(e,"x","moments")).shape),a=Bo(e,r,n);let s=a.shape;n||(s=Ho(a.shape,r));const i=Yo(Ro(Es(e,"float32"),Ui(a,s)));return{mean:a,variance:Bo(i,r,n)}}}),Jo=Ga({neg_:function(e){const t={x:Va(e,"x","neg")};return Da.runKernel(pn,t)}}),Qo=Ga({notEqual_:function(e,t){let n=Va(e,"a","notEqual","string_or_numeric"),r=Va(t,"b","notEqual","string_or_numeric");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(hn,a)}}),eu=Ga({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Va(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Da.runKernel(bn,a,s)}});function tu(e,t="float32"){if("complex64"===t){const t=tu(e,"float32"),n=tu(e,"float32");return Ha(t,n)}const n=ie(L(e),t);return Da.makeTensor(n,e,t)}function nu(e,t="float32"){if("complex64"===t){const t=nu(e,"float32"),n=tu(e,"float32");return Ha(t,n)}const n=se(L(e),t);return Da.makeTensor(n,e,t)}const ru=Ga({onesLike_:function(e){const t={x:Va(e,"x","onesLike")};return Da.runKernel(yn,t)}}),au=Ga({pad_:function(e,t,n=0){const r=Va(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Da.runKernel(wn,s,a)}}),su=Ga({prelu_:function(e,t){const n={x:Va(e,"x","prelu"),alpha:Va(t,"alpha","prelu")};return Da.runKernel(kn,n)}});var iu=n(264);class ou{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=iu.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class uu{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=iu.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const lu=Ga({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new ou(t,n,r,!1,a),i=_s(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),cu=Ga({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=_s(e,r),i=new uu(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),du=Ga({relu_:function(e){const t={x:Va(e,"x","relu")};return Da.runKernel(Cn,t)}}),pu=Ga({reverse_:function(e,t){const n={x:Va(e,"x","reverse")},r={dims:t};return Da.runKernel(Dn,n,r)}}),hu=Ga({selu_:function(e){const t={x:Va(e,"x","selu")};return Da.runKernel(Pn,t)}}),fu=Ga({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=Va(e,"x","separableConv2d"),u=Va(t,"depthwiseFilter","separableConv2d"),l=Va(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=Ui(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),F(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),F(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),F(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),F(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],h=u.shape[3];F(l.shape[2]===p*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${l.shape[2]}.`));const f=lo(c,u,r,a,i,s),m=no(f,l,1,"valid",i);return d?Ui(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),mu=Ga({sigmoid_:function(e){const t={x:Va(e,"x","sigmoid","float32")};return Da.runKernel(Gn,t)}}),gu=Ga({slice_:function(e,t,n){const r=Va(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Da.runKernel(Bn,a,s)}}),yu=Ga({slice1d_:function(e,t,n){const r=Va(e,"x","slice1d");return F(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),gu(r,[t],[n])}}),bu=Ga({slice2d_:function(e,t,n){const r=Va(e,"x","slice2d");return F(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),gu(r,t,n)}}),xu=Ga({slice3d_:function(e,t,n){const r=Va(e,"x","slice3d");return F(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),gu(r,t,n)}}),wu=Ga({slice4d_:function(e,t,n){const r=Va(e,"x","slice4d");return F(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),gu(r,t,n)}}),vu=Ga({softmax_:function(e,t=-1){const n=Va(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Da.runKernel(Yn,r,a)}}),ku=Ga({softplus_:function(e){const t={x:Va(e,"x","softplus")};return Da.runKernel(Hn,t)}}),Iu=Ga({split_:function(e,t,n=0){const r={x:Va(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Da.runKernel(Xn,r,a)}}),Nu=Ga({sqrt_:function(e){const t={x:Va(e,"x","sqrt","float32")};return Da.runKernel(jn,t)}}),Su=Ga({squeeze_:function(e,t){const n=Va(e,"x","squeeze");return Ui(n,H(n.shape,t).newShape)}}),Tu=Ga({stack_:function(e,t=0){const n=Ua(e,"tensors","stack","string_or_numeric");F(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&F(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return Da.runKernel(xn,r,a)}}),Cu=Ga({tanh_:function(e){const t={x:Va(e,"x","tanh","float32")};return Da.runKernel(cr,t)}});function $u(e,t){O(e);const n=Pa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ja(e,null,n,t)}function _u(e,t,n){if(O(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Pa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ja(e,t,r,n)}const Eu=Ga({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new ou(t,n,r,!0,a),i=_s(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Au=Ga({unstack_:function(e,t=0){const n=Va(e,"x","unstack","string_or_numeric");F(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return Da.runKernel(gr,r,a)}}),Ru=Ga({broadcastTo_:function(e,t){let n=Va(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ui(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return As(n);const i={x:n},o={reps:s};return Da.runKernel(dr,i,o)}}),Fu=Ga({where_:function(e,t,n){const r=Va(t,"a","where"),a=Va(n,"b","where"),s=Va(e,"condition","where","bool"),i=go(go(s.shape,r.shape),a.shape),o={condition:Ru(s,i),t:Ru(r,i),e:Ru(a,i)};return Da.runKernel(zn,o)}}),Du=Ga({zerosLike_:function(e){const t={x:Va(e,"x","zerosLike")};return Da.runKernel(br,t)}}),Ou=Ga({transpose_:function(e,t){const n=Va(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),F(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{F(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return Da.runKernel(fr,r,a)}}),Mu=Ga({dropout_:function(e,t,n,r){const a=Va(e,"x","dropout");if(F("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),F(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ca?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(z(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=po(Io(Ti(cu(s,0,1,"float32",r),i)),i);return Ao(a,o)}}),Lu=Ga({imag_:function(e){const t={input:Va(e,"input","imag")};return Da.runKernel(Mt,t)}}),zu=Ga({real_:function(e){const t={input:Va(e,"input","real")};return Da.runKernel(Sn,t)}}),Pu=Ga({fft_:function(e){F("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Da.runKernel(Nt,t)}}),Bu=Ga({rfft_:function(e,t){F("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=gu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Zi([e,tu(r)],e.shape.length-1),n=t}else a=e;const s=Du(a),i=Ui(Ha(a,s),[r,n]),o=Pu(i),u=Math.floor(n/2)+1,l=zu(o),c=Lu(o),d=Iu(l,[u,n-u],l.shape.length-1),p=Iu(c,[u,n-u],c.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,Ui(Ha(d[0],p[0]),h)}}),Wu=Ga({ifft_:function(e){F("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Da.runKernel(Ot,t)}}),Vu=Ga({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Ui(e,[n,t]);r=Wu(a)}else{const a=[n,2*(t-1)],s=Ui(zu(e),[n,t]),i=Ui(Lu(e),[n,t]),o=pu(gu(s,[0,1],[n,t-2]),1),u=Ao(pu(gu(i,[0,1],[n,t-2]),1),Ii(-1)),l=Zi([s,o],1),c=Zi([i,u],1),d=Ui(Ha(l,c),[a[0],a[1]]);r=Wu(d)}if(r=zu(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ui(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Uu=Ga({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Ui(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ui(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),F(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),F(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];F(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),F(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&F(P(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={x:o,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Da.runKernel(Ze,d,p)}}),Gu=Ga({relu6_:function(e){const t={x:Va(e,"x","relu6")};return Da.runKernel(Fn,t)}}),Hu=Ga({step_:function(e,t=0){const n={x:Va(e,"x","step")},r={alpha:t};return Da.runKernel(xr,n,r)}});function ju(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ao(e,Hu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function qu(e,t){let n=t;const r=mo(e.shape,t.shape);return r.length>0&&(n=Fo(n,r)),Ui(n,e.shape)}function Ku(e,t,n,r){if("linear"===t)return e;if("relu"===t)return du(e);if("elu"===t)return ho(e);if("relu6"===t)return Gu(e);if("prelu"===t)return su(e,n);if("leakyrelu"===t)return Co(e,r);if("sigmoid"===t)return mu(e);throw new Error(`Unknown fused activation ${t}.`)}const Xu=(e,t)=>!(e>0)||"linear"===t,Yu=Ga({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Xu(Da.state.gradientDepth,u)){let d=no(e,t,n,r,a,s,i);return null!=o&&(d=Ti(d,o)),Ku(d,u,l,c)}const d=Va(e,"x","conv2d","float32"),p=Va(t,"filter","conv2d","float32");let h=d,f=!1;3===d.rank&&(f=!0,h=Ui(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),F(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&F(P(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),F(h.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),F(Wi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),F("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Fi(h.shape,p.shape,n,s,r,i);let g,y;null!=o&&(g=Va(o,"bias","fused conv2d"),[g]=Ta(g,d),go(m.outShape,g.shape)),null!=l&&(y=Va(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=ju(e,o,u);F(Bi(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[ao(i.shape,c,a,n,r),Uu(i,c,a.shape,n,r)];if(null!=l){const e=qu(l,c);d.push(e)}return d},x={x:h,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=ki(((e,t,n)=>{let r=Da.runKernel(Ir,x,w);return n([t,e,r]),f&&(r=Ui(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(h,p)}{const e=ki(((e,t,n,r)=>{let a=Da.runKernel(Ir,x,w);return r([t,e,a,n]),f&&(a=Ui(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(h,p,g)}}}),Zu=Ga({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Ui(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ui(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Da.runKernel(lt,l,c)}}),Ju=Ga({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Ui(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=Da.runKernel(ct,l,c);return u?Ui(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Qu=Ga({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Xu(Da.state.gradientDepth,u)){let d=lo(e,t,n,r,a,s,i);return null!=o&&(d=Ti(d,o)),Ku(d,u,l,c)}const d=Va(e,"x","depthwiseConv2d","float32"),p=Va(t,"filter","depthwiseConv2d","float32");let h=d,f=!1;3===d.rank&&(f=!0,h=Ui(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),F(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),F(h.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),F(Wi(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&F(P(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=Fi(h.shape,p.shape,n,s,r,i,!0);let g,y;null!=o&&(g=Va(o,"bias","fused conv2d"),[g]=Ta(g,d),go(m.outShape,g.shape)),null!=l&&(y=Va(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{F(Bi(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,d=ju(e,l,u),p=Ju(o.shape,d,a,n,r,s,i),h=Zu(o,d,a.shape,n,r,s,i);return null!=c?[p,h,qu(g,d)]:[p,h]},x={x:h,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=ki(((e,t,n)=>{let r=Da.runKernel(Nr,x,w);return n([t,e,r]),f&&(r=Ui(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(h,p)}{const e=ki(((e,t,n,r)=>{let a=Da.runKernel(Nr,x,w);return r([t,e,a,n]),f&&(a=Ui(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(h,p,g)}}}),el=Ga({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Xu(Da.state.gradientDepth,s)){let u=Mo(e,t,n,r);return null!=a&&(u=Ti(u,a)),Ku(u,s,i,o)}let u=Va(e,"a","fused matMul"),l=Va(t,"b","fused matMul");[u,l]=Ta(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=L(f),y=L(m);F(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),F(z(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),F(c===d,(()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=u.shape.slice(0,-2).concat([p,h]),x=Ui(u,n?[g,c,p]:[g,p,c]),w=Ui(l,r?[y,h,d]:[y,d,h]);let v,k;null!=a&&(v=Va(a,"bias","fused matMul"),[v]=Ta(v,u),go(b,v.shape)),null!=i&&(k=Va(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=ju(Ui(e,u.shape),u,s);let d,p;return n||r?!n&&r?(d=Mo(c,o,!1,!1),p=Mo(c,i,!0,!1)):n&&!r?(d=Mo(o,c,!1,!0),p=Mo(i,c,!1,!1)):(d=Mo(o,c,!0,!0),p=Mo(c,i,!0,!0)):(d=Mo(c,o,!1,!0),p=Mo(i,c,!0,!1)),null!=a?[d,p,qu(l,c)]:[d,p]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=ki(((e,t,n)=>{const r=Da.runKernel(kr,N,S);return n([e,t,r]),{value:Ui(r,b),gradFunc:I}}));return e(x,w)}{const e=ki(((e,t,n,r)=>{const a=Da.runKernel(kr,N,S);return r([e,t,a,n]),{value:Ui(a,b),gradFunc:I}}));return e(x,w,v)}}});function tl(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return $u(a,"float32")}Ga({hammingWindow_:function(e){return tl(e,.54,.46)}});const nl=Ga({hannWindow_:function(e){return tl(e,.5,.5)}}),rl=Ga({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(gu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Zi([gu(e,s,t-r),ko([r],a)]);i.push(o),s+=n}return 0===i.length?_u([],[0,t]):Ui(Zi(i),[i.length,t])}});Ga({stft_:function(e,t,n,r,a=nl){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=rl(e,t,n),o=Ao(i,a(t));return Bu(o,r)}});const al=Ga({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Va(e,"image","cropAndResize"),o=Va(t,"boxes","cropAndResize","float32"),u=Va(n,"boxInd","cropAndResize","int32"),l=o.shape[0];F(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),F(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),F(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),F(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),F(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),F("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return Da.runKernel(st,c,d)}}),sl=Ga({flipLeftRight_:function(e){const t=Va(e,"image","flipLeftRight","float32");F(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Da.runKernel(Tt,n,{})}}),il=Ga({grayscaleToRGB_:function(e){const t=Va(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];F(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),F(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,wo(t,a)}}),ol=Ga({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Va(e,"image","rotateWithOffset","float32");F(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return Da.runKernel(vr,s,i)}});function ul(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),F(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),F(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),F(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),F(1===t.rank,(()=>"scores must be a 1D tensor")),F(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),F(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const ll=Ga({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Va(e,"boxes","nonMaxSuppression","float32"),i=Va(t,"scores","nonMaxSuppression","float32"),o=ul(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Da.runKernel(fn,{boxes:s,scores:i},u)}});function cl(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||dl)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function dl(e,t){return e>t?1:e<t?-1:0}function pl(e,t,n,r,a){return ml(e,t,n,r,a,0)}function hl(e,t,n,r,a,s){return ml(e,t,n,r,a,0,!1,s,!0)}function fl(e,t,n,r,a,s){return ml(e,t,n,r,a,s,!0)}function ml(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(bl);const c=s>0?-.5/s:0,d=[],p=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=gl(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*yl(r,c,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),p.push(t.score)):t.score>a&&cl(l,t,bl))}const h=d.length,f=n-h;o&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function gl(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(o-s)*(u-i),f=(d-l)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function yl(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function bl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const xl=Ga({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Va(e,"boxes","nonMaxSuppression"),o=Va(t,"scores","nonMaxSuppression"),u=ul(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=Da.runKernel(gn,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),wl=Ga({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Va(e,"boxes","nonMaxSuppression"),o=Va(t,"scores","nonMaxSuppression"),u=ul(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=Da.runKernel(mn,l,c);return{selectedIndices:d[0],validOutputs:d[1]}}}),vl=Ga({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Va(e,"images","resizeBilinear");F(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),F(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),F(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ui(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Da.runKernel(An,o,u);return i?Ui(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),kl=Ga({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Va(e,"images","resizeNearestNeighbor");F(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),F(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),F("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),F(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ui(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Da.runKernel(_n,o,u);return i?Ui(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Il=Ga({bincount_:function(e,t,n){const r=Va(e,"x","bincount"),a=Va(t,"weights","bincount");F("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),F(n>=0,(()=>`size must be non-negative, but got ${n}.`)),F(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return Da.runKernel(Ve,s,i)}}),Nl=Ga({lessEqual_:function(e,t){let n=Va(e,"a","lessEqual","string_or_numeric"),r=Va(t,"b","lessEqual","string_or_numeric");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(Vt,a)}}),Sl=Ga({round_:function(e){const t={x:Va(e,"x","round")};return Da.runKernel(On,t)}});function Tl(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Da.runKernel(Nn,{},a)}const Cl=Ga({threshold_:function(e,t="binary",n=!1,r=.5){const a=Va(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=Ao($u([r]),255);if(F(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),F(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),F("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),F("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=Iu(a,[1,1,1],-1);const e=Ao(i,.2989),t=Ao(o,.587),n=Ao(u,.114);l=Ti(Ti(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=$u([-1]),l=$u([0]),c=$u([0]);for(let d=0;d<e.size-1;d++){n=gu(e,0,d+1),r=gu(e,d+1),i=po(Fo(n),t),o=po(Fo(r),t);const p=Fo(Ao(n,Tl(0,n.size)));a=po(p,Fo(n));const h=ko(r.shape,n.size),f=Ti(Tl(0,r.size),h),m=Ao(r,f);s=po(Fo(m),Fo(r));const g=Ro(a,s),y=Ro(a,s),b=Ao(i,o);c=Ao(Ao(b,g),y);const x=So(c,l);l=Fu(x,c,l),u=Fu(x,$u([d]),u)}return u}(Il(Es(Sl(l),"int32"),qa([]),256),s));const d=n?Nl(l,c):So(l,c);return Es(Ao(d,255),"int32")}}),$l=Ga({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Va(e,"image","transform","float32"),o=Va(t,"transforms","transform","float32");F(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),F(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),F(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Da.runKernel(hr,u,l)}}),_l=Ga({bandPart_:function(e,t,n){F(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),F(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Va(e,"a","bandPart");F(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Ui(Tl(0,s,1,"int32"),[-1,1]),u=Tl(0,i,1,"int32"),l=Ro(o,u),c=Oo(Nl(l,Ii(+t,"int32")),To(l,Ii(-n,"int32"))),d=tu([s,i],r.dtype);return Ui(Tu(Au(Ui(r,[-1,s,i])).map((e=>Fu(c,e,d)))),a)}}),El=Ga({min_:function(e,t=null,n=!1){const r={x:Va(e,"x","min")},a={axis:t,keepDims:n};return Da.runKernel(sn,r,a)}}),Al=Ga({pow_:function(e,t){let n=Va(e,"base","pow"),r=Va(t,"exp","pow");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel(vn,a)}});function Rl(e,t,n=null){if(0===e.rank)return Si(e);if(1!==e.rank&&null===n)return Rl(Ui(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Fo(Si(e),n);if(t===1/0)return Eo(Si(e),n);if(t===-1/0)return El(Si(e),n);if("euclidean"===t||2===t)return Nu(Fo(Al(Si(e),Ii(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Eo(Fo(Si(e),n[0]),n[1]-1);if(t===1/0)return Eo(Fo(Si(e),n[1]),n[0]);if(t===-1/0)return El(Fo(Si(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Nu(Fo(Yo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Fl=Ga({norm_:function(e,t="euclidean",n=null,r=!1){const a=Rl(e=Va(e,"x","norm"),t,n);let s=a.shape;if(r){const t=G(n,e.shape);s=Ho(a.shape,t)}return Ui(a,s)}}),Dl=Ga({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,F(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)F(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Iu(e,e.shape[0],0).map((e=>Su(e,[0])));F(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Da.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ao(Fo(Ao(n[r],e)),n[r]);e=Ro(e,t)}return po(e,Fl(e,"euclidean"))})));return t?Tu(n,0):n}});function Ol(e,t=!1){return Da.tidy((()=>{F(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=vo(n),s=As(e);const i=_u([[1]],[1,1]);let o=As(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=Da.tidy((()=>{const t=gu(s,[e,e],[n-e,1]),u=Fl(t),l=gu(s,[e,e],[1,1]),c=Fu(So(l,0),_u([[-1]]),_u([[1]])),d=Ro(l,Ao(c,u)),p=po(t,d);o=1===p.shape[0]?As(i):Zi([i,gu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Jo(po(Mo(c,d),u)),f=gu(s,[e,0],[n-e,r]),m=Ao(h,o),g=Ou(o);if(0===e)s=Ro(f,Mo(m,Mo(g,f)));else{const t=Ro(f,Mo(m,Mo(g,f)));s=Zi([gu(s,[0,0],[e,r]),t],0)}const y=Ou(m),b=gu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Ro(b,Mo(Mo(b,o),y));else{const t=Ro(b,Mo(Mo(b,o),y));a=Zi([gu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),xi([t,u,l])}return!t&&n>r&&(a=gu(a,[0,0],[n,r]),s=gu(s,[0,0],[r,r])),[a,s]}))}const Ml=Ga({qr_:function(e,t=!1){if(F(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ol(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Au(Ui(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Ol(e,t);a.push(n),s.push(r)})),[Ui(Tu(a,0),e.shape),Ui(Tu(s,0),e.shape)]}}});var Ll,zl;(zl=Ll||(Ll={}))[zl.NONE=0]="NONE",zl[zl.MEAN=1]="MEAN",zl[zl.SUM=2]="SUM",zl[zl.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Pl=Ga({computeWeightedLoss_:function(e,t,n=Ll.SUM_BY_NONZERO_WEIGHTS){const r=Va(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Va(t,"weights","computeWeightedLoss"));const s=null==a?r:Ao(r,a);if(n===Ll.NONE)return s;if(n===Ll.SUM)return Fo(s);if(n===Ll.MEAN){if(null==a)return Bo(s);{const e=r.size/a.size,t=po(Fo(s),Fo(a));return e>1?po(t,Ii(e)):t}}if(n===Ll.SUM_BY_NONZERO_WEIGHTS){if(null==a)return po(Fo(s),Ii(r.size));{const e=Ao(a,nu(r.shape)),t=Es(Fo(Qo(e,Ii(0))),"float32");return po(Fo(s),t)}}throw Error(`Unknown reduction: ${n}`)}});Ga({absoluteDifference_:function(e,t,n,r=Ll.SUM_BY_NONZERO_WEIGHTS){const a=Va(e,"labels","absoluteDifference"),s=Va(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Va(n,"weights","absoluteDifference")),D(a.shape,s.shape,"Error in absoluteDifference: ");const o=Si(Ro(a,s));return Pl(o,i,r)}}),Ga({cosineDistance_:function(e,t,n,r,a=Ll.SUM_BY_NONZERO_WEIGHTS){const s=Va(e,"labels","cosineDistance"),i=Va(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Va(r,"weights","cosineDistance")),D(s.shape,i.shape,"Error in cosineDistance: ");const u=Ii(1),l=Ro(u,Fo(Ao(s,i),n,!0));return Pl(l,o,a)}}),Ga({hingeLoss_:function(e,t,n,r=Ll.SUM_BY_NONZERO_WEIGHTS){let a=Va(e,"labels","hingeLoss");const s=Va(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Va(n,"weights","hingeLoss")),D(a.shape,s.shape,"Error in hingeLoss: ");const o=Ii(1);a=Ro(Ao(Ii(2),a),o);const u=du(Ro(o,Ao(a,s)));return Pl(u,i,r)}}),Ga({huberLoss_:function(e,t,n,r=1,a=Ll.SUM_BY_NONZERO_WEIGHTS){const s=Va(e,"labels","huberLoss"),i=Va(t,"predictions","huberLoss");let o=null;null!=n&&(o=Va(n,"weights","huberLoss")),D(s.shape,i.shape,"Error in huberLoss: ");const u=Ii(r),l=Si(Ro(i,s)),c=Wo(l,u),d=Ro(l,c),p=Ti(Ao(Ii(.5),Yo(c)),Ao(u,d));return Pl(p,o,a)}}),Ga({logLoss_:function(e,t,n,r=1e-7,a=Ll.SUM_BY_NONZERO_WEIGHTS){const s=Va(e,"labels","logLoss"),i=Va(t,"predictions","logLoss");let o=null;null!=n&&(o=Va(n,"weights","logLoss")),D(s.shape,i.shape,"Error in logLoss: ");const u=Ii(1),l=Ii(r),c=Jo(Ao(s,$o(Ti(i,l)))),d=Ao(Ro(u,s),$o(Ti(Ro(u,i),l))),p=Ro(c,d);return Pl(p,o,a)}});const Bl=Ga({squaredDifference_:function(e,t){let n=Va(e,"a","squaredDifference"),r=Va(t,"b","squaredDifference");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(nr,a,{})}});Ga({meanSquaredError_:function(e,t,n,r=Ll.SUM_BY_NONZERO_WEIGHTS){const a=Va(e,"labels","meanSquaredError"),s=Va(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Va(n,"weights","meanSquaredError")),D(a.shape,s.shape,"Error in meanSquaredError: ");const o=Bl(a,s);return Pl(o,i,r)}}),Ga({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Ll.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"multiClassLabels","sigmoidCrossEntropy");const i=Va(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Va(n,"weights","sigmoidCrossEntropy")),D(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ii(r),t=Ii(1),n=Ii(.5);s=Ti(Ao(s,Ro(t,e)),Ao(n,e))}const u=function(e,t){const n=Va(e,"labels","sigmoidCrossEntropyWithLogits"),r=Va(t,"logits","sigmoidCrossEntropyWithLogits");D(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=du(r),s=Ao(r,n),i=_o(bo(Jo(Si(r))));return Ti(Ro(a,s),i)}(s,i);return Pl(u,o,a)}});const Wl=Ga({logSumExp_:function(e,t=null,n=!1){const r=Va(e,"x","logSumExp"),a=G(t,r.shape),s=Eo(r,a,!0),i=Ro(r,s),o=bo(i),u=Fo(o,a),l=$o(u),c=Ti(Ui(s,l.shape),l);if(n){const e=Ho(c.shape,a);return Ui(c,e)}return c}});Ga({softmaxCrossEntropy_:function(e,t,n,r=0,a=Ll.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"onehotLabels","softmaxCrossEntropy");const i=Va(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Va(n,"weights","softmaxCrossEntropy")),D(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ii(r),t=Ii(1),n=Ii(s.shape[1]);s=Ti(Ao(s,Ro(t,e)),po(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=ki(((e,t,r)=>{const a=Wl(t,[n],!0),s=Ro(Es(t,"float32"),a);r([e,s]);const i=Jo(Ao(s,e));return{value:Fo(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Ho(e.shape,[n]);return[Ao(Ui(e,s),Ro(Es(r,"float32"),bo(a))),Ao(Ui(e,s),Ro(bo(a),Es(r,"float32")))]}}}));return r(e,t)}(s,i);return Pl(u,o,a)}});const Vl=Ga({sparseFillEmptyRows_:function(e,t,n,r){const a=Va(e,"indices","sparseFillEmptyRows"),s=Va(t,"values","sparseFillEmptyRows"),i=Va(n,"denseShape","sparseFillEmptyRows"),o=Va(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=Da.runKernel(Zn,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Ul=Ga({sparseReshape_:function(e,t,n){const r=Va(e,"inputIndices","sparseReshape"),a=Va(t,"inputShape","sparseReshape"),s=Va(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Da.runKernel(Jn,i);return{outputIndices:o[0],outputShape:o[1]}}}),Gl=Ga({sparseSegmentMean_:function(e,t,n){const r=Va(e,"data","sparseSegmentMean"),a=Va(t,"indices","sparseSegmentMean"),s=Va(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Da.runKernel(Qn,i)}}),Hl=Ga({sparseSegmentSum_:function(e,t,n){const r=Va(e,"data","sparseSegmentSum"),a=Va(t,"indices","sparseSegmentSum"),s=Va(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Da.runKernel(er,i)}}),jl=Ga({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Va(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Va(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:l},p=Da.runKernel(sr,d,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),ql=Ga({stringSplit_:function(e,t,n=!0){const r=Va(e,"input","stringSplit","string"),a=Va(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Da.runKernel(ir,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Kl=Ga({stringToHashBucketFast_:function(e,t){const n=Va(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Da.runKernel(or,a,r)}}),Xl={flipLeftRight:sl,grayscaleToRGB:il,resizeNearestNeighbor:kl,resizeBilinear:vl,rotateWithOffset:ol,cropAndResize:al,nonMaxSuppression:ll,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Va(e,"boxes","nonMaxSuppressionAsync"),i=Va(t,"scores","nonMaxSuppressionAsync"),o=ul(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=pl(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),$u(d,"int32")},nonMaxSuppressionWithScore:xl,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Va(e,"boxes","nonMaxSuppressionAsync"),o=Va(t,"scores","nonMaxSuppressionAsync"),u=ul(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:p,selectedScores:h}=fl(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:$u(p,"int32"),selectedScores:$u(h)}},nonMaxSuppressionPadded:wl,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Va(e,"boxes","nonMaxSuppressionAsync"),o=Va(t,"scores","nonMaxSuppressionAsync"),u=ul(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=hl(p,h,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:$u(f,"int32"),validOutputs:Ii(m,"int32")}},threshold:Cl,transform:$l},Yl={bandPart:_l,gramSchmidt:Dl,qr:Ml},Zl={sparseFillEmptyRows:Vl,sparseReshape:Ul,sparseSegmentMean:Gl,sparseSegmentSum:Hl},Jl={stringNGrams:jl,stringSplit:ql,stringToHashBucketFast:Kl};class Ql extends Ni{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Da.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Da.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:bi((()=>Du(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:bi((()=>Du(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;bi((()=>{const e=Ti(Ao(i,this.rho),Ao(Yo(s),1-this.rho)),t=Ao(po(Nu(Ti(o,this.epsilon)),Nu(Ti(i,this.epsilon))),s),n=Ti(Ao(o,this.rho),Ao(Yo(t),1-this.rho));i.assign(e),o.assign(n);const a=Ti(Ao(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(xi(this.accumulatedGrads.map((e=>e.variable))),xi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ql.className="Adadelta",mi(Ql);class ec extends Ni{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Da.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:bi((()=>ko(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;bi((()=>{const e=Ti(s,Yo(a));s.assign(e);const t=Ti(Ao(po(a,Nu(Ti(e,Da.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&xi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}ec.className="Adagrad",mi(ec);class tc extends Ni{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],bi((()=>{this.accBeta1=Ii(t).variable(),this.accBeta2=Ii(n).variable()})),null==r&&(this.epsilon=Da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);bi((()=>{const n=Ro(1,this.accBeta1),r=Ro(1,this.accBeta2);t.forEach(((t,a)=>{const s=Da.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:bi((()=>Du(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:bi((()=>Du(s).variable(i)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,c=Ti(Ao(u,this.beta1),Ao(o,1-this.beta1)),d=Ti(Ao(l,this.beta2),Ao(Yo(o),1-this.beta2)),p=po(c,n),h=po(d,r);u.assign(c),l.assign(d);const f=Ti(Ao(po(p,Ti(Nu(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Ao(this.accBeta1,this.beta1)),this.accBeta2.assign(Ao(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&xi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&xi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),bi((()=>{this.accBeta1.assign(Al(this.beta1,this.iterations_+1)),this.accBeta2.assign(Al(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}tc.className="Adam",mi(tc);class nc extends Ni{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],bi((()=>{this.iteration=Ii(0).variable(),this.accBeta1=Ii(t).variable()})),null==r&&(this.epsilon=Da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);bi((()=>{const n=Ro(1,this.accBeta1),r=po(-this.learningRate,Ti(Ao(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=Da.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Du(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Du(s).variable(i)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,c=Ti(Ao(u,this.beta1),Ao(o,1-this.beta1)),d=Ao(l,this.beta2),p=Si(o),h=Po(d,p);u.assign(c),l.assign(h);const f=Ti(Ao(po(r,n),po(c,Ti(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Ti(this.iteration,1)),this.accBeta1.assign(Ao(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&xi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&xi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}nc.className="Adamax",mi(nc);class rc extends Ni{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Da.registeredVariables[t];bi((()=>{const e=Ti(Ao(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=wi(Ii(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}rc.className="SGD",mi(rc);class ac extends rc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ii(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Da.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:bi((()=>Du(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&bi((()=>{let e;const t=Ti(Ao(this.m,a),s);e=this.useNesterov?Ti(Ao(this.c,Ti(s,Ao(t,this.m))),r):Ti(Ao(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&xi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}ac.className="Momentum",mi(ac);class sc extends Ni{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Da.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Da.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:bi((()=>Du(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:bi((()=>Du(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:bi((()=>Du(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;bi((()=>{const e=Ti(Ao(i,this.decay),Ao(Yo(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Ti(Ao(t,this.decay),Ao(s,1-this.decay)),u=po(Ao(s,this.learningRate),Nu(Ro(e,Ti(Yo(a),this.epsilon)))),l=Ti(Ao(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=Ro(r,l);r.assign(c)}else{const e=Ti(Ao(i,this.decay),Ao(Yo(s),1-this.decay)),t=Ti(Ao(o,this.momentum),po(Ao(s,this.learningRate),Nu(Ti(e,this.epsilon))));i.assign(e),o.assign(t);const n=Ro(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&xi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&xi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&xi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}sc.className="RMSProp",mi(sc);class ic{static sgd(e){return new rc(e)}static momentum(e,t,n=!1){return new ac(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new sc(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new tc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ql(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new nc(e,t,n,r,a)}static adagrad(e,t=.1){return new ec(e,t)}}const oc={sgd:ic.sgd,momentum:ic.momentum,adadelta:ic.adadelta,adagrad:ic.adagrad,rmsprop:ic.rmsprop,adamax:ic.adamax,adam:ic.adam},uc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function lc(){return new Promise((e=>uc((()=>e()))))}function cc(e,t){const n=e[0].length;e.forEach(((e,t)=>{F(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),F(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)F(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function dc(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const pc=30;function hc(e){return e<=pc?e:te(e,Math.floor(Math.sqrt(e)))}function fc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function mc(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function gc(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function yc(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function bc(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function xc(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const wc=1.7580993408473768,vc=1.0507009873554805,kc=.3275911,Ic=.254829592,Nc=-.284496736,Sc=1.421413741,Tc=-1.453152027,Cc=1.061405429;function $c(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function _c(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ec(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ac(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Rc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Fc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Dc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Oc(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Mc="->",Lc=/->/g,zc=",",Pc="...";function Bc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Lc,"").length)/Mc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Mc}").`);const[r,a]=e.split(Mc);F(-1===r.indexOf(Pc),(()=>`The ellipsis notation ("${Pc}") is not supported yet.`));const s=r.split(zc),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==zc&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Wc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Vc(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:F(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Uc(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Hc(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Gc(e){return e.every(((e,t)=>e===t))}function Hc(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function jc(e,t,n=0){let r=[];if("number"==typeof t)F(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{F(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}F(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function qc(e,t){let n,r=!1;for(e<=pc?(n=e,r=!0):n=te(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=te(e,n+1);return n}function Kc(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Xc(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Yc(e){try{return e.map((e=>Zr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Zc(e){return e.map((e=>Yr(e)))}function Jc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=_s(e,"int32"),a=_s([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const Qc={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Hu(Es(n,"float32"),-1))}}},ed={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Yo(Es(n,"float32")),r=Nu(Ro(Ii(1),t));return Jo(po(e,r))}}}},td={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Nu(Ro(Yo(Es(n,"float32")),1));return po(e,t)}}}},nd={kernelName:Se,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{let t=e;const r=mo(n.shape,a);return r.length>0&&(t=Fo(t,r)),Ui(t,n.shape)},b:()=>{let t=e;const n=mo(r.shape,a);return n.length>0&&(t=Fo(t,n)),Ui(t,r.shape)}}}},rd={kernelName:Te,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},ad={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Du(n)}}},sd={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Du(n)}}},id={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Nu(Ro(Ii(1),Yo(Es(n,"float32")))))}}},od={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Nu(Ti(Ii(1),Yo(Es(n,"float32"))));return po(e,t)}}}},ud={kernelName:Oe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{const t=Ti(Yo(n),Yo(r));let s=Ao(e,po(r,t));const i=mo(n.shape,a);return i.length>0&&(s=Fo(s,i)),Ui(s,n.shape)},b:()=>{const t=Ti(Yo(n),Yo(r));let s=Jo(Ao(e,po(n,t)));const i=mo(r.shape,a);return i.length>0&&(s=Fo(s,i)),Ui(s,r.shape)}}}},ld={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Ti(Yo(Es(n,"float32")),1))}}},cd={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Ro(Ii(1),Yo(Es(n,"float32"))))}}},dd=Ga({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Va(e,"dy","avgPool3dGrad"),o=Va(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Ui(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),F(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&F(P(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const d={dy:u,input:l},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},h=Da.runKernel(Pe,d,p);return c?Ui(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),pd={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>dd(e,r,a,s,i,o)}}},hd=Ga({avgPoolGrad_:function(e,t,n,r,a){const s=Va(e,"dy","avgPoolGrad"),i=Va(t,"input","avgPoolGrad");F(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Ui(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),F(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},d={filterSize:n,strides:r,pad:a},p=Da.runKernel(Le,c,d);return l?Ui(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),fd={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>hd(e,r,a,s,i)}}},md={kernelName:Be,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Mo(e,a,!1,!1),b:()=>Mo(e,r,!0,!1)}:s&&!i?{a:()=>Mo(a,e,!1,!0),b:()=>Mo(r,e,!1,!1)}:{a:()=>Mo(a,e,!0,!0),b:()=>Mo(e,r,!0,!0)}:{a:()=>Mo(e,a,!1,!0),b:()=>Mo(r,e,!0,!1)}}},gd=Ga({spaceToBatchND_:function(e,t,n){const r=Va(e,"x","spaceToBatchND");F(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),F(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),F(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return Da.runKernel(Kn,a,s)}}),yd={kernelName:We,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>gd(e,r,a)}}},bd={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Fo(e,o,!0)}}},xd={kernelName:Ge,gradFunc:e=>({x:()=>e.clone()})},wd={kernelName:He,gradFunc:e=>({x:()=>Du(e)})},vd={kernelName:je,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Fu(Oo(To(r,a),Nl(r,s)),e,Du(e))}}},kd={kernelName:Ke,inputsToSave:["x"],gradFunc:Qc.gradFunc},Id={kernelName:Xe,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=G(a,t[0].shape)[0],i=r.map((e=>e[s]));return Iu(e,i,s).map((e=>()=>e))}},Nd={kernelName:Ye,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return F(Bi(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>ao(r.shape,e,a,i,o,u),filter:()=>Uu(r,e,a.shape,i,o,u)}}},Sd={kernelName:Je,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>no(e,a,s,i,o,1,u),filter:()=>Uu(e,r,a.shape,s,i,o,u)}}},Td=Ga({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ui(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ui(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),F(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),F(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),F(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),F(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return Da.runKernel(et,o,u)}}),Cd={kernelName:Qe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;F(Bi(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>oo(i.shape,e,o,a,s),filter:()=>Td(i,e,o.shape,a,s)}}},$d=Ga({sin_:function(e){const t={x:Va(e,"x","sin","float32")};return Da.runKernel(Wn,t)}}),_d={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(Jo($d(Es(n,"float32"))),e)}}},Ed=Ga({sinh_:function(e){const t={x:Va(e,"x","sinh")};return Da.runKernel(Vn,t)}}),Ad={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(Ed(Es(n,"float32")),e)}}},Rd=Ga({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Va(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Da.runKernel(at,a,s)}}),Fd={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=qo([a],r.rank);let n=Rd(e,a,s,!i);return null!=t&&(n=Ou(n,t)),n}}}},Dd={kernelName:ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;F(Bi(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return F(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),F(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),F(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),F(Wi(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&F(P(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Ju(u.shape,e,l,a,s,o,i),filter:()=>Zu(u,e,l.shape,a,s,o,i)}}},Od={kernelName:pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Da.runKernel(ht,s,n),filter:()=>Da.runKernel(ft,i,n)}}},Md={kernelName:yt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Da.runKernel(bt,r)}}},Ld={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ao(bo(Jo(Yo(n))),2/Math.sqrt(Math.PI));return{x:()=>Ao(e,r)}}},zd={kernelName:vt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,n)}}},Pd={kernelName:kt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ui(e,n.shape)}}},Bd={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,bo(n))}}},Wd={kernelName:Ct,gradFunc:e=>({x:()=>Du(e)})},Vd={kernelName:$t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{const t=po(e,Es(r,"float32")),s=mo(n.shape,a);return s.length>0?Ui(Fo(t,s),n.shape):t},b:()=>{let t=Ao(e,Es(n,"float32"));const s=mo(r.shape,a);s.length>0&&(t=Ui(Fo(t,s),r.shape));const i=Yo(r);return Jo(po(t,Es(i,"float32")))}}}},Ud=Ga({rsqrt_:function(e){const t={x:Va(e,"x","rsqrt","float32")};return Da.runKernel(Mn,t)}}),Gd={kernelName:_t,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Ii(1):o,l=mo(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=Ro(a,s),p=Ao(e,u),h=Ud(Ti(i,Ii(r))),f=Ao(Ao(Ao(h,h),h),Ii(-.5));return{x:()=>1===s.rank?Ui(Ao(Ao(e,wo(Ui(h,[1,1,1,s.shape[0]]),c)),u),a.shape):Ui(Ao(Ao(e,h),u),a.shape),mean:()=>{let e=Ao(Ao(h,Ii(-1)),p);return 1===s.rank&&(e=Fo(e,l)),Ui(e,s.shape)},variance:()=>{let e=Ao(Ao(f,d),p);return 1===s.rank&&(e=Fo(e,l)),Ui(e,s.shape)},scale:()=>{const t=Ao(d,h);let n=Ao(e,t);return 1===s.rank&&(n=Fo(n,l)),Ui(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Fo(t,l)),Ui(t,s.shape)}}}},Hd=Ga({unsortedSegmentSum_:function(e,t,n){const r=Va(e,"x","unsortedSegmentSum"),a=Va(t,"segmentIds","unsortedSegmentSum","int32");F(P(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return Da.runKernel(yr,s,i)}}),jd={kernelName:Et,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=G(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,d=qd(0,u),p=qd(u+1,u+1+c),h=Kd([o,[n],l]),f=Ui(e,h),m=Ui(a,[n]),g=Kd([[u],d,p]),y=Ou(f,g);let b=Hd(y,m,r.shape[i]);const x=Ko(g);return b=Ou(b,x),b},indices:()=>a}}};function qd(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Kd(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Xd={kernelName:Ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Du(n),b:()=>Du(r)}}},Yd={kernelName:Dt,gradFunc:e=>({x:()=>Es(e,"float32")})},Zd={kernelName:Lt,gradFunc:e=>({x:()=>Du(e)})},Jd={kernelName:zt,gradFunc:e=>({x:()=>Du(e)})},Qd={kernelName:Pt,gradFunc:e=>({x:()=>Du(e)})},ep={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=So(r,0);return{x:()=>Fu(s,e,Ao(e,a))}}},tp={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Ti(n,1))}}},np={kernelName:Gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Es(n,"float32"))}}},rp={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=bo(r);return Ro(e,Ao(Fo(e,a,!0),t))}}}},ap=Ga({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return Da.runKernel(Yt,o,u)}}),sp={kernelName:Xt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>ap(r,a,e,s,i,o,u)}}};function ip(e,t,n,r){return t.rank<n.rank&&(t=Ui(t,Ho(t.shape,r))),e.rank<n.rank&&(e=Ui(e,Ho(e.shape,r))),{x:()=>Ao(e,Es(yo(n,t),e.dtype))}}const op={kernelName:Zt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=ip(e,t[1],s,G(a,s.shape));return{x:()=>i.x()}}},up=Ga({less_:function(e,t){let n=Va(e,"a","less","string_or_numeric"),r=Va(t,"b","less","string_or_numeric");[n,r]=Ta(n,r),go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(Wt,a)}}),lp={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ao(e,Es(To(n,r),"float32")),b:()=>Ao(e,Es(up(n,r),"float32"))}}},cp=Ga({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Va(e,"dy","maxPool3dGrad"),u=Va(t,"input","maxPool3dGrad"),l=Va(n,"output","maxPool3dGrad");let c=o,d=u,p=l,h=!1;4===u.rank&&(h=!0,c=Ui(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Ui(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Ui(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),F(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),F(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&F(P(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:c,input:d,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Da.runKernel(nn,f,m);return h?Ui(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),dp={kernelName:tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>cp(e,r,a,s,i,o,u)}}},pp=Ga({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Va(e,"dy","maxPoolGrad"),u=Va(t,"input","maxPoolGrad"),l=Va(n,"output","maxPoolGrad");F(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),F(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),F(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&F(P(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Da.runKernel(en,c,d)}}),hp={kernelName:Qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>pp(e,r,a,s,i,o)}}},fp={kernelName:an,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=G(a,r.shape),i=L(Go(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Ui(e,t);return po(Ao(n,nu(r.shape,"float32")),i)}}}},mp={kernelName:sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=ip(e,i,s,G(a,s.shape));return{x:()=>o.x()}}},gp={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ao(e,Es(Nl(n,r),"float32")),b:()=>Ao(e,Es(So(n,r),"float32"))}}},yp={kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>gu(e,s,r.shape)}}},bp={kernelName:ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{const t=mo(n.shape,a);return t.length>0?Ui(Fo(e,t),n.shape):e},b:()=>{const t=Ao(e,Jo(Io(po(n,r)))),s=mo(r.shape,a);return s.length>0?Ui(Fo(t,s),r.shape):t}}}},xp={kernelName:dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{const t=Ao(e,Es(r,"float32")),s=mo(n.shape,a);return s.length>0?Ui(Fo(t,s),n.shape):t},b:()=>{const t=Ao(e,Es(n,"float32")),s=mo(r.shape,a);return s.length>0?Ui(Fo(t,s),r.shape):t}}}},wp={kernelName:pn,gradFunc:e=>({x:()=>Jo(e)})},vp={kernelName:bn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>tu(n.shape,"float32")}}},kp={kernelName:yn,gradFunc:e=>({x:()=>Du(e)})},Ip={kernelName:xn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Au(e,r).map((e=>()=>e))}},Np={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>gu(e,s,r.shape)}}},Sp={kernelName:vn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=go(s.shape,i.shape);return{a:()=>{const t=Es(i,"float32");let n=Ao(e,Ao(t,Al(s,Ro(t,Ii(1)))));const r=mo(s.shape,o);return r.length>0&&(n=Fo(n,r)),Ui(n,s.shape)},b:()=>{const t=So(s,0),n=Fu(t,$o(s),Du(s));let r=Ao(e,Ao(a,n));const u=mo(i.shape,o);return u.length>0&&(r=Fo(r,u)),Ui(r,i.shape)}}}},Tp={kernelName:kn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=So(n,0);return{x:()=>Fu(a,e,Ao(e,r)),alpha:()=>{let t=Fu(a,Du(e),Ao(e,n));const s=mo(r.shape,e.shape);return s.length>0&&(t=Fo(t,s)),Ui(t,r.shape)}}}},Cp={kernelName:mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{const t=po(e,Es(r,"float32")),s=mo(n.shape,a);return s.length>0?Ui(Fo(t,s),n.shape):t},b:()=>{let t=Ao(e,Es(n,"float32"));const s=mo(r.shape,a);s.length>0&&(t=Ui(Fo(t,s),r.shape));const i=Yo(r);return Jo(po(t,Es(i,"float32")))}}}},$p={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Jo(Yo(n)))}}},_p={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ao(Nl(n,6),Hu(n));return{x:()=>Ao(e,Es(r,"float32"))}}},Ep={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Es(Hu(n),"float32"))}}},Ap={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,n.shape)}}},Rp={kernelName:An,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Da.runKernel(Rn,a,n)}}},Fp={kernelName:_n,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Da.runKernel(En,a,n)}}},Dp={kernelName:Dn,gradFunc:(e,t,n)=>{const{dims:r}=n,a=G(r,e.shape);return{x:()=>pu(e,a)}}},Op={kernelName:On,gradFunc:e=>({x:()=>Du(e)})},Mp={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Jo(po(e,Ao(Al(n,1.5),2)))}}},Lp=Ga({logicalNot_:function(e){const t={x:Va(e,"x","logicalNot","bool")};return Da.runKernel(qt,t)}}),zp={kernelName:zn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Es(Du(n),"float32"),t:()=>Ao(e,Es(n,e.dtype)),e:()=>Ao(e,Es(Lp(n),e.dtype))}}},Pp={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=So(n,Ii(0)),r=Ii(wc),a=Ii(vc),s=Ao(e,a),i=Ao(Ao(e,r),bo(Es(n,"float32")));return Fu(t,s,i)}}}},Bp={kernelName:Gn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Ao(n,Ro(Ii(1),n)))}}},Wp={kernelName:Un,gradFunc:e=>({x:()=>Du(e)})},Vp=Ga({cos_:function(e){const t={x:Va(e,"x","cos","float32")};return Da.runKernel(nt,t)}}),Up={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(Vp(Es(n,"float32")),e)}}},Gp=Ga({cosh_:function(e){const t={x:Va(e,"x","cosh","float32")};return Da.runKernel(rt,t)}}),Hp={kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(Gp(Es(n,"float32")),e)}}},jp={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=ci(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>au(e,l)}}},qp={kernelName:Yn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Ao(e,r);return{logits:()=>Ro(s,Ao(Fo(s,[a],!0),r))}}},Kp={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,mu(n))}}},Xp=Ga({batchToSpaceND_:function(e,t,n){const r=Va(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));F(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),F(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),F(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return Da.runKernel(We,s,i)}}),Yp={kernelName:Kn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Xp(e,r,a)}}},Zp={kernelName:Xn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Zi(e,r)}}},Jp=[Qc,ed,td,nd,rd,ad,sd,id,od,ud,ld,cd,pd,fd,md,yd,bd,xd,wd,vd,kd,Id,Sd,Nd,Cd,_d,Ad,Fd,Dd,Od,Cp,Md,Ld,zd,Pd,Bd,Vd,Wd,Gd,jd,Xd,Yd,Zd,Jd,Qd,ep,tp,np,rp,sp,op,op,lp,dp,hp,fp,mp,gp,yp,bp,xp,wp,vp,kp,Ip,Np,Np,Sp,Tp,$p,_p,Ep,Ap,Rp,Fp,Dp,Op,Mp,zp,Pp,Bp,Wp,Up,Hp,jp,qp,Kp,Yp,Yp,Zp,Zp,{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Ao(Nu(Es(n,"float32")),2))}}},{kernelName:nr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ii(2);return{a:()=>Ao(e,Ao(a,Ro(n,r))),b:()=>Ao(e,Ao(a,Ro(r,n)))}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Ao(Es(n,"float32"),2))}}},{kernelName:xr,gradFunc:e=>({x:()=>Du(e)})},{kernelName:ur,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=go(n.shape,r.shape);return{a:()=>{let t=e;const r=mo(n.shape,a);return r.length>0&&(t=Fo(t,r)),Ui(t,n.shape)},b:()=>{let t=e;const n=mo(r.shape,a);return n.length>0&&(t=Fo(t,n)),Ui(Jo(t),r.shape)}}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;G(s,r.shape).forEach((e=>{a[e]=1}));const i=Ui(e,a),o=Ao(i,nu(r.shape,"float32"));return{x:()=>o}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>po(e,Yo(Vp(n)))}}},{kernelName:cr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(Ro(Ii(1),Yo(n)),e)}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Du(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Ti(t,gu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Ti(t,gu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Ti(t,gu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Ti(t,gu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:fr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Ko(a);return{x:()=>Ou(e,s)}}},{kernelName:gr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Tu(e,a)}}},{kernelName:yr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Po(t,Du(t)),r=No(e,n);let a=To(t,Ii(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=xo(a,e+1);a=Oo(a,nu(r.shape,"bool"));const i=Du(r);return Fu(a,r,i)}(e,n)}}},{kernelName:br,gradFunc:e=>({x:()=>Du(e)})}];for(const e of Jp)Ar(e);da().prototype.abs=function(){return this.throwIfDisposed(),Si(this)};const Qp=Ga({acos_:function(e){const t={x:Va(e,"x","acos")};return Da.runKernel(Ie,t)}});da().prototype.acos=function(){return this.throwIfDisposed(),Qp(this)};const eh=Ga({acosh_:function(e){const t={x:Va(e,"x","acosh")};return Da.runKernel(Ne,t)}});da().prototype.acosh=function(){return this.throwIfDisposed(),eh(this)},da().prototype.add=function(e){return this.throwIfDisposed(),Ti(this,e)},da().prototype.all=function(e,t){return this.throwIfDisposed(),Ci(this,e,t)},da().prototype.any=function(e,t){return this.throwIfDisposed(),$i(this,e,t)},da().prototype.argMax=function(e){return this.throwIfDisposed(),_i(this,e)};const th=Ga({argMin_:function(e,t=0){const n={x:Va(e,"x","argMin")},r={axis:t};return Da.runKernel(Ee,n,r)}});da().prototype.argMin=function(e){return this.throwIfDisposed(),th(this,e)},da().prototype.asScalar=function(){return this.throwIfDisposed(),F(1===this.size,(()=>"The array must have only 1 element.")),Ui(this,[])},da().prototype.asType=function(e){return this.throwIfDisposed(),Es(this,e)},da().prototype.as1D=function(){return this.throwIfDisposed(),Ui(this,[this.size])},da().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ui(this,[e,t])},da().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ui(this,[e,t,n])},da().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ui(this,[e,t,n,r])},da().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ui(this,[e,t,n,r,a])};const nh=Ga({asin_:function(e){const t={x:Va(e,"x","asin")};return Da.runKernel(Ae,t)}});da().prototype.asin=function(){return this.throwIfDisposed(),nh(this)};const rh=Ga({asinh_:function(e){const t={x:Va(e,"x","asinh")};return Da.runKernel(Re,t)}});da().prototype.asinh=function(){return this.throwIfDisposed(),rh(this)};const ah=Ga({atan_:function(e){const t={x:Va(e,"x","atan")};return Da.runKernel(Fe,t)}});da().prototype.atan=function(){return this.throwIfDisposed(),ah(this)};const sh=Ga({atan2_:function(e,t){let n=Va(e,"a","atan2"),r=Va(t,"b","atan2");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel(Oe,a)}});da().prototype.atan2=function(e){return this.throwIfDisposed(),sh(this,e)};const ih=Ga({atanh_:function(e){const t={x:Va(e,"x","atanh")};return Da.runKernel(De,t)}});da().prototype.atanh=function(){return this.throwIfDisposed(),ih(this)},da().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Gi(this,e,t,n,r)},da().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Xp(this,e,t)},da().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),ji(this,e,t,n,r,a)},da().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ru(this,e)},da().prototype.cast=function(e){return this.throwIfDisposed(),Es(this,e)};const oh=Ga({ceil_:function(e){const t={x:Va(e,"x","ceil","float32")};return Da.runKernel(He,t)}});da().prototype.ceil=function(){return this.throwIfDisposed(),oh(this)},da().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Yi(this,e,t)},da().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ca&&(e=[e]),Zi([this,...e],t)},da().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ro(this,e,t,n,r,a,s)},da().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),so(this,e,t,n,r,a)},da().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),no(this,e,t,n,r,a,s)},da().prototype.cos=function(){return this.throwIfDisposed(),Vp(this)},da().prototype.cosh=function(){return this.throwIfDisposed(),Gp(this)},da().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Rd(this,e,t,n)};const uh=Ga({depthToSpace_:function(e,t,n="NHWC"){const r=Va(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];F(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),F(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),F(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),F(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return Da.runKernel(ot,o,u)}});da().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},da().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),lo(this,e,t,n,r,a,s)};const lh=Ga({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=Va(e,"x","dilation2d"),o=Va(t,"filter","dilation2d");F(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),F(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),F("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},d={strides:n,pad:r,dilations:a},p=Da.runKernel(pt,c,d);return l?Ui(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});da().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),lh(this,e,t,n,r,a)};const ch=Ga({divNoNan_:function(e,t){let n=Va(e,"a","div"),r=Va(t,"b","div");[n,r]=Ta(n,r);const a=po(n,r),s=Du(a),i=yo(r,s);return Fu(i,s,a)}});da().prototype.divNoNan=function(e){return this.throwIfDisposed(),ch(this,e)},da().prototype.div=function(e){return this.throwIfDisposed(),po(this,e)};const dh=Ga({dot_:function(e,t){const n=Va(e,"t1","dot"),r=Va(t,"t2","dot");F(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(F(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Ui(n,[1,-1]),t=Ui(r,[-1,1]),a=Mo(e,t);return Ui(a,[])}if(1===n.rank&&2===r.rank){const e=Ui(n,[1,-1]),t=Ui(r,[r.shape[0],r.shape[1]]),a=Mo(e,t);return Ui(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Ui(r,[-1,1]),t=Mo(n,e);return Ui(t,[t.size])}{const e=Ui(r,[r.shape[0],r.shape[1]]);return Mo(n,e)}}});da().prototype.dot=function(e){return this.throwIfDisposed(),dh(this,e)},da().prototype.elu=function(){return this.throwIfDisposed(),ho(this)},da().prototype.equal=function(e){return this.throwIfDisposed(),yo(this,e)};const ph=Ga({erf_:function(e){let t=Va(e,"x","erf");F("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Es(t,"float32"));const n={x:t};return Da.runKernel(xt,n)}});da().prototype.erf=function(){return this.throwIfDisposed(),ph(this)},da().prototype.exp=function(){return this.throwIfDisposed(),bo(this)},da().prototype.expandDims=function(e){return this.throwIfDisposed(),xo(this,e)};const hh=Ga({expm1_:function(e){const t={x:Va(e,"x","expm1")};return Da.runKernel(It,t)}});da().prototype.expm1=function(){return this.throwIfDisposed(),hh(this)},da().prototype.fft=function(){return this.throwIfDisposed(),Pu(this)},da().prototype.flatten=function(){return this.throwIfDisposed(),Ui(this,[this.size])},da().prototype.floor=function(){return this.throwIfDisposed(),Io(this)},da().prototype.floorDiv=function(e){return this.throwIfDisposed(),co(this,e)},da().prototype.gather=function(e,t){return this.throwIfDisposed(),No(this,e,t)},da().prototype.greaterEqual=function(e){return this.throwIfDisposed(),To(this,e)},da().prototype.greater=function(e){return this.throwIfDisposed(),So(this,e)},da().prototype.ifft=function(){return this.throwIfDisposed(),Wu(this)},da().prototype.irfft=function(){return this.throwIfDisposed(),Vu(this)};const fh=Ga({isFinite_:function(e){const t={x:Va(e,"x","isFinite")};return Da.runKernel(Lt,t)}});da().prototype.isFinite=function(){return this.throwIfDisposed(),fh(this)};const mh=Ga({isInf_:function(e){const t={x:Va(e,"x","isInf")};return Da.runKernel(zt,t)}});da().prototype.isInf=function(){return this.throwIfDisposed(),mh(this)};const gh=Ga({isNaN_:function(e){const t={x:Va(e,"x","isNaN")};return Da.runKernel(Pt,t)}});da().prototype.isNaN=function(){return this.throwIfDisposed(),gh(this)},da().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Co(this,e)},da().prototype.lessEqual=function(e){return this.throwIfDisposed(),Nl(this,e)},da().prototype.less=function(e){return this.throwIfDisposed(),up(this,e)};const yh=Ga({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Va(e,"x","localResponseNormalization");F(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),F(P(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ui(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=Da.runKernel(Xt,u,l);return o?Ui(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});da().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),yh(this,e,t,n,r)};const bh=Ga({logSigmoid_:function(e){const t=Va(e,"x","logSigmoid");return ki((e=>({value:Jo(ku(Jo(e))),gradFunc:t=>Ao(t,mu(Jo(e)))})))(t)}});da().prototype.logSigmoid=function(){return this.throwIfDisposed(),bh(this)},da().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Do(this,e)},da().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Wl(this,e,t)},da().prototype.log=function(){return this.throwIfDisposed(),$o(this)},da().prototype.log1p=function(){return this.throwIfDisposed(),_o(this)},da().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Oo(this,e)},da().prototype.logicalNot=function(){return this.throwIfDisposed(),Lp(this)};const xh=Ga({logicalOr_:function(e,t){const n=Va(e,"a","logicalOr","bool"),r=Va(t,"b","logicalOr","bool");go(n.shape,r.shape);const a={a:n,b:r};return Da.runKernel(Kt,a)}});da().prototype.logicalOr=function(e){return this.throwIfDisposed(),xh(this,e)};const wh=Ga({logicalXor_:function(e,t){const n=Va(e,"a","logicalXor","bool"),r=Va(t,"b","logicalXor","bool");return go(n.shape,r.shape),Oo(xh(e,t),Lp(Oo(e,t)))}});da().prototype.logicalXor=function(e){return this.throwIfDisposed(),wh(this,e)},da().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Mo(this,e,t,n)},da().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Lo(this,e,t,n,r)},da().prototype.max=function(e,t){return this.throwIfDisposed(),Eo(this,e,t)},da().prototype.maximum=function(e){return this.throwIfDisposed(),Po(this,e)},da().prototype.mean=function(e,t){return this.throwIfDisposed(),Bo(this,e,t)},da().prototype.min=function(e,t){return this.throwIfDisposed(),El(this,e,t)},da().prototype.minimum=function(e){return this.throwIfDisposed(),Wo(this,e)};const vh=Ga({mirrorPad_:function(e,t,n){F("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Va(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)F(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),F(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return Da.runKernel(un,i,s)}});da().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),vh(this,e,t)};const kh=Ga({mod_:function(e,t){let n=Va(e,"a","mod"),r=Va(t,"b","mod");[n,r]=Ta(n,r);const a={a:n,b:r};return Da.runKernel(ln,a)}});da().prototype.mod=function(e){return this.throwIfDisposed(),kh(this,e)},da().prototype.mul=function(e){return this.throwIfDisposed(),Ao(this,e)},da().prototype.neg=function(){return this.throwIfDisposed(),Jo(this)},da().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Fl(this,e,t,n)},da().prototype.notEqual=function(e){return this.throwIfDisposed(),Qo(this,e)},da().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),eu(this,e,t,n)},da().prototype.onesLike=function(){return this.throwIfDisposed(),ru(this)},da().prototype.pad=function(e,t){return this.throwIfDisposed(),au(this,e,t)};const Ih=Ga({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=Va(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Ui(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(Wi(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Ai(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[h,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,d),m=p?r:"valid",g=p?o:gd(o,c,h),y=("avg"===n?()=>Gi(g,t,s,m):()=>Lo(g,t,s,m))(),b=p?y:Xp(y,c,f);return u?Ui(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});da().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Ih(this,e,t,n,r,a)},da().prototype.pow=function(e){return this.throwIfDisposed(),Al(this,e)},da().prototype.prelu=function(e){return this.throwIfDisposed(),su(this,e)};const Nh=Ga({prod_:function(e,t=null,n=!1){let r=Va(e,"x","prod");"bool"===r.dtype&&(r=Es(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Da.runKernel(In,a,s)}});da().prototype.prod=function(e,t){return this.throwIfDisposed(),Nh(this,e,t)};const Sh=Ga({reciprocal_:function(e){const t={x:Va(e,"x","reciprocal")};return Da.runKernel(Tn,t)}});da().prototype.reciprocal=function(){return this.throwIfDisposed(),Sh(this)},da().prototype.relu=function(){return this.throwIfDisposed(),du(this)},da().prototype.relu6=function(){return this.throwIfDisposed(),Gu(this)},da().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ui(this,e.shape)},da().prototype.reshape=function(e){return this.throwIfDisposed(),Ui(this,e)},da().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),vl(this,e,t,n)},da().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),kl(this,e,t,n)},da().prototype.reverse=function(e){return this.throwIfDisposed(),pu(this,e)},da().prototype.rfft=function(){return this.throwIfDisposed(),Bu(this)},da().prototype.round=function(){return this.throwIfDisposed(),Sl(this)},da().prototype.rsqrt=function(){return this.throwIfDisposed(),Ud(this)},da().prototype.selu=function(){return this.throwIfDisposed(),hu(this)},da().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),fu(this,e,t,n,r,a,s)},da().prototype.sigmoid=function(){return this.throwIfDisposed(),mu(this)};const Th=Ga({sign_:function(e){const t={x:Va(e,"x","sign")};return Da.runKernel(Un,t)}});da().prototype.sign=function(){return this.throwIfDisposed(),Th(this)},da().prototype.sin=function(){return this.throwIfDisposed(),$d(this)},da().prototype.sinh=function(){return this.throwIfDisposed(),Ed(this)},da().prototype.slice=function(e,t){return this.throwIfDisposed(),gu(this,e,t)},da().prototype.softmax=function(e){return this.throwIfDisposed(),vu(this,e)},da().prototype.softplus=function(){return this.throwIfDisposed(),ku(this)},da().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),gd(this,e,t)},da().prototype.split=function(e,t){return this.throwIfDisposed(),Iu(this,e,t)},da().prototype.sqrt=function(){return this.throwIfDisposed(),Nu(this)},da().prototype.square=function(){return this.throwIfDisposed(),Yo(this)},da().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Bl(this,e)},da().prototype.squeeze=function(e){return this.throwIfDisposed(),Su(this,e)},da().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ca?[this,e]:[this,...e];return Tu(n,t)},da().prototype.step=function(e){return this.throwIfDisposed(),Hu(this,e)};const Ch=Ga({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:Va(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Da.runKernel(ar,l,c)}});da().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Ch(this,e,t,n,r,a,s,i,o)},da().prototype.sub=function(e){return this.throwIfDisposed(),Ro(this,e)},da().prototype.sum=function(e,t){return this.throwIfDisposed(),Fo(this,e,t)};const $h=Ga({tan_:function(e){const t={x:Va(e,"x","tan","float32")};return Da.runKernel(lr,t)}});da().prototype.tan=function(){return this.throwIfDisposed(),$h(this)},da().prototype.tanh=function(){return this.throwIfDisposed(),Cu(this)},da().prototype.tile=function(e){return this.throwIfDisposed(),wo(this,e)},da().prototype.toBool=function(){return this.throwIfDisposed(),Es(this,"bool")},da().prototype.toFloat=function(){return this.throwIfDisposed(),Es(this,"float32")},da().prototype.toInt=function(){return this.throwIfDisposed(),Es(this,"int32")};const _h=Ga({topk_:function(e,t=1,n=!0){const r=Va(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=Da.runKernel(pr,s,i);return{values:o,indices:u}}});da().prototype.topk=function(e,t){return this.throwIfDisposed(),_h(this,e,t)},da().prototype.transpose=function(e){return this.throwIfDisposed(),Ou(this,e)};const Eh=Ga({unique_:function(e,t=0){const n=Va(e,"x","unique","string_or_numeric");F(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=Da.runKernel(mr,r,a);return{values:s,indices:i}}});let Ah;function Rh(){return null==Ah&&(Ah=Da.backend.epsilon()),Ah}da().prototype.unique=function(e){return this.throwIfDisposed(),Eh(this,e)},da().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Hd(this,e,t)},da().prototype.unstack=function(e){return this.throwIfDisposed(),Au(this,e)},da().prototype.where=function(e,t){return this.throwIfDisposed(),Fu(e,this,t)},da().prototype.zerosLike=function(){return this.throwIfDisposed(),Du(this)};class Fh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fh.prototype)}}class Dh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Dh.prototype)}}class Oh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Oh.prototype)}}class Mh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Mh.prototype)}}class Lh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lh.prototype)}}function zh(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Ph(e,t){if(!e)throw new Lh(t)}function Bh(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Wh(e){return 1===e.length?e[0]:e}function Vh(e){return Array.isArray(e)?e:[e]}function Uh(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Gh(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Hh={};function jh(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function qh(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>qh(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?qh(t):e[n]=t.value)}}}function Kh(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Hh)s=Hh[a];else if(s=t[a],null==s)throw new Oh(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Oh(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Hh?[o,u]=Hh.className:i in t&&([o,u]=t[i]),null==o)throw new Oh(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Hh))e[t]=Hh[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Hh);for(const e of Object.keys(n))Hh[e]=n[e];qh(s.config);const r=u(o,s.config,n,a);return Hh=Object.assign({},t),r}{const e=Object.assign({},Hh);for(const e of Object.keys(n))Hh[e]=n[e];const t=new o(s.config);return Hh=Object.assign({},e),t}}}function Xh(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Yh(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Zh(e){if(null==e)throw new Oh(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Jh(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Oh(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Qh(e,t,n=0,r=1/0){return Ph(n>=0),Ph(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ef(e,t){Array.isArray(e)?(F(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ef(e,`element ${n+1} of ${t}`)))):F(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${tf(e)}.`))}function tf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>tf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function nf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function rf(e,t){return bi((()=>Nu(Fo(Ao(e,e),t,!0))))}class af extends hi{getConfig(){return{}}}class sf extends af{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bi((()=>{const t=rf(e,this.axis),n=Yi(t,0,this.maxValue);return Ao(e,po(n,Ti(Rh(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}sf.className="MaxNorm",mi(sf);class of extends af{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bi((()=>po(e,Ti(Rh(),rf(e,this.axis)))))}getConfig(){return{axis:this.axis}}}of.className="UnitNorm",mi(of);class uf extends af{apply(e){return du(e)}}uf.className="NonNeg",mi(uf);class lf extends af{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bi((()=>{const t=rf(e,this.axis),n=Ti(Ao(this.rate,Yi(t,this.minValue,this.maxValue)),Ao(1-this.rate,t));return Ao(e,po(n,Ti(Rh(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}lf.className="MinMaxNorm",mi(lf);const cf={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function df(e){return jh(e)}function pf(e,t={}){return Kh(e,fi.getMap().classNameMap,t,"constraint")}function hf(e){return null==e?null:"string"==typeof e?pf({className:e in cf?cf[e]:e,config:{}}):e instanceof af?e:pf(e)}const ff=["channelsFirst","channelsLast"],mf=["nearest","bilinear"],gf=["valid","same","causal"],yf=["max","avg"],bf=["sum","mul","concat","ave"],xf=new Map;function wf(e){Jh(ff,"DataFormat",e)}function vf(e){Jh(gf,"PaddingMode",e)}function kf(e){Jh(yf,"PoolMode",e)}const If=[];function Nf(e,t){If.push(e);try{const e=t();return If.pop(),e}catch(e){throw If.pop(),e}}function Sf(e){if(!$f(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===If.length?"":If.join("/")+"/")+e}function Tf(e){if(!$f(e))throw new Error("Not a valid tensor name: '"+e+"'");xf.has(e)||xf.set(e,0);const t=xf.get(e);if(xf.set(e,xf.get(e)+1),t>0){const n=`${e}_${t}`;return xf.set(n,1),n}return e}const Cf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function $f(e){return!!e.match(Cf)}function _f(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Ef(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Af(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Rf(e,t){if(t<e)throw new Oh(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ff(e,t){return Es(e,t)}function Df(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ui(e,n)}function Of(e,t,n){return bi((()=>{switch(e.rank){case 1:return yu(e,t,n);case 2:return bu(e,[t,0],[n,e.shape[1]]);case 3:return xu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return wu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return gu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return gu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Oh(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Mf(e,t,n){return bi((()=>{switch(e.rank){case 1:return yu(e,t,n);case 2:return bu(e,[0,t],[e.shape[0],n]);case 3:return xu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return wu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Oh(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Lf(e,t,n,r){return bi((()=>{switch(e.rank){case 1:return yu(e,t,n);case 2:switch(r){case 1:return Of(e,t,n);case 2:return Mf(e,t,n);default:throw new Oh(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Of(e,t,n);case 2:return xu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Mf(e,t,n);default:throw new Oh(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Of(e,t,n);case 2:return wu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return wu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Mf(e,t,n);default:throw new Oh(`The axis is not within the rank of the tensor ${r}`)}default:throw new Oh(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function zf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Zi(e,t)}function Pf(e,t){switch(e.rank){case 1:return Ji([e,t]);case 2:return Qi([e,t],0);case 3:return eo([e,t],0);case 4:return to([e,t],0);default:throw new Oh(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Bf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Oh(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return wo(e,t)}function Wf(e,t=0,n=1,r,a){return lu(e,t,n,r,a)}function Vf(e,t,n,r){if(e.rank<2||t.rank<2)throw new Mh(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Mh(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return el({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Hf(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=Ui(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ui(Ou(t,c),[u,-1]);const d=[...a,...l];return Ui(el({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Hf(e.rank,r,"channelsLast"):null,activation:n}),d)}}function Uf(e,t,n){return bi((()=>(t=Array.isArray(t)?$u(t,"int32"):Es(t,"int32"),No(e,t,n))))}function Gf(e){return Ao(e,e)}function Hf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Oh(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ui(t,[1,r[0],1,1,1]):Ui(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ui(t,[1,1,1,1,r[0]]):Ui(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ui(t,[1,r[0],1,1]):Ui(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ui(t,[1,1,1,r[0]]):Ui(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ui(t,[1,r[0],1]):Ui(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ui(t,[1,1,r[0]]):Ui(t,[1].concat(r))}else if(e<3)return t;throw new Oh(`Unsupported input rank by biasAdd: ${t.rank}`)}function jf(e,t,n){return bi((()=>(null==n&&(n="channelsLast"),wf(n),Ti(e,Hf(e.rank,t,n)))))}function qf(e,t,n,r){return bi((()=>Mu(e,t,n,r)))}function Kf(e,t,n=!1){return n?e():t()}const Xf=["fanIn","fanOut","fanAvg"],Yf=["normal","uniform","truncatedNormal"];class Zf extends hi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Jf extends Zf{apply(e,t){return tu(e,t)}}Jf.className="Zeros",mi(Jf);class Qf extends Zf{apply(e,t){return nu(e,t)}}Qf.className="Ones",mi(Qf);class em extends Zf{constructor(e){if(super(),"object"!=typeof e)throw new Oh(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Oh(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return bi((()=>Ao(Ii(this.value),nu(e,t))))}getConfig(){return{value:this.value}}}em.className="Constant",mi(em);class tm extends Zf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return cu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}tm.className="RandomUniform",mi(tm);class nm extends Zf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Mh(`randomNormal does not support dType ${t}.`);return Wf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}nm.className="RandomNormal",mi(nm);class rm extends Zf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Mh(`truncatedNormal does not support dType ${t}.`);return Eu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}rm.className="TruncatedNormal",mi(rm);class am extends Zf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return bi((()=>{if(2!==e.length||e[0]!==e[1])throw new Oh("Identity matrix initializer can only be used for 2D square matrices.");return Ao(this.gain,vo(e[0]))}))}getConfig(){return{gain:this.gain}}}am.className="Identity",mi(am);class sm extends Zf{constructor(e){if(super(),e.scale<0)throw new Oh(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Jh(Xf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Jh(Yf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(wf(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=_f(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=_f(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=_f(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Mh(`${this.getClassName()} does not support dType ${t}.`);return Eu(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return cu(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}sm.className="VarianceScaling",mi(sm);class im extends sm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return sm.className}}im.className="GlorotUniform",mi(im);class om extends sm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return sm.className}}om.className="GlorotNormal",mi(om);class um extends sm{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return sm.className}}um.className="HeNormal",mi(um);class lm extends sm{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return sm.className}}lm.className="HeUniform",mi(lm);class cm extends sm{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return sm.className}}cm.className="LeCunNormal",mi(cm);class dm extends sm{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return sm.className}}dm.className="LeCunNormal",mi(dm);class pm extends Zf{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Mh("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return bi((()=>{if(e.length<2)throw new Mh("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Wf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Yl.gramSchmidt(t);return e[0]>e[1]&&(n=Ou(n)),Ao(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}pm.className="Orthogonal",mi(pm);const hm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function fm(e,t={}){return Kh(e,fi.getMap().classNameMap,t,"initializer")}function mm(e){return jh(e)}function gm(e){if("string"==typeof e){const t=e in hm?hm[e]:e;if("GlorotNormal"===t)return new om;if("GlorotUniform"===t)return new im;if("HeNormal"===t)return new um;if("HeUniform"===t)return new lm;if("LeCunNormal"===t)return new cm;if("LeCunUniform"===t)return new dm;{const e={};return e.className=t,e.config={},fm(e)}}return e instanceof Zf?e:fm(e)}let ym=0;function bm(){return ym++}const xm={};function wm(e=""){return e in xm||(xm[e]=0),xm[e]+=1,e+xm[e].toString()}function vm(e){return Array.isArray(e)&&Array.isArray(e[0])}function km(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Im(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Oh(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Nm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Oh(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Sm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Tm="Variable";class Cm{constructor(e,t="float32",n=Tm,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=bm(),n=null==n?Tm:n,this.originalName=Sf(n),this.name=Tf(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return Da.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function $m(e){return e.map((e=>e.read()))}function _m(e){e.forEach((e=>{e[0].write(e[1])}))}class Em{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Am{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=bm(),null!=s&&(this.originalName=Sf(s),this.name=Tf(this.originalName)),this.rank=t.length}}let Rm=0;class Fm{constructor(e,t){this.callArgs=t,this.id=Rm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Dm=0;class Om extends hi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Dm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Uh(e)+"_"+wm(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Dh(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Oh(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Wh(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Wh(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Fh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Fh(`Layer ${this.name} is not connected, no input to return.`);return Wh(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Fh(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Fh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Wh(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Vh(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Vh(this.inputSpec);if(e.length!==t.length)throw new Oh(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Oh(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Oh(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Oh(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Oh(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Oh(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Oh(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Vh(e);let r=!0;for(const e of n)if(!(e instanceof Am)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Am){a=!1;break}if(r===a)throw new Oh("Arguments to apply() must be all SymbolicTensors or all Tensors");return Nf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Vh(e))t.push(n.shape);this.build(Wh(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Vh(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Wh(s),null!=this.activityRegularizer)throw new Mh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Vh(e);const t=[];for(const n of e)t.push(n.shape);return Wh(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Am(s,n,this,Vh(e),t,this.name,r))):new Am(s,r,this,Vh(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Mh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Fh(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Fh(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Dh(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Sm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return $m(e?this.trainableWeights:this.weights)}setWeights(e){bi((()=>{const t=this.weights;if(t.length!==e.length)throw new Oh(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=$m(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!z(s.shape,o.shape))throw new Oh(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}_m(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Oh(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():gm("zeros"));const u=r.apply(t,n),l=new Cm(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Vh(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Vh(e);t=Vh(t),n=Vh(n),r=Vh(r),a=km(a),s=km(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Fm({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Mm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Mm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Lm extends Om{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:wm("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Oh("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Oh("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Oh("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Am(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Fm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Oh(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function zm(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];xi(r)}}function Pm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Bm,Wm;Lm.className="InputLayer",mi(Lm),(Wm=Bm||(Bm={}))[Wm.SILENT=0]="SILENT",Wm[Wm.VERBOSE=1]="VERBOSE";class Vm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Um{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Gm extends Vm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=bi((()=>Ti(this.totals[e],Ao(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:bi((()=>{const n=Ao(po(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),wi(t[e])})))}}class Hm extends Vm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class jm extends Vm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||lc,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");J(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Xr();return(...s)=>{const i=null!=n?n():Xr();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await zm(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await zm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await zm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await zm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await zm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):J(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await zm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await zm(e),await this.trainEnd(e))}}function qm(e,t){return null==e&&(e={}),e instanceof Vm?[e]:Array.isArray(e)&&e[0]instanceof Vm?e:Vh(e).map((e=>new jm(e,t)))}class Km{constructor(){}static registerCallbackConstructor(e,t){F(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Km.checkForDuplicate(t),null==Km.constructors[e]&&(Km.constructors[e]=[]),Km.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Km.constructors)Km.constructors[+t].forEach((t=>{if(t===e)throw new Oh("Duplicate callback constructor.")}))}static clear(){Km.constructors={}}static createCallbacks(e){const t=[];for(const n in Km.constructors){const r=+n;e>=r&&t.push(...Km.constructors[r])}return t.map((e=>new e))}}function Xm(e,t,n,r,a,s,i,o,u){const l=new Hm,c=[new Gm,...Km.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new Um(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function Ym(e,t={},n=!1){return Kh(e,fi.getMap().classNameMap,t,"layer",n)}function Zm(e,t){return bi((()=>{"float32"!==e.dtype&&(e=Es(e,"float32"));const n=Fo(Gf(e),t,!0),r=ko(n.shape,Rh()),a=Nu(Po(n,r));return po(e,a)}))}function Jm(e,t){return bi((()=>Bo(Gf(Ro(t,e)),-1)))}function Qm(e,t){return bi((()=>Bo(Si(Ro(t,e)),-1)))}function eg(e,t){return bi((()=>{const n=Ro(e,t),r=Yi(Si(e),Rh(),Number.MAX_VALUE),a=Si(po(n,r));return Ao(100,Bo(a,-1))}))}function tg(e,t,n=!1){return bi((()=>{if(n)t=vu(t);else{const e=Fo(t,t.shape.length-1,!0);t=po(t,e)}return t=Yi(t,Rh(),1-Rh()),Jo(Fo(Ao(Es(e,"float32"),$o(t)),t.shape.length-1))}))}function ng(e,t,n=!1){return bi((()=>{const r=Es(Io(function(e){const t=[_f(e.shape)];return Ui(e,t)}(e)),"int32"),a=(t=Yi(t,Rh(),1-Rh())).shape;return tg(Ui(eu(r,a[a.length-1]),a),t,n)}))}function rg(e,t){return bi((()=>{let n;return n=Yi(t,Rh(),1-Rh()),n=$o(po(n,Ro(1,n))),Bo(function(e,t){if(!z(e.shape,t.shape))throw new Oh(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return bi((()=>{const n=du(t),r=Jo(Si(t));return Ti(Ro(n,Ao(t,e)),_o(bo(r)))}))}(e,n),-1)}))}function ag(e,t){return bi((()=>{const n=Zm(e,-1),r=Zm(t,-1),a=Ao(n,r);return Jo(Fo(a,-1))}))}Km.constructors={};const sg={meanSquaredError:Jm,meanAbsoluteError:Qm,meanAbsolutePercentageError:eg,meanSquaredLogarithmicError:function(e,t){return bi((()=>{const n=Yi(t,Rh(),Number.MAX_VALUE),r=$o(Ti(1,n)),a=Yi(e,Rh(),Number.MAX_VALUE),s=$o(Ti(1,a));return Bo(Gf(Ro(r,s)),-1)}))},squaredHinge:function(e,t){return bi((()=>{const n=Po(0,Ro(1,Ao(e,t)));return Bo(Gf(n),-1)}))},hinge:function(e,t){return bi((()=>{const n=Po(0,Ro(1,Ao(e,t)));return Bo(n,-1)}))},categoricalHinge:function(e,t){return bi((()=>{const n=Fo(Ao(e,t),-1),r=Eo(Ao(Ro(1,e),t),-1);return Po(0,Ti(1,Ro(r,n)))}))},logcosh:function(e,t){return bi((()=>{const n=Math.log(2),r=Ro(t,e),a=Ro(Ti(r,ku(Ao(-2,r))),n);return Bo(a,-1)}))},categoricalCrossentropy:tg,sparseCategoricalCrossentropy:ng,binaryCrossentropy:rg,kullbackLeiblerDivergence:function(e,t){return bi((()=>{const n=Yi(e,Rh(),1),r=Yi(t,Rh(),1);return Fo(Ao(e,$o(po(n,r))),-1)}))},poisson:function(e,t){return bi((()=>{const n=$o(Ti(Rh(),t));return Bo(Ro(t,Ao(e,n)),-1)}))},cosineProximity:ag};function ig(e){if("string"==typeof e){if(e in sg)return sg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Oh(t)}return e}function og(e,t){return bi((()=>{const n=Ao(.5,ru(t)),r=Ff(So(t,n),e.dtype);return Bo(yo(e,r),-1)}))}function ug(e,t){return bi((()=>Ff(yo(_i(e,-1),_i(t,-1)),"float32")))}function lg(e,t){return rg(e,t)}function cg(e,t){return e.rank===t.rank&&(e=Su(e,[e.rank-1])),(t=_i(t,-1)).dtype!==e.dtype&&(t=Es(t,e.dtype)),Es(yo(e,t),"float32")}const dg=tg,pg=ng,hg={binaryAccuracy:og,categoricalAccuracy:ug,precision:function(e,t){return bi((()=>{const n=function(e,t){return bi((()=>Es(Fo(Oo(yo(e,1),yo(t,1))),"float32")))}(e,t),r=function(e,t){return bi((()=>Es(Fo(Oo(yo(e,0),yo(t,1))),"float32")))}(e,t),a=Ti(n,r);return Es(Fu(So(a,0),po(n,a),0),"float32")}))},categoricalCrossentropy:dg,sparseCategoricalCrossentropy:pg,mse:Jm,MSE:Jm,mae:Qm,MAE:Qm,mape:eg,MAPE:eg,cosine:ag};function fg(e){if("string"==typeof e&&e in hg)return hg[e];if("string"!=typeof e&&null!=e)return e;throw new Oh(`Unknown metric ${e}`)}function mg(e){if(Ph(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(sg))if(sg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(hg))if(hg[n]===e){t=n;break}return void 0!==t?t:e.name}}function gg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!yg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function yg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!yg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!yg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function bg(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function xg(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}bg([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function wg(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];bg([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)bg(["","","",s[e]],t,r)}function vg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function kg(e,t){if(null===e)return null;if("string"==typeof e)return Gh(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];vg(t,a,r)?n.push(r):n.push(kg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Gh(n);t[e]=kg(r,e)}}return t}}function Ig(e,t){if(null==e)return null;if("string"==typeof e)return Uh(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];vg(t,a,r)?n.push(r):n.push(Ig(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Uh(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ig(r,n):r}return t}}const Ng="3.11.0";class Sg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Sg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Oh(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Es(t,e.dtype)}catch(n){throw new Oh(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Am){if(null==this.id2Value[e.id])throw new Oh(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Oh(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Am){if(null==this.id2Value[e.id])throw new Oh(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Oh(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&xi(this.id2Mask)}}const Tg={},Cg={};function $g(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let d,p;if(null==Tg[c]){const e=function(e,t){F(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Eg(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Eg(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:_g(r)}}(i,t);d=e.sorted,p=e.recipientCounts,Tg[c]=d,Cg[c]=p}d=Tg[c],p={},a||Object.assign(p,Cg[c]);const h=new Sg(t);for(let e=0;e<d.length;++e){if(null!=r){const e=yi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof Lm)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=h.getValue(e),r=h.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Vh(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Ag(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){h.hasKey(x[e])||h.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||xi(f)}return h.disposeMasks(),s?u:u[0]}function _g(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Eg(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Ag(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Rg extends Om{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=wm(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Yh(this.inputs).length!==this.inputs.length)throw new Oh(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Yh(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Ph(0===n,"input layer has >1 nodes"),Ph(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Lm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Dh(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Rg.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let h=Object.keys(p).map((e=>parseInt(e,10))).sort(Xh);this.layers=[];for(const e of h){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Rg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,h=Object.keys(d).map((e=>parseInt(e,10))).sort(Xh);const f=this.inputs.slice(),m=[];for(const e of h)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Dh(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Dh(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Fm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Oh("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Oh(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Oh(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Oh(`${e.length} of ${r} weights are not set: ${e}`)}_m(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ng}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ig(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return bi((()=>{e=Vh(e);const n=new Sg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return $g(this.outputs,n,t)}))}computeMask(e,t){return bi((()=>{let n;return e=Vh(e),n=null==t?zh(null,e.length):Vh(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=km(e);if(t.length!==this.inputLayers.length)throw new Oh(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xh);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=km(t.computeOutputShape(Wh(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Ph(t in n),a.push(n[t])}return Wh(a)}runInternalGraph(e,t){null==t&&(t=zh(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xh);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Vh(t.call(e,l)),u=Vh(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Vh(t.call(r,l)),u=Vh(t.computeMask(r,i));if(t.activityRegularizer)throw new Mh("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Ph(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Rg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Rg.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Oh(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Oh("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Oh(`No such layer: ${e}`)}calculateLosses(){return bi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Rg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Rg.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Rg.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Rg.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Rg.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const d=c.inboundNodes[u];n.push(d.outputTensors[l])}n.length>0&&e.apply(Wh(n),r)}function u(e){const n=e.name,s=Ym(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Oh(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Zh(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],p=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],r=e[2];Ph(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Ph(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:d,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Oh("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){bi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Dg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=bi((()=>{if(1===e.shape.length)return As(e);if(2===e.shape.length){if(e.shape[1]>1)return _i(e,1);if(1===e.shape[1])return Ui(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());xi(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),$u(a,"float32")}return null}function Og(e,t){return Ao(e,t)}function Mg(e,t){let n,r;const a=t;n=a.xs,r=a.ys,F(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Lg("input",e.inputNames,n),i=Lg("output",e.outputNames,r),o=s[0].shape[0];F(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),F(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)F(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)F(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Lg(e,t,n){if(n instanceof ca)return[n];if(Array.isArray(n))return F(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Oh(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function zg(e){return"function"==typeof e.iterator}function Pg(e){F(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Bg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Of(e,t,n-t))):Of(e,t,n-t)}function Wg(e,t){return bi((()=>null==e?null:Array.isArray(e)?e.map((e=>Wg(e,t))):Uf(e,"int32"===t.dtype?t:Es(t,"int32"))))}function Vg(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Ug(e){const t=[];e instanceof ca&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Df(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Gg(e,t){if(null==e)return;const n=[];if(t instanceof ca)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ca)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Hg(e){return Array.isArray(e)}function jg(e){return!function(e){return e instanceof ca}(e)&&!Hg(e)}function qg(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Hg(e)&&e.length>0)t=!0;else if(jg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Oh(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(jg(e)){s=[];for(const n of t){if(null==e[n])throw new Oh(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Hg(e)){if(e.length!==t.length)throw new Oh(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new Oh(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Ug(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Oh(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Oh(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Kg(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Oh(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Oh(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Oh(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Oh(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Xg extends Rg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Oh("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),bg(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?xg(o[e],n,r):wg(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Sm(e.collectedTrainableWeights):Sm(e.trainableWeights),t}(e),l=Sm(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>oc.adagrad(.01),Adadelta:()=>oc.adadelta(1,.95,Rh()),Adam:()=>oc.adam(.001,.9,.999,Rh()),Adamax:()=>oc.adamax(.002,.9,.999,Rh(),0),RMSProp:()=>oc.rmsprop(.001,.9,0,Rh()),SGD:()=>oc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Oh(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ni))throw new Oh("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Oh(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>ig(e)))}else{const n=ig(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Oh(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(ig(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Nf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Nf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===rg?-1!==["accuracy","acc"].indexOf(i)?r=og:-1!==["crossentropy","ce"].indexOf(i)&&(r=lg):this.lossFunctions[e]===ng?-1!==["accuracy","acc"].indexOf(i)?r=cg:-1!==["crossentropy","ce"].indexOf(i)&&(r=pg):-1!==["accuracy","acc"].indexOf(i)?r=ug:-1!==["crossentropy","ce"].indexOf(i)&&(r=dg),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=fg(i);s=e,n=""+mg(i)}let t;Nf(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Pg(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return Wh(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Gg(a[0],e),Gg(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Mh("Verbose mode is not implemented yet.");F(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=bi((()=>{if(t.value){const{xs:n,ys:r}=Mg(e,t.value),i=n.concat(r),l=bi((()=>a(i)));if(xi(i),0===u)for(let e=0;e<l.length;++e)s.push(Ii(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=bi((()=>Ti(s[e],Ao(c,t)))),u>0&&xi(n)}xi(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=po(s[e],o),xi(t)}return Wh(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Oh(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Oh(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Oh("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Sg;if(e instanceof ca&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Oh(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Oh(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=$g(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=zh(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Oh(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return bi((()=>{const r=this.checkNumSamples(e);if(n)throw new Mh("Verbose predictLoop() is not implemented yet.");const a=Vg(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)bi((()=>{const n=a[t][0],r=a[t][1],s=Bg(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Sg(i);return $g(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Wh(s.map((e=>Zi(e,0))))}))}predict(e,t={}){const n=Ug(e);Kg(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Pg(e),this.predictLoop(n,e)}finally{Gg(n,e)}}predictOnBatch(e){Kg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Dh("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ng?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t){const n=Yh(e.map((e=>e.shape[0])));n.sort();const r=Yh(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Oh(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Oh(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!z(n,r))throw new Oh(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=qg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qg(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Jm,rg,tg];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===tg&&1===s.shape[s.shape.length-1])throw new Oh(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Oh(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Oh(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Fg(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Dg(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return bi((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Mh("Verbose mode is not implemented yet.");if(null!=a)throw new Mh("steps mode in testLoop() is not implemented yet");{const r=Vg(s,n),a=$u(Rf(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=Of(a,s,o-s),l=Wg(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Ii(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ti(i[e],Ao(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=po(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Bh(e,r)>1&&(a+=`_${Bh(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Sg(e),o=$g(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Og(n,a[e]));const s=Bo(n);t.push(s),u=0===e?n:Ti(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Bo(t(r[a],o[a]))}wi(n),s.push(n)}return u=Bo(u),this.calculateLosses().forEach((e=>{u=Ti(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>bi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Sg(s),o=$g(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Bo(r(a[e],o[e]));n=0===e?s:Ti(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Bo(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Pg(d);const p=!1,h=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);a=h[0],s=h[1],c=h[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Mh("validationData including sample weights is not supported yet."):new Oh(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=Bg(a,e,t),a=Bg(a,0,e),l=Bg(s,e,t),s=Bg(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],w=b.slice());const v=qm(r.callbacks,r.yieldEvery),k=await async function(e,t,n,r,a,s,i,o,u,l,c,d,p,h){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==p&&(p=0);let f=!1;null!=u&&null!=l&&(f=!0);const m=e.checkNumSamples(n,a,h,"steps_per_epoch");let g;null!=m&&(g=Rf(0,m)),null==i&&(i=1);const{callbackList:y,history:b}=Xm(o,i,s,p,m,h,a,f,d);y.setModel(e),e.history=b,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await y.onEpochBegin(i);const s={};{if("batch"===c)throw new Mh("batch shuffling is not implemneted yet");c&&_(g);const i=$u(g),o=Vg(m,a);for(let c=0;c<o.length;++c){const d={};if(await y.onBatchBegin(c,d),bi((()=>{const p=o[c][0],h=o[c][1],m=Of(i,p,h-p);d.batch=c,d.size=h-p;const g=Wg(n,m),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];d[t]=n,wi(n)}if(c===o.length-1&&f){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];wi(a),s["val_"+n]=a}}})),await y.onBatchEnd(c,d),Pm(d),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,d,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null);return k}finally{e.isTraining=!1,Gg(a,t),Gg(s,n),Gg(u,i),Gg(l,o),null!=c&&xi(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(F(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),F(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),F(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),F(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),F(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(zg(n.validationData))F(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Mh("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=qm(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:h}=Xm(c,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,d=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Mg(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await p.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=Fg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Dg(a[e],null,t[e]))}const l=r.concat(a).concat(i),h=o(l);xi(l);for(let e=0;e<u.length;++e){const t=u[e],n=h[e];s[t]=n,wi(n)}await p.onBatchEnd(d,s),Pm(s),d++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=zg(n.validationData)?Vh(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Vh(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return xi(s),Wh(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=yi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-yi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Uh(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Uh(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Uh(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Uh(mg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Uh(mg(e))));{const e={};for(const t in this.metrics)e[t]=Uh(mg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ym(kg(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Gh(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Gh(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Gh(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Gh(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Gh(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=as(e);if(0===t.length)throw new Oh(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Oh(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Oh("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Xa(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Ng}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Xa(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Qa([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;gg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){gg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Xg.className="Model",mi(Xg);class Yg extends Xg{}Yg.className="Functional",mi(Yg);class Zg extends Xg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:wm("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Oh(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Zg||e instanceof Xg;let n;if(t){if(n=e,1!==n.outputs.length)throw new Oh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Oh("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Oh("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Oh("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Lm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Oh(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Oh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Mm(this.outputs[0])}this.inboundNodes=[],new Fm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:zh(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Nm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Dh("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Dh("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Dh("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Dh("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Oh("Legacy serialization format not supported yet.");a=t}else F(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Zg))throw new Mh(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=Ym(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Oh("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Oh("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Zg.className="Sequential",mi(Zg);class Jg extends hi{getConfig(){return{}}}class Qg extends Jg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Mh(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ho(e)}(e,t)}}Qg.className="elu",mi(Qg);class ey extends Jg{apply(e){return hu(e)}}ey.className="selu",mi(ey);class ty extends Jg{apply(e){return du(e)}}ty.className="relu",mi(ty);class ny extends Jg{apply(e){return bi((()=>Wo(6,du(e))))}}ny.className="relu6",mi(ny);class ry extends Jg{apply(e){return e}}ry.className="linear",mi(ry);class ay extends Jg{apply(e){return mu(e)}}ay.className="sigmoid",mi(ay);class sy extends Jg{apply(e){return function(e){return bi((()=>{const t=Ti(.5,Ao(.2,e));return Yi(t,0,1)}))}(e)}}sy.className="hardSigmoid",mi(sy);class iy extends Jg{apply(e){return ku(e)}}iy.className="softplus",mi(iy);class oy extends Jg{apply(e){return function(e){return bi((()=>po(e,Ti(Si(e),1))))}(e)}}oy.className="softsign",mi(oy);class uy extends Jg{apply(e){return Cu(e)}}uy.className="tanh",mi(uy);class ly extends Jg{apply(e,t=-1){return vu(e,t)}}ly.className="softmax",mi(ly);class cy extends Jg{apply(e,t=-1){return Do(e,t)}}cy.className="logSoftmax",mi(cy);class dy extends Jg{apply(e,t=1){return bi((()=>Ao(mu(Ao(e,t)),e)))}}dy.className="swish",mi(dy);class py extends Jg{apply(e){return bi((()=>Ao(e,Cu(ku(e)))))}}function hy(e){return e.getClassName()}function fy(e,t={}){return Kh(e,fi.getMap().classNameMap,t,"activation")}function my(e){if(null==e){return fy({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},fy(t)}return e instanceof Jg?e:fy(e)}py.className="mish",mi(py);class gy extends hi{}class yy extends gy{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return bi((()=>{let t=tu([1]);return this.hasL1&&(t=Ti(t,Fo(Ao(this.l1,Si(e))))),this.hasL2&&(t=Ti(t,Fo(Ao(this.l2,Gf(e))))),Ui(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}yy.className="L1L2",mi(yy);const by={l1l2:"L1L2"};function xy(e){return jh(e)}function wy(e,t={}){return Kh(e,fi.getMap().classNameMap,t,"regularizer")}function vy(e){return null==e?null:"string"==typeof e?wy({className:e in by?by[e]:e,config:{}}):e instanceof gy?e:wy(e)}class ky extends Om{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Im(e);let n=du(e);return null!=this.maxValue&&(n=Yi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ky.className="ReLU",mi(ky);class Iy extends Om{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Im(e);return Co(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Iy.className="LeakyReLU",mi(Iy);class Ny extends Om{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vy(e.alphaRegularizer),this.alphaConstraint=hf(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Oh(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Nm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Em({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Im(e),su(e,this.alpha.read())}getConfig(){const e={alphaInitializer:mm(this.alphaInitializer),alphaRegularizer:xy(this.alphaRegularizer),alphaConstraint:df(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ny.className="PReLU",mi(Ny);class Sy extends Om{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Mh(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Im(e);return ho(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Sy.className="ELU",mi(Sy);class Ty extends Om{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Im(e);return Ao(n,Es(So(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Ty.className="ThresholdedReLU",mi(Ty);class Cy extends Om{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new ly).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Im(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $y(e,t,n){if("number"==typeof e)return zh(e,t);if(e.length!==t)throw new Oh(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Oh(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function _y(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Ey(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Af([n-t,0]);else{if("same"!==r)throw new Oh(`Unsupport padding mode: ${r}.`);e*=t}return e}function Ay(e,t){return bi((()=>(wf(t),"channelsFirst"===t?Ou(e,[0,2,3,1]):e)))}function Ry(e,t){return bi((()=>(wf(t),"channelsFirst"===t?Ou(e,[0,2,3,4,1]):e)))}function Fy(e,t,n,r=[1,1],a="valid",s,i,o=null){return bi((()=>{if(null==s&&(s="channelsLast"),wf(s),3!==e.rank&&4!==e.rank)throw new Oh(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Oh(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Ay(e,s);if("causal"===a)throw new Mh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Yu({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Ou(u,[0,3,1,2])),u}))}Cy.className="Softmax",mi(Cy);class Dy extends Om{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Dy.verifyArgs(t),this.rank=e,ef(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Mh(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=$y(t.kernelSize,e,"kernelSize"),this.strides=$y(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,vf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,wf(this.dataFormat),this.activation=my(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=gm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=hf(t.biasConstraint),this.biasRegularizer=vy(t.biasRegularizer),this.activityRegularizer=vy(t.activityRegularizer),this.dilationRate=$y(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Oh(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Oh(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Oh(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Ph("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Qh(e.kernelSize,"number",1,3))throw new Oh(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:hy(this.activation),useBias:this.useBias,biasInitializer:mm(this.biasInitializer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),biasConstraint:df(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Oy extends Dy{constructor(e,t){super(e,t),this.kernel=null,Oy.verifyArgs(t),this.filters=t.filters,ef(this.filters,"filters"),this.kernelInitializer=gm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=hf(t.kernelConstraint),this.kernelRegularizer=vy(t.kernelRegularizer)}build(e){e=Nm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Oh(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return bi((()=>{let t;e=Im(e);const n=null==this.bias?null:this.bias.read(),r=nf(this.activation.getClassName());if(null!=r&&2===this.rank)t=Fy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return bi((()=>{if(null==s&&(s="channelsLast"),wf(s),3!==e.shape.length)throw new Oh(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Oh(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Oh(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Ou(e,[0,2,1])),"causal"===a)throw new Mh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ro(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=jf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Fy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Mh("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return bi((()=>{if(null==s&&(s="channelsLast"),wf(s),4!==e.rank&&5!==e.rank)throw new Oh(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Oh(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Ry(e,s);if("causal"===a)throw new Mh("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=io(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=jf(o,n)),"channelsFirst"===s&&(o=Ou(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Nm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=_y(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:mm(this.kernelInitializer),kernelRegularizer:xy(this.kernelRegularizer),kernelConstraint:df(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Oh(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class My extends Oy{constructor(e){super(2,e),My.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Qh(e.kernelSize,"number",1,2))throw new Oh(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}My.className="Conv2D",mi(My);class Ly extends Oy{constructor(e){super(3,e),Ly.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Oh(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ly.className="Conv3D",mi(Ly);class zy extends My{constructor(e){if(super(e),this.inputSpec=[new Em({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Oh(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Nm(e)).length)throw new Oh("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Oh("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Em({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return bi((()=>{let t=Im(e);if(4!==t.shape.length)throw new Oh(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],d=this.strides[1],p=[r,Ey(i,c,u,this.padding),Ey(o,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ou(t,[0,2,3,1]));let h=so(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=Ou(h,[0,3,1,2])),null!=this.bias&&(h=jf(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){const t=(e=Nm(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Ey(t[r],o,s,this.padding),t[a]=Ey(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zy.className="Conv2DTranspose",mi(zy);class Py extends Ly{constructor(e){if(super(e),this.inputSpec=[new Em({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Oh(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Nm(e)).length)throw new Oh("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Oh("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Em({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return bi((()=>{let t=Im(e);if(5!==t.shape.length)throw new Oh(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Ey(o,h,c,this.padding),Ey(u,f,d,this.padding),Ey(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ou(t,[0,2,3,4,1]));let y=uo(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ou(y,[0,4,1,2,3])),null!==this.bias&&(y=jf(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Nm(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Ey(t[r],l,i,this.padding),t[a]=Ey(t[a],c,o,this.padding),t[s]=Ey(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Py.className="Conv3DTranspose",mi(Py);class By extends Oy{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Oh("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Oh("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Oh(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=gm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vy(t.depthwiseRegularizer),this.depthwiseConstraint=hf(t.depthwiseConstraint),this.pointwiseInitializer=gm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vy(t.pointwiseRegularizer),this.pointwiseConstraint=hf(t.pointwiseConstraint)}build(e){if((e=Nm(e)).length<this.rank+2)throw new Oh(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Oh(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Em({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return bi((()=>{let t;if(e=Im(e),1===this.rank)throw new Mh("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ou(e,[0,2,3,1])),t=fu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=jf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ou(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=mm(this.depthwiseInitializer),e.pointwiseInitializer=mm(this.pointwiseInitializer),e.depthwiseRegularizer=xy(this.depthwiseRegularizer),e.pointwiseRegularizer=xy(this.pointwiseRegularizer),e.depthwiseConstraint=df(this.depthwiseConstraint),e.pointwiseConstraint=df(this.pointwiseConstraint),e}}By.className="SeparableConv";class Wy extends By{constructor(e){super(2,e)}}Wy.className="SeparableConv2D",mi(Wy);class Vy extends Oy{constructor(e){super(1,e),Vy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Qh(e.kernelSize,"number",1,1))throw new Oh(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Vy.className="Conv1D",mi(Vy);class Uy extends Om{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return bi((()=>{if(e=Im(e),"channelsLast"===this.dataFormat){const t=Lf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Lf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Lf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Lf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Uy.className="Cropping2D",mi(Uy);class Gy extends Om{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Jh(mf,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return bi((()=>{let t=Im(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ou(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Xl.resizeNearestNeighbor(t,[e,r]):Xl.resizeBilinear(t,[e,r]);return Ou(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Xl.resizeNearestNeighbor(t,[e,r]):Xl.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Gy.className="UpSampling2D",mi(Gy);class Hy extends Dy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=gm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=hf(e.depthwiseConstraint),this.depthwiseRegularizer=vy(e.depthwiseRegularizer)}build(e){if((e=Nm(e)).length<4)throw new Oh(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Oh(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bi((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return bi((()=>{null==a&&(a="channelsLast"),wf(a);let i=Ay(e,a);if(4!==e.rank)throw new Oh(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Oh(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=lo(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Ou(i,[0,3,1,2])),i}))}(e=Im(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=jf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Nm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=_y(t,this.kernelSize[0],this.padding,this.strides[0]),s=_y(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=mm(this.depthwiseInitializer),e.depthwiseRegularizer=xy(this.depthwiseRegularizer),e.depthwiseConstraint=df(this.depthwiseRegularizer),e}}function jy(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Oh("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function qy(e,t,n,r=!1,a,s,i=!1,o=!1){return bi((()=>{const u=t.shape.length;if(u<3)throw new Oh(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Rf(2,u));if(t=Ou(t,l),null!=s)throw new Mh("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Es(Es(a,"bool"),"float32")).rank===u-1&&(a=xo(a,-1)),a=Ou(a,l)),r&&(t=pu(t,0),null!=a&&(a=pu(a,0)));const c=[];let d,p=n;const h=t.shape[0],f=Au(t);let m,g;null!=a&&(m=Au(a));for(let t=0;t<h;++t){const n=f[t],r=bi((()=>e(n,p)));if(null==a)d=r[0],p=r[1];else{const e=bi((()=>{const e=m[t],n=Ro(ru(e),e);return{output:Ti(Ao(r[0],e),Ao(p[0],n)),newStates:p.map(((t,a)=>Ti(Ao(r[1][a],e),Ao(t,n))))}}));d=e.output,p=e.newStates}o&&c.push(d)}return o&&(g=Tu(c,1)),[d,g,p]}))}Hy.className="DepthwiseConv2D",mi(Hy);class Ky extends Om{constructor(e){let t;if(super(e),null==e.cell)throw new Oh("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new nb({cells:e.cell}):e.cell,null==t.stateSize)throw new Oh("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Em({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Rf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){vm(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return bi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Mh("Constants support is not implemented in RNN yet.");vm(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Em({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!z(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Oh(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Em({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){bi((()=>{if(!this.stateful)throw new Fh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Oh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>tu([n,e]))):this.states_=[tu([n,this.cell.stateSize])];else if(null==e)xi(this.states_),null!=this.keptStates&&(xi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>tu([n,e]))):this.states_[0]=tu([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Oh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):xi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!z(r.shape,s))throw new Oh(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>wi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=jy(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Em({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Am){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return bi((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Im(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Oh(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=qy(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d}))}getInitialState(e){return bi((()=>{let t=tu(e.shape);return t=Fo(t,[1,2]),t=Df(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Bf(t,[1,e]):t)):this.cell.stateSize>1?[Bf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ky.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Ym(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Ky.className="RNN",mi(Ky);class Xy extends Om{}class Yy extends Xy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ef(this.units,"units"),this.activation=my(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vy(e.kernelRegularizer),this.recurrentRegularizer=vy(e.recurrentRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.kernelConstraint=hf(e.kernelConstraint),this.recurrentConstraint=hf(e.recurrentConstraint),this.biasConstraint=hf(e.biasConstraint),this.dropout=Ef([1,Af([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ef([1,Af([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Nm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bi((()=>{if(2!==e.length)throw new Oh(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=rb({ones:()=>ru(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=rb({ones:()=>ru(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Vf(null!=s?Ao(e,s):e,this.kernel.read()),null!=this.bias&&(a=jf(a,this.bias.read())),null!=i&&(n=Ao(n,i));let o=Ti(a,Vf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hy(this.activation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),recurrentInitializer:mm(this.recurrentInitializer),biasInitializer:mm(this.biasInitializer),kernelRegularizer:xy(this.kernelRegularizer),recurrentRegularizer:xy(this.recurrentRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:df(this.kernelConstraint),recurrentConstraint:df(this.recurrentConstraint),biasConstraint:df(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Yy.className="SimpleRNNCell",mi(Yy);class Zy extends Ky{constructor(e){e.cell=new Yy(e),super(e)}call(e,t){return bi((()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Zy.className="SimpleRNN",mi(Zy);class Jy extends Xy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Oh("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ef(this.units,"units"),this.activation=my(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=my(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vy(e.kernelRegularizer),this.recurrentRegularizer=vy(e.recurrentRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.kernelConstraint=hf(e.kernelConstraint),this.recurrentConstraint=hf(e.recurrentConstraint),this.biasConstraint=hf(e.biasConstraint),this.dropout=Ef([1,Af([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ef([1,Af([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Nm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bi((()=>{if(2!==e.length)throw new Oh(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=rb({ones:()=>ru(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=rb({ones:()=>ru(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Ao(e,a[0]));let l=Vf(e,this.kernel.read());this.useBias&&(l=jf(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ao(r,s[0]));const c=this.recurrentKernel.read(),[d,p]=Iu(c,[2*this.units,this.units],c.rank-1),h=Vf(r,d),[f,m,g]=Iu(l,3,l.rank-1),[y,b]=Iu(h,2,h.rank-1);i=this.recurrentActivation.apply(Ti(f,y)),o=this.recurrentActivation.apply(Ti(m,b));const x=Vf(Ao(o,r),p);u=this.activation.apply(Ti(g,x));const w=Ti(Ao(i,r),Ao(Ti(1,Jo(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hy(this.activation),recurrentActivation:hy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),recurrentInitializer:mm(this.recurrentInitializer),biasInitializer:mm(this.biasInitializer),kernelRegularizer:xy(this.kernelRegularizer),recurrentRegularizer:xy(this.recurrentRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:df(this.kernelConstraint),recurrentConstraint:df(this.recurrentConstraint),biasConstraint:df(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Jy.className="GRUCell",mi(Jy);class Qy extends Ky{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Jy(e),super(e)}call(e,t){return bi((()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Qy.className="GRU",mi(Qy);class eb extends Xy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ef(this.units,"units"),this.activation=my(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=my(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vy(e.kernelRegularizer),this.recurrentRegularizer=vy(e.recurrentRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.kernelConstraint=hf(e.kernelConstraint),this.recurrentConstraint=hf(e.recurrentConstraint),this.biasConstraint=hf(e.biasConstraint),this.dropout=Ef([1,Af([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ef([1,Af([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Nm(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Zf{apply(t,r){const a=e.apply([n]),s=(new Qf).apply([n]),i=e.apply([2*n]);return Pf(Pf(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return bi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Oh(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=rb({ones:()=>ru(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=rb({ones:()=>ru(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Ao(e,s[0]));let d=Vf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ao(r,i[0])),d=Ti(d,Vf(r,this.recurrentKernel.read())),this.useBias&&(d=jf(d,this.bias.read()));const[p,h,f,m]=Iu(d,4,d.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(h),l=Ti(Ao(u,a),Ao(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ao(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hy(this.activation),recurrentActivation:hy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),recurrentInitializer:mm(this.recurrentInitializer),biasInitializer:mm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xy(this.kernelRegularizer),recurrentRegularizer:xy(this.recurrentRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:df(this.kernelConstraint),recurrentConstraint:df(this.recurrentConstraint),biasConstraint:df(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}eb.className="LSTMCell",mi(eb);class tb extends Ky{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new eb(e),super(e)}call(e,t){return bi((()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}tb.className="LSTM",mi(tb);class nb extends Xy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return bi((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;vm(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Nf(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Ym(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $m(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}_m(t)}}function rb(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):qf(t(),n),o=()=>Kf(i,t,r);return!a||a<=1?wi(o().clone()):Array(a).fill(void 0).map(o).map((e=>wi(e.clone())))}nb.className="StackedRNNCells",mi(nb);var ab,sb,ib;class ob extends Ky{constructor(e){if(e.unroll)throw new Mh("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Mh("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Em({ndim:5})]}call(e,t){return bi((()=>{if(null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Oh("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return bi((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=tu([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){bi((()=>{if(!this.stateful)throw new Fh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Oh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>tu(a))):this.states_=[tu(a)];else if(null==e)xi(this.states_),null!=this.keptStates&&(xi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>tu(a))):this.states_[0]=tu(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Oh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):xi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!z(n.shape,r))throw new Oh(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>wi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=_y(u,r[0],a,s[0],i[0]),d=_y(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}ob.className="ConvRNN2D";class ub extends eb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,ef(this.filters,"filters"),this.kernelSize=$y(n,2,"kernelSize"),this.kernelSize.forEach((e=>ef(e,"kernelSize"))),this.strides=$y(r||1,2,"strides"),this.strides.forEach((e=>ef(e,"strides"))),this.padding=a||"valid",vf(this.padding),this.dataFormat=s||"channelsLast",wf(this.dataFormat),this.dilationRate=$y(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ef(e,"dilationRate")))}build(e){var t;e=Nm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Oh(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Zf{apply(e,t){return zf([n.apply([r]),nu([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return bi((()=>{if(3!==e.length)throw new Oh(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=rb({ones:()=>ru(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ao(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=rb({ones:()=>ru(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let h=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3);const[y,b,x,w]=Iu(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Iu(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),d=this.inputConv(d,w,N,this.padding);const[S,T,C,$]=Iu(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,S),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const _=this.recurrentActivation.apply(Ti(u,h)),E=this.recurrentActivation.apply(Ti(l,f)),A=Ti(Ao(E,s),Ao(_,this.activation.apply(Ti(c,m)))),R=Ao(this.recurrentActivation.apply(Ti(d,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=no(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?jf(a,n,this.dataFormat):a}recurrentConv(e,t){return no(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ub.className="ConvLSTM2DCell",mi(ub);class lb extends ob{constructor(e){const t=new ub(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}lb.className="ConvLSTM2D",mi(lb);class cb extends Om{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Kf((()=>qf(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}cb.className="Dropout",mi(cb);class db extends cb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}db.className="SpatialDropout1D",mi(db);class pb extends Om{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ef(this.units,"units"),this.activation=my(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=hf(e.kernelConstraint),this.biasConstraint=hf(e.biasConstraint),this.kernelRegularizer=vy(e.kernelRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.activityRegularizer=vy(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Nm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Nm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e),r=nf(this.activation.getClassName());let a;return null!=r?a=Vf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Vf(n,this.kernel.read()),null!=this.bias&&(a=jf(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:hy(this.activation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),biasInitializer:mm(this.biasInitializer),kernelRegularizer:xy(this.kernelRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:df(this.kernelConstraint),biasConstraint:df(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}pb.className="Dense",mi(pb);class hb extends Om{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Nm(e);for(const t of e.slice(1))if(null==t)throw new Oh(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],_f(e,1)]}call(e,t){return bi((()=>{this.invokeCallHook(e,t);let n=Im(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ou(n,e)}return function(e){if(e.rank<=1)throw new Oh(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],_f(e.shape,1)];return Ui(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}hb.className="Flatten",mi(hb);class fb extends Om{constructor(e){super(e),this.supportsMasking=!0,this.activation=my(e.activation)}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e);return this.activation.apply(n)}))}getConfig(){const e={activation:hy(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}fb.className="Activation",mi(fb);class mb extends Om{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return bi((()=>{return e=Im(e),t=e,n=this.n,bi((()=>{if(2!==t.shape.length)throw new Oh(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Bf(Df(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}mb.className="RepeatVector",mi(mb);class gb extends Om{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Oh("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=_f(e);if(null!==s){if(0===a||i%a!=0)throw new Oh(n);r[s]=i/a}else if(i!==a)throw new Oh(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ui(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}gb.className="Reshape",mi(gb);class yb extends Om{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Rf(1,e.dims.length+1);if(!z(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Em({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Nm(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Ou(Im(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}yb.className="Permute",mi(yb);class bb extends Om{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Im(e);return $i(Qo(n,this.maskValue),-1)}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e),r=$i(Qo(n,this.maskValue),-1,!0);return Ao(n,Es(r,n.dtype))}))}}bb.className="Masking",mi(bb);class xb extends Om{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Vh(e.inputLength))}this.inputDim=e.inputDim,ef(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ef(this.outputDim,"outputDim"),this.embeddingsInitializer=gm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vy(e.embeddingsRegularizer),this.activityRegularizer=vy(e.activityRegularizer),this.embeddingsConstraint=hf(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return bi((()=>this.maskZero?(e=Im(e),Qo(e,Du(e))):null))}computeOutputShape(e){if(e=Nm(e),null==this.inputLength)return[...e,this.outputDim];const t=Vh(this.inputLength);if(t.length!==e.length-1)throw new Oh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Oh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return bi((()=>{this.invokeCallHook(e,t);let n=Im(e);"int32"!==n.dtype&&(n=Ff(n,"int32"));const r=Uf(this.embeddings.read(),Ui(n,[n.size]));return Ui(r,Nm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:mm(this.embeddingsInitializer),embeddingsRegularizer:xy(this.embeddingsRegularizer),activityRegularizer:xy(this.activityRegularizer),embeddingsConstraint:df(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}xb.className="Embedding",mi(xb);class wb extends Om{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Mh}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Oh("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Nm(e)]),e.length<2)throw new Oh(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Yh(t),t.length>1)throw new Oh(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Yh(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return bi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Af(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Df(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Ui(r,[a].concat(_f(e.slice(1))));i=Ou(i,[1,0]),i=Ui(i,s),t.push(i),n=!0}else if(e>1){const a=Rf(1,e).concat([0]);t.push(Ou(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Ui(Ou(Ui(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Rf(0,a-1));r=Ou(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Yh(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return bi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Oh("`mask` should be an Array");if(!Array.isArray(e))throw new Oh("`inputs` should be an Array");if(t.length!==e.length)throw new Oh(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:xo(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Oo(n,t[e]);return n}))}}class vb extends wb{constructor(e){super(e)}mergeFunction(e){return bi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ti(t,e[n]);return t}))}}vb.className="Add",mi(vb);class kb extends wb{constructor(e){super(e)}mergeFunction(e){return bi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ao(t,e[n]);return t}))}}kb.className="Multiply",mi(kb);class Ib extends wb{constructor(e){super(e)}mergeFunction(e){return bi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ti(t,e[n]);return Ao(1/e.length,t)}))}}Ib.className="Average",mi(Ib);class Nb extends wb{constructor(e){super(e)}mergeFunction(e){return bi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Po(t,e[n]);return t}))}}Nb.className="Maximum",mi(Nb);class Sb extends wb{constructor(e){super(e)}mergeFunction(e){return bi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Wo(t,e[n]);return t}))}}Sb.className="Minimum",mi(Sb);class Tb extends wb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Oh("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(z(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Oh("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return bi((()=>zf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Oh("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Oh("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Oh("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Oh(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return bi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Es(ru(e[n]),"bool")):t[n].rank<e[n].rank?r.push(xo(t[n],-1)):r.push(t[n]);const a=Zi(r,this.axis);return Ci(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Cb(e,t){for(;e<0;)e+=t;return e}Tb.className="Concatenate",mi(Tb);class $b extends wb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Mh("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Oh(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Oh(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Cb(t,e[n].shape.length))):[Cb(this.axes,n.shape.length),Cb(this.axes,r.shape.length)],this.normalize&&(n=Zm(n,t[0]),r=Zm(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Mh("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),F(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Mh("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return bi((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ui(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ui(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Fo(Ao(e,t),s[0]):Fo(Ao(Ou(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Mo(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Su(i,t)}return 1===i.shape.length&&(i=xo(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Cb(this.axes,e.length),Cb(this.axes,t.length)],n}computeOutputShape(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Mh("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}$b.className="Dot",mi($b);class _b extends Om{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e);return Kf((()=>Ti(Wf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}_b.className="GaussianNoise",mi(_b);class Eb extends Om{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bi((()=>{this.invokeCallHook(e,t);const n=Im(e);return this.rate>0&&this.rate<1?Kf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ao(n,Wf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Eb.className="GaussianDropout",mi(Eb);class Ab extends Om{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Im(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Kf((()=>{const t=Im(e),r=-1.7580993408473766;let a=To(cu(n),this.rate);a=Ff(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Ti(Ao(t,a),Ao(Ti(a,-1),r));return Ti(Ao(o,s),i)}),(()=>Im(e)),t.training||!1)}return e}))}}function Rb(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=qi(e,t,n,r,a,s);else if(3===e.rank)i=Ki(e,t,n,r,a,s);else{if(4!==e.rank)throw new Mh(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Xi(e,t,n,r,a,s)}return i}Ab.className="AlphaDropout",mi(Ab);class Fb extends Om{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=gm(e.betaInitializer||"zeros"),this.gammaInitializer=gm(e.gammaInitializer||"ones"),this.movingMeanInitializer=gm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gm(e.movingVarianceInitializer||"ones"),this.betaConstraint=hf(e.betaConstraint),this.gammaConstraint=hf(e.gammaConstraint),this.betaRegularizer=vy(e.betaRegularizer),this.gammaRegularizer=vy(e.gammaRegularizer)}build(e){e=Nm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Oh(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Em({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return bi((()=>{const n=null!=t.training&&t.training,r=Im(e),a=r.shape,s=a.length,i=Rf(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=zh(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!z(l,Rf(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Ui(this.movingMean.read(),u),t=Ui(this.movingVariance.read(),u),n=this.center?Ui(this.beta.read(),u):null,a=this.scale?Ui(this.gamma.read(),u):null;return Rb(r,e,t,n,a,this.epsilon)}return Rb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,h]=function(e,t,n,r,a=.001){return z(r.slice().sort(),Rf(0,e.rank-1))?function(e,t,n,r,a=.001){return bi((()=>{const s=Zo(e,r),i=s.mean,o=s.variance;return[Rb(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return bi((()=>{const s=Zo(e,r),i=s.mean,o=s.variance,u=[];for(const t of Rf(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Ui(i,u),c=Ui(o,u),d=null==t?null:Ui(t,u),p=null==n?null:Ui(n,u);return[Rb(e,l,c,p,d,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{bi((()=>{const r=1-n,a=e.read(),s=Ao(Ro(a,t),r);e.write(Ro(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,h,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mm(this.betaInitializer),gammaInitializer:mm(this.gammaInitializer),movingMeanInitializer:mm(this.movingMeanInitializer),movingVarianceInitializer:mm(this.movingVarianceInitializer),betaRegularizer:xy(this.betaRegularizer),gammaRegularizer:xy(this.gammaRegularizer),betaConstraint:df(this.betaConstraint),gammaConstraint:df(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Fb.className="BatchNormalization",mi(Fb);class Db extends Om{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=gm(e.betaInitializer||"zeros"),this.gammaInitializer=gm(e.gammaInitializer||"ones"),this.betaRegularizer=vy(e.betaRegularizer),this.gammaRegularizer=vy(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Nm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Yh(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Im(e),r=n.shape,a=r.length;return bi((()=>{let{mean:e,variance:t}=Zo(n,this.axis,!0);const s=zh(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?Ui(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=wo(e,l),t=wo(t,l),o=wo(o,c),u=wo(u,c),Rb(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mm(this.betaInitializer),gammaInitializer:mm(this.gammaInitializer),betaRegularizer:xy(this.betaRegularizer),gammaRegularizer:xy(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Db.className="LayerNormalization",mi(Db);class Ob extends Om{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Oh(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Oh(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Oh(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Em({ndim:4})]}computeOutputShape(e){let t,n;return e=Nm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return bi((()=>{return t=Im(e),n=this.padding,r=this.dataFormat,bi((()=>{if(4!==t.rank)throw new Oh(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Oh("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Oh(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],au(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Mb(e,t,n,r,a,s){return bi((()=>{let i;wf(a),kf(s),vf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Ay(e,a);const o="same"===r?"same":"valid";return i="max"===s?Lo(e,t,n,o):Gi(e,t,n,o),"channelsFirst"===a&&(i=Ou(i,[0,3,1,2])),i}))}function Lb(e,t,n,r,a,s){return bi((()=>{let i;wf(a),kf(s),vf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Ry(e,a);const o="same"===r?"same":"valid";return i="max"===s?zo(e,t,n,o):Hi(e,t,n,o),"channelsFirst"===a&&(i=Ou(i,[0,4,1,2,3])),i}))}Ob.className="ZeroPadding2D",mi(Ob);class zb extends Om{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Oh(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ef(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Oh(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,vf(this.padding),this.inputSpec=[new Em({ndim:3})]}computeOutputShape(e){const t=_y((e=Nm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return bi((()=>{this.invokeCallHook(e,t),e=Df(Im(e),2);const n=this.poolingFunction(Im(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Su(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Pb extends zb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return wf(a),vf(r),Mb(e,t,n,r,a,"max")}}Pb.className="MaxPooling1D",mi(Pb);class Bb extends zb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return wf(a),vf(r),Mb(e,t,n,r,a,"avg")}}Bb.className="AveragePooling1D",mi(Bb);class Wb extends Om{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Oh(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ef(this.poolSize,"poolSize"),ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wf(this.dataFormat),vf(this.padding),this.inputSpec=[new Em({ndim:4})]}computeOutputShape(e){e=Nm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=_y(t,this.poolSize[0],this.padding,this.strides[0]),n=_y(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return bi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Im(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vb extends Wb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return wf(a),vf(r),Mb(e,t,n,r,a,"max")}}Vb.className="MaxPooling2D",mi(Vb);class Ub extends Wb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return wf(a),vf(r),Mb(e,t,n,r,a,"avg")}}Ub.className="AveragePooling2D",mi(Ub);class Gb extends Om{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Oh(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ef(this.poolSize,"poolSize"),ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wf(this.dataFormat),vf(this.padding),this.inputSpec=[new Em({ndim:5})]}computeOutputShape(e){e=Nm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=_y(t,this.poolSize[0],this.padding,this.strides[0]),n=_y(n,this.poolSize[1],this.padding,this.strides[1]),r=_y(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return bi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Im(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Hb extends Gb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return wf(a),vf(r),Lb(e,t,n,r,a,"max")}}Hb.className="MaxPooling3D",mi(Hb);class jb extends Gb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return wf(a),vf(r),Lb(e,t,n,r,a,"avg")}}jb.className="AveragePooling3D",mi(jb);class qb extends Om{constructor(e){super(e),this.inputSpec=[new Em({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Mh}}class Kb extends qb{constructor(e){super(e||{})}call(e,t){return bi((()=>{const t=Im(e);return Bo(t,1)}))}}Kb.className="GlobalAveragePooling1D",mi(Kb);class Xb extends qb{constructor(e){super(e||{})}call(e,t){return bi((()=>{const t=Im(e);return Eo(t,1)}))}}Xb.className="GlobalMaxPooling1D",mi(Xb);class Yb extends Om{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wf(this.dataFormat),this.inputSpec=[new Em({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Mh}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zb extends Yb{call(e,t){return bi((()=>{const t=Im(e);return"channelsLast"===this.dataFormat?Bo(t,[1,2]):Bo(t,[2,3])}))}}Zb.className="GlobalAveragePooling2D",mi(Zb);class Jb extends Yb{call(e,t){return bi((()=>{const t=Im(e);return"channelsLast"===this.dataFormat?Eo(t,[1,2]):Eo(t,[2,3])}))}}Jb.className="GlobalMaxPooling2D",mi(Jb);class Qb extends Om{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Ym(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class ex extends Qb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Nm(e)).length<3)throw new Oh(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Nm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return bi((()=>qy(((e,n)=>[Im(this.layer.call(e,t)),[]]),e=Im(e),[],!1,null,null,!1,!0)[1]))}}ex.className="TimeDistributed",mi(ex);class tx extends Qb{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ym(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Ym(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Jh(bf,"BidirectionalMergeMode",a),e.weights)throw new Mh("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Wh(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=jy(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Oh("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Em({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Mh("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Am;for(const e of s)if(e instanceof Am!==o)throw new Oh("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return bi((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=pu(a,1)),"concat"===this.mergeMode?i=zf([r,a]):"sum"===this.mergeMode?i=Ti(r,a):"ave"===this.mergeMode?i=Ao(.5,Ti(r,a)):"mul"===this.mergeMode?i=Ao(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Nf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Nf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ym(t.layer);if(delete t.layer,null!=t.numConstants)throw new Mh("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}tx.className="Bidirectional",mi(tx),(sb=ab||(ab={}))[sb.DT_INVALID=0]="DT_INVALID",sb[sb.DT_FLOAT=1]="DT_FLOAT",sb[sb.DT_DOUBLE=2]="DT_DOUBLE",sb[sb.DT_INT32=3]="DT_INT32",sb[sb.DT_UINT8=4]="DT_UINT8",sb[sb.DT_INT16=5]="DT_INT16",sb[sb.DT_INT8=6]="DT_INT8",sb[sb.DT_STRING=7]="DT_STRING",sb[sb.DT_COMPLEX64=8]="DT_COMPLEX64",sb[sb.DT_INT64=9]="DT_INT64",sb[sb.DT_BOOL=10]="DT_BOOL",sb[sb.DT_QINT8=11]="DT_QINT8",sb[sb.DT_QUINT8=12]="DT_QUINT8",sb[sb.DT_QINT32=13]="DT_QINT32",sb[sb.DT_BFLOAT16=14]="DT_BFLOAT16",sb[sb.DT_FLOAT_REF=101]="DT_FLOAT_REF",sb[sb.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",sb[sb.DT_INT32_REF=103]="DT_INT32_REF",sb[sb.DT_UINT8_REF=104]="DT_UINT8_REF",sb[sb.DT_INT16_REF=105]="DT_INT16_REF",sb[sb.DT_INT8_REF=106]="DT_INT8_REF",sb[sb.DT_STRING_REF=107]="DT_STRING_REF",sb[sb.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",sb[sb.DT_INT64_REF=109]="DT_INT64_REF",sb[sb.DT_BOOL_REF=110]="DT_BOOL_REF",sb[sb.DT_QINT8_REF=111]="DT_QINT8_REF",sb[sb.DT_QUINT8_REF=112]="DT_QUINT8_REF",sb[sb.DT_QINT32_REF=113]="DT_QINT32_REF",sb[sb.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ib||(ib={}));const nx={};function rx(e){return nx[e]}function ax(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return sx(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>sx(e,n,r,a)));const o=sx(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:ae(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function sx(e,t,n,r){const[a,s]=ux(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[ox(a,e)]));return void 0!==i?t[ox(a,i)][s]:void 0}function ix(e,t){const[n,r,a]=ux(e);return[ox(n,t&&t.currentContextId),r,a]}function ox(e,t){return t?`${e}-${t}`:e}function ux(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function lx(e,t,n){let r=ax("pad",e,t,n);if("explicit"===r){r=ax("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function cx(e){return e.kept?e:As(e)}const dx=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],px=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hx=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],fx=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],mx=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],gx=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yx=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],bx=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],xx=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],wx=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],vx=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kx=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Ix=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Nx=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Sx=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Tx=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Cx=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],$x=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],_x=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Ex{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[s,i,o,u,l,c,d,p,h,f,m,g,y,b,x,w,v,k,I].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=ix(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=ix(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=ix(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=rx(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Rx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Rx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Vx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Dx(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Dx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Wx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Wx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Fx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Fx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Gx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Gx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Bx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Bx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Ux(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ux(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Lx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Lx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=zx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=zx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Mx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Mx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=ix(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ox(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=ix(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=ix(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Ax(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ye().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Rx(e,t,n,r=!1){const a=e[t];return null!=a?Ax(a.s,r):n}function Fx(e,t,n){const r=e[t];return r?r.b:n}function Dx(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Ox(e){switch("string"==typeof e&&(e=ab[e]),e){case ab.DT_FLOAT:return"float32";case ab.DT_INT32:case ab.DT_INT64:case ab.DT_INT8:case ab.DT_UINT8:return"int32";case ab.DT_BOOL:return"bool";case ab.DT_DOUBLE:return"float32";case ab.DT_STRING:return"string";default:return null}}function Mx(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Lx(e,t,n){const r=e[t];return r&&r.type?Ox(r.type):n}function zx(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Ox(e))):n}function Px(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Bx(e,t,n){const r=e[t];return r&&r.shape?Px(r.shape):n}function Wx(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Vx(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>Ax(e,r))):n}function Ux(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Px(e))):n}function Gx(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Hx{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return sx(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return sx(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Dx(this.node.rawAttrs,e,t);if(null!=n.s)return Rx(this.node.rawAttrs,e,t);if(null!=n.b)return Fx(this.node.rawAttrs,e,t);if(null!=n.shape)return Bx(this.node.rawAttrs,e,t);if(null!=n.type)return Lx(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Wx(this.node.rawAttrs,e,t);if(null!=n.list.s)return Vx(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Ux(this.node.rawAttrs,e,t);if(null!=n.list.b)return Gx(this.node.rawAttrs,e,t);if(null!=n.list.type)return zx(this.node.rawAttrs,e,t)}return t}}const jx=Ga({addN_:function(e){F(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),F(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Va(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!z(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Da.runKernel(Te,r)}});function qx(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){F(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];F(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Kx(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Xx(e,t,n){let r=Yx(e,n);const a=!Kx(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Yx(e.shape,r)})),!Kx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Yx(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Zx{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ii(0),wi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),qx(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,wi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return qa([],[0].concat(this.elementShape));const n=this.readMany(e);return qx(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Tu(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return qa([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return qx(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Zi(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Au(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];bi((()=>{t=Ui(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ui(gu(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Jx{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);qx(t,e.shape,"TensorList shape mismatch: "),wi(e)})),this.idTensor=Ii(0),this.maxNumElements=r,wi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Jx([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);qx(e,this.elementShape,"TensorList shape mismatch: ");const r=Xx(this.elementShape,this.tensors,e);return bi((()=>{const e=this.tensors.map((e=>Ui(e,r)));return Tu(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Xx(this.elementShape,this.tensors,e),r=this.tensors.pop();return qx(r.shape,e,"TensorList shape mismatch: "),Ui(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(qx(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");wi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);qx(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Xx(this.elementShape,this.tensors,t);return Ui(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);qx(this.elementShape,t.shape,"TensorList shape mismatch: "),wi(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);qx(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Xx(this.elementShape,this.tensors,n);return 0===e.length?qa([],[0].concat(r)):bi((()=>{const t=e.map((e=>Ui(this.tensors[e],r)));return Tu(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);qx(this.elementShape,t,"TensorList shape mismatch: ");const n=Xx(this.elementShape,this.tensors,t);return 0===this.size()?qa([],[0].concat(n)):bi((()=>{const e=this.tensors.map((e=>Ui(e,n)));return Zi(e,0)}))}}const Qx=Ga({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Va(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Da.runKernel(rn,s,i);return{result:o[0],indexes:o[1]}}});function ew(e,t,n){const[r,a]=ax("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=ax("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=ax("strides",e,t,n),d=lx(e,t,n),p=ax("dataFormat",e,t,n).toUpperCase(),h=ax("dilations",e,t,n);let[f,m]=ax("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:ax("leakyreluAlpha",e,t,n)}}function tw(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Da.runKernel(Ut,{},r)}const nw=Ga({multinomial_:function(e,t,n,r=!1){const a=Va(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Ui(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=Da.runKernel(cn,o,u);return 1===i?Ui(l,[l.size]):l}}),rw=async function(e){const t=Va(e,"condition","whereAsync","bool"),n=await t.data(),r=Jc(t.shape,n);return e!==t&&t.dispose(),r};function aw(e,t,n){return{boxes:ax("boxes",e,t,n),scores:ax("scores",e,t,n),maxOutputSize:ax("maxOutputSize",e,t,n),iouThreshold:ax("iouThreshold",e,t,n),scoreThreshold:ax("scoreThreshold",e,t,n),softNmsSigma:ax("softNmsSigma",e,t,n)}}class sw{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ii(0),this.tensorMap=new Map,wi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ii(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),bi((()=>{const e=Au(t),r=n.length,a=e.length;F(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];wi(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return bi((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Tu(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const iw=Ga({einsum_:function(e,...t){const n=t.map(((e,t)=>Va(e,`tensors${t}`,"einsum"))),r={equation:e};return Da.runKernel(gt,n,r)}}),ow=Ga({sparseToDense_:function(e,t,n,r=0){const a=Va(e,"sparseIndices","sparseToDense","int32"),s=Va(t,"sparseValues","sparseToDense"),i=Va(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return Da.runKernel(tr,o,u)}}),uw=Ga({denseBincount_:function(e,t,n,r=!1){const a=Va(e,"x","denseBincount"),s=Va(t,"weights","denseBincount");F("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),F(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),F(n>=0,(()=>`size must be non-negative, but got ${n}.`)),F(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return Da.runKernel(it,i,o)}}),lw=Ga({scatterND_:function(e,t,n){const r=Va(e,"indices","scatterND","int32"),a=Va(t,"updates","scatterND");js(a,r,n);const s={indices:r,updates:a},i={shape:n};return Da.runKernel(Ln,s,i)}}),cw=Ga({gatherND_:function(e,t){const n=Va(t,"indices","gatherND","int32"),r={params:Va(e,"x","gatherND","string_or_numeric"),indices:n};return Da.runKernel(At,r)}}),dw=Ga({broadcastArgs_:function(e,t){const n=Va(e,"s0","broadcastArgs","int32"),r=Va(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return Da.runKernel(Ue,a)}});function pw(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return bi((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Ti(ax("a",e,t,n),ax("b",e,t,n))];case"AddN":return[jx(ax("tensors",e,t,n))];case"FloorMod":case"Mod":return[kh(ax("a",e,t,n),ax("b",e,t,n))];case"Mul":return[Ao(ax("a",e,t,n),ax("b",e,t,n))];case"RealDiv":case"Div":return[po(ax("a",e,t,n),ax("b",e,t,n))];case"DivNoNan":return[ch(ax("a",e,t,n),ax("b",e,t,n))];case"FloorDiv":return[co(ax("a",e,t,n),ax("b",e,t,n))];case"Sub":return[Ro(ax("a",e,t,n),ax("b",e,t,n))];case"Minimum":return[Wo(ax("a",e,t,n),ax("b",e,t,n))];case"Maximum":return[Po(ax("a",e,t,n),ax("b",e,t,n))];case"Pow":return[Al(ax("a",e,t,n),ax("b",e,t,n))];case"SquaredDifference":return[Bl(ax("a",e,t,n),ax("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return bi((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Si(ax("x",e,t,n))];case"Acos":return[Qp(ax("x",e,t,n))];case"Acosh":return[eh(ax("x",e,t,n))];case"Asin":return[nh(ax("x",e,t,n))];case"Asinh":return[rh(ax("x",e,t,n))];case"Atan":return[ah(ax("x",e,t,n))];case"Atan2":return[sh(ax("x",e,t,n),ax("y",e,t,n))];case"Atanh":return[ih(ax("x",e,t,n))];case"Ceil":return[oh(ax("x",e,t,n))];case"Complex":return[Ha(ax("real",e,t,n),ax("imag",e,t,n))];case"Cos":return[Vp(ax("x",e,t,n))];case"Cosh":return[Gp(ax("x",e,t,n))];case"Elu":return[ho(ax("x",e,t,n))];case"Erf":return[ph(ax("x",e,t,n))];case"Exp":return[bo(ax("x",e,t,n))];case"Expm1":return[hh(ax("x",e,t,n))];case"Floor":return[Io(ax("x",e,t,n))];case"Log":return[$o(ax("x",e,t,n))];case"Log1p":return[_o(ax("x",e,t,n))];case"Imag":return[Lu(ax("x",e,t,n))];case"Neg":return[Jo(ax("x",e,t,n))];case"Reciprocal":return[Sh(ax("x",e,t,n))];case"Real":return[zu(ax("x",e,t,n))];case"Relu":return[du(ax("x",e,t,n))];case"Round":return[Sl(ax("x",e,t,n))];case"Selu":return[hu(ax("x",e,t,n))];case"Sigmoid":return[mu(ax("x",e,t,n))];case"Sin":return[$d(ax("x",e,t,n))];case"Sign":return[Th(ax("x",e,t,n))];case"Sinh":return[Ed(ax("x",e,t,n))];case"Softplus":return[ku(ax("x",e,t,n))];case"Sqrt":return[Nu(ax("x",e,t,n))];case"Square":return[Yo(ax("x",e,t,n))];case"Tanh":return[Cu(ax("x",e,t,n))];case"Tan":return[$h(ax("x",e,t,n))];case"ClipByValue":return[Yi(ax("x",e,t,n),ax("clipValueMin",e,t,n),ax("clipValueMax",e,t,n))];case"Relu6":return[Gu(ax("x",e,t,n))];case"Rsqrt":return[Ud(sx(e.inputNames[0],t,n))];case"Prod":return[Nh(ax("x",e,t,n),ax("axes",e,t,n))];case"LeakyRelu":return[Co(ax("x",e,t,n),ax("alpha",e,t,n))];case"Prelu":return[su(ax("x",e,t,n),ax("alpha",e,t,n))];case"IsNan":return[gh(sx(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=ax("thenBranch",e,t,n),a=ax("elseBranch",e,t,n),s=ax("cond",e,t,n),i=ax("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=ax("body",e,t,n),a=ax("cond",e,t,n),s=ax("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[cx(ax("pred",e,t,n))];case"Switch":{const r=ax("pred",e,t,n);let a=ax("data",e,t,n);return a.kept||(a=cx(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==sx(e,t,n)));return r?[cx(sx(r,t,n))]:void 0}case"Enter":{const r=ax("frameName",e,t,n),a=ax("tensor",e,t,n);return n.enterFrame(r),[cx(a)]}case"Exit":{const r=ax("tensor",e,t,n);return n.exitFrame(),[cx(r)]}case"NextIteration":{const r=ax("tensor",e,t,n);return n.nextIteration(),[cx(r)]}case"TensorArrayV3":{const r=ax("size",e,t,n),a=ax("dtype",e,t,n),s=ax("elementShape",e,t,n),i=ax("dynamicSize",e,t,n),o=ax("clearAfterRead",e,t,n),u=ax("identicalElementShapes",e,t,n),l=ax("name",e,t,n),c=new Zx(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Ii(1)]}case"TensorArrayWriteV3":{const r=ax("tensorArrayId",e,t,n),a=ax("index",e,t,n),s=ax("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=ax("tensorArrayId",e,t,n),a=ax("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=ax("tensorArrayId",e,t,n),a=ax("indices",e,t,n),s=ax("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=ax("tensorArrayId",e,t,n),a=ax("indices",e,t,n),s=ax("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=ax("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=ax("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=ax("tensorArrayId",e,t,n),a=ax("tensor",e,t,n),s=ax("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=ax("tensorArrayId",e,t,n);return[Ii(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=ax("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=ax("tensorListId",e,t,n),a=ax("index",e,t,n),s=ax("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=ax("tensorListId",e,t,n),a=ax("index",e,t,n),s=ax("elementShape",e,t,n),i=ax("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=ax("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Jx([],n,e.dtype,r),i=Au(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(ax("tensor",e,t,n),r,ax("elementShape",e,t,n),ax("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=ax("elementShape",e,t,n),a=ax("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Jx([],e,t,n)}(r,a,ax(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=ax("tensorListId",e,t,n),a=ax("indices",e,t,n),s=ax("elementShape",e,t,n),i=ax("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=ax("tensorListId",e,t,n),a=ax("elementShape",e,t,n),s=ax("elementDType",e,t,n),i=ax("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);qx(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Au(e);return new Jx(a,t,r)}(ax("tensor",e,t,n),ax("elementShape",e,t,n),ax("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=ax("tensorListId",e,t,n),a=n.getTensorList(r.id),s=ax("dtype",e,t,n),i=ax("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=ax("tensorListId",e,t,n),a=ax("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=ax("tensorListId",e,t,n),a=ax("elementShape",e,t,n),s=ax("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=ax("tensor",e,t,n),a=ax("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Yx(e.shape.slice(1),n),i=0===r?0:e.size/r,o=bi((()=>{const n=[];e=Ui(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Ui(gu(e,o,u),s)}return e.dispose(),n})),u=new Jx([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,ax("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return bi((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=ax("stride",e,t,n),a=ax("pad",e,t,n),s=ax("dataFormat",e,t,n).toUpperCase(),i=ax("dilation",e,t,n);return[ro(ax("x",e,t,n),ax("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=ax("strides",e,t,n),a=lx(e,t,n),s=ax("dataFormat",e,t,n).toUpperCase(),i=ax("dilations",e,t,n);return[no(ax("x",e,t,n),ax("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ew(e,t,n);return[Yu({x:ax("x",e,t,n),filter:ax("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ew(e,t,n);return[Qu({x:ax("x",e,t,n),filter:ax("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=ax("outputShape",e,t,n),a=ax("strides",e,t,n),s=lx(e,t,n);return[so(ax("x",e,t,n),ax("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=ax("strides",e,t,n),a=lx(e,t,n),s=ax("dilations",e,t,n),i=ax("dataFormat",e,t,n).toUpperCase();return[lo(ax("input",e,t,n),ax("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("dataFormat",e,t,n).toUpperCase(),i=ax("dilations",e,t,n);return[io(ax("x",e,t,n),ax("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("kernelSize",e,t,n);return[Gi(ax("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("kernelSize",e,t,n);return[Lo(ax("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("kernelSize",e,t,n),i=ax("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Qx(ax("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("kernelSize",e,t,n);return[Hi(ax("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("kernelSize",e,t,n);return[zo(ax("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=ax("strides",e,t,n),a=ax("pad",e,t,n),s=ax("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[lh(ax("x",e,t,n),ax("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return bi((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=ax("shape",e,t,n),a=ax("dtype",e,t,n);return[ko(r,ax("value",e,t,n),a)]}case"LinSpace":return[tw(ax("start",e,t,n),ax("stop",e,t,n),ax("num",e,t,n))];case"Multinomial":{const r=ax("logits",e,t,n),a=ax("numSamples",e,t,n),s=ax("seed",e,t,n);return[nw(r,a,s)]}case"OneHot":{const r=ax("indices",e,t,n),a=ax("depth",e,t,n),s=ax("onValue",e,t,n),i=ax("offValue",e,t,n);return[eu(r,a,s,i)]}case"Ones":return[nu(ax("shape",e,t,n),ax("dtype",e,t,n))];case"OnesLike":return[ru(ax("x",e,t,n))];case"RandomUniform":return[cu(ax("shape",e,t,n),ax("minval",e,t,n),ax("maxval",e,t,n),ax("dtype",e,t,n))];case"Range":return[Tl(ax("start",e,t,n),ax("stop",e,t,n),ax("step",e,t,n),ax("dtype",e,t,n))];case"TruncatedNormal":{const r=ax("shape",e,t,n),a=ax("mean",e,t,n),s=ax("stdDev",e,t,n),i=ax("seed",e,t,n);return[Eu(r,a,s,ax("dtype",e,t,n),i)]}case"Zeros":return[tu(ax("shape",e,t,n),ax("dtype",e,t,n))];case"ZerosLike":return[Du(ax("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=aw(e,t,n),l=await Xl.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=aw(e,t,n),u=ax("padToMaxOutputSize",e,t,n),l=await Xl.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=aw(e,t,n);return[await Xl.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Es(ax("condition",e,t,n),"bool"),a=[await rw(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=Va(e,"x","setdiff1d"),r=Va(t,"y","setdiff1d");F(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),F(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),F(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new ia([o],n.dtype),l=new ia([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}(ax("x",e,t,n),ax("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return bi((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=ax("x",e,t,n),a=ax("k",e,t,n),s=ax("sorted",e,t,n),i=_h(r,a,s);return[i.values,i.indices]}case"Unique":{const r=ax("x",e,t,n),a=Eh(r);return[a.values,a.indices]}case"UniqueV2":{const r=ax("x",e,t,n),a=ax("axis",e,t,n),s=Eh(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return bi((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=ax("images",e,t,n),a=ax("size",e,t,n),s=ax("alignCorners",e,t,n),i=ax("halfPixelCenters",e,t,n);return[Xl.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=ax("images",e,t,n),a=ax("size",e,t,n),s=ax("alignCorners",e,t,n),i=ax("halfPixelCenters",e,t,n);return[Xl.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=ax("image",e,t,n),a=ax("boxes",e,t,n),s=ax("boxInd",e,t,n),i=ax("cropSize",e,t,n),o=ax("method",e,t,n),u=ax("extrapolationValue",e,t,n);return[Xl.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return bi((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=ax("default",e,t,n);return[sx(e.name,t,n)||r];case"Placeholder":return[sx(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[cx(ax("x",e,t,n))];case"IdentityN":return ax("x",e,t,n).map((e=>cx(e)));case"Shape":return[$u(ax("x",e,t,n).shape,"int32")];case"ShapeN":return ax("x",e,t,n).map((e=>$u(e.shape)));case"Size":return[Ii(ax("x",e,t,n).size,"int32")];case"Rank":return[Ii(ax("x",e,t,n).rank,"int32")];case"NoOp":return[Ii(1)];case"Print":const a=ax("x",e,t,n),s=ax("data",e,t,n),i=ax("message",e,t,n),o=ax("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return bi((()=>((e,t,n)=>{switch(e.op){case"Equal":return[yo(ax("a",e,t,n),ax("b",e,t,n))];case"NotEqual":return[Qo(ax("a",e,t,n),ax("b",e,t,n))];case"Greater":return[So(ax("a",e,t,n),ax("b",e,t,n))];case"GreaterEqual":return[To(ax("a",e,t,n),ax("b",e,t,n))];case"Less":return[up(ax("a",e,t,n),ax("b",e,t,n))];case"LessEqual":return[Nl(ax("a",e,t,n),ax("b",e,t,n))];case"LogicalAnd":return[Oo(ax("a",e,t,n),ax("b",e,t,n))];case"LogicalNot":return[Lp(ax("a",e,t,n))];case"LogicalOr":return[xh(ax("a",e,t,n),ax("b",e,t,n))];case"Select":case"SelectV2":return[Fu(ax("condition",e,t,n),ax("a",e,t,n),ax("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return bi((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Mo(ax("a",e,t,n),ax("b",e,t,n),ax("transposeA",e,t,n),ax("transposeB",e,t,n))];case"Einsum":return[iw(ax("equation",e,t,n),...ax("tensors",e,t,n))];case"Transpose":return[Ou(ax("x",e,t,n),ax("perm",e,t,n))];case"_FusedMatMul":const[r,a]=ax("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=ax("numArgs",e,t,n),u=ax("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=ax("args",e,t,n);return[el({a:ax("a",e,t,n),b:ax("b",e,t,n),transposeA:ax("transposeA",e,t,n),transposeB:ax("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return bi((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ji(ax("x",e,t,n),ax("mean",e,t,n),ax("variance",e,t,n),ax("offset",e,t,n),ax("scale",e,t,n),ax("epsilon",e,t,n))];case"LRN":return[yh(ax("x",e,t,n),ax("radius",e,t,n),ax("bias",e,t,n),ax("alpha",e,t,n),ax("beta",e,t,n))];case"Softmax":return[vu(ax("x",e,t,n))];case"LogSoftmax":return[Do(ax("x",e,t,n))];case"SparseToDense":return[ow(ax("sparseIndices",e,t,n),ax("outputShape",e,t,n),ax("sparseValues",e,t,n),ax("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return bi((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[Eo(ax("x",e,t,n),r,a)]}case"Mean":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[Bo(ax("x",e,t,n),r,a)]}case"Min":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[El(ax("x",e,t,n),r,a)]}case"Sum":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[Fo(ax("x",e,t,n),r,a)]}case"All":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[Ci(ax("x",e,t,n),r,a)]}case"Any":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[$i(ax("x",e,t,n),r,a)]}case"ArgMax":{const r=ax("axis",e,t,n);return[_i(ax("x",e,t,n),r)]}case"ArgMin":{const r=ax("axis",e,t,n);return[th(ax("x",e,t,n),r)]}case"Prod":{const r=ax("axis",e,t,n),a=ax("keepDims",e,t,n);return[Nh(ax("x",e,t,n),r,a)]}case"Cumsum":{const r=ax("axis",e,t,n),a=ax("exclusive",e,t,n),s=ax("reverse",e,t,n);return[Rd(ax("x",e,t,n),r,a,s)]}case"Bincount":const r=ax("x",e,t,n),a=ax("weights",e,t,n),s=ax("size",e,t,n);return[Il(r,a,s)];case"DenseBincount":{const r=ax("x",e,t,n),a=ax("weights",e,t,n),s=ax("size",e,t,n),i=ax("binaryOutput",e,t,n);return[uw(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return bi((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=ax("n",e,t,n),a=ax("axis",e,t,n);let s=ax("tensors",e,t,n);return s=s.slice(0,r),[Zi(s,a)]}case"Gather":{const r=ax("x",e,t,n),a=ax("indices",e,t,n);return[No(r,Es(a,"int32"),0)]}case"GatherV2":{const r=ax("axis",e,t,n),a=ax("batchDims",e,t,n),s=ax("x",e,t,n),i=ax("indices",e,t,n);return[No(s,Es(i,"int32"),r,a)]}case"Reverse":{const r=ax("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=ax("x",e,t,n);return[pu(s,a)]}case"ReverseV2":{const r=ax("axis",e,t,n),a=ax("x",e,t,n);return[pu(a,r)]}case"Slice":{const r=ax("begin",e,t,n),a=ax("size",e,t,n);return[gu(ax("x",e,t,n),r,a)]}case"StridedSlice":{const r=ax("begin",e,t,n),a=ax("end",e,t,n),s=ax("strides",e,t,n),i=ax("beginMask",e,t,n),o=ax("endMask",e,t,n),u=ax("ellipsisMask",e,t,n),l=ax("newAxisMask",e,t,n),c=ax("shrinkAxisMask",e,t,n),d=ax("x",e,t,n);return[Ch(d,r,a,s,i,o,u,l,c)]}case"Pack":return bi((()=>{const r=ax("axis",e,t,n),a=ax("tensors",e,t,n),s=a[0].shape,i=Su(a[0]).shape,o=a.map((e=>{const t=z(e.shape,s);if(!t&&!z(Su(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ui(e,s)}));return[Tu(o,r)]}));case"Unpack":{const r=ax("axis",e,t,n),a=ax("tensor",e,t,n);return Au(a,r)}case"Tile":{const r=ax("reps",e,t,n);return[wo(ax("x",e,t,n),r)]}case"Split":case"SplitV":{const r=ax("axis",e,t,n),a=ax("numOrSizeSplits",e,t,n),s=ax("x",e,t,n);return Iu(s,a,r)}case"ScatterNd":{const r=ax("indices",e,t,n),a=ax("values",e,t,n),s=ax("shape",e,t,n);return[lw(r,a,s)]}case"GatherNd":{const r=ax("x",e,t,n),a=ax("indices",e,t,n);return[cw(r,a)]}case"SparseToDense":{const r=ax("sparseIndices",e,t,n),a=ax("outputShape",e,t,n),s=ax("sparseValues",e,t,n),i=ax("defaultValue",e,t,n);return[ow(r,s,a,s.dtype===i.dtype?i:Es(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return bi((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Zl.sparseFillEmptyRows(ax("indices",e,t,n),ax("values",e,t,n),ax("denseShape",e,t,n),ax("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Zl.sparseReshape(ax("inputIndices",e,t,n),ax("inputShape",e,t,n),ax("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Zl.sparseSegmentMean(ax("data",e,t,n),ax("indices",e,t,n),ax("segmentIds",e,t,n))];case"SparseSegmentSum":return[Zl.sparseSegmentSum(ax("data",e,t,n),ax("indices",e,t,n),ax("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return bi((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Pu(ax("x",e,t,n))];case"IFFT":return[Wu(ax("x",e,t,n))];case"RFFT":return[Bu(ax("x",e,t,n))];case"IRFFT":return[Vu(ax("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return bi((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=Jl.stringNGrams(ax("data",e,t,n),ax("dataSplits",e,t,n),ax("separator",e,t,n),ax("nGramWidths",e,t,n),ax("leftPad",e,t,n),ax("rightPad",e,t,n),ax("padWidth",e,t,n),ax("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=Jl.stringSplit(ax("input",e,t,n),ax("delimiter",e,t,n),ax("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Jl.stringToHashBucketFast(ax("input",e,t,n),ax("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return bi((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Es(ax("x",e,t,n),ax("dtype",e,t,n))];case"ExpandDims":{const r=ax("axis",e,t,n);return[xo(ax("x",e,t,n),r)]}case"Squeeze":{const r=ax("axis",e,t,n);return[Su(ax("x",e,t,n),r)]}case"Reshape":return[Ui(ax("x",e,t,n),ax("shape",e,t,n))];case"MirrorPad":return[vh(ax("x",e,t,n),ax("padding",e,t,n),ax("mode",e,t,n))];case"PadV2":case"Pad":return[au(ax("x",e,t,n),ax("padding",e,t,n),ax("constantValue",e,t,n))];case"SpaceToBatchND":{const r=ax("blockShape",e,t,n),a=ax("paddings",e,t,n);return[gd(ax("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=ax("blockShape",e,t,n),a=ax("crops",e,t,n);return[Xp(ax("x",e,t,n),r,a)]}case"DepthToSpace":{const r=ax("blockSize",e,t,n),a=ax("dataFormat",e,t,n).toUpperCase();return[uh(ax("x",e,t,n),r,a)]}case"BroadcastTo":return[Ru(ax("x",e,t,n),ax("shape",e,t,n))];case"BroadcastArgs":return[dw(ax("s0",e,t,n),ax("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=ax("keyDType",e,t,n),s=ax("valueDType",e,t,n),i=new sw(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=ax("tableHandle",e,t,n,r),s=ax("keys",e,t,n),i=ax("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=ax("tableHandle",e,t,n,r),s=ax("keys",e,t,n),i=ax("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=ax("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=rx(e.op);if(a&&a.customExecutor)return a.customExecutor(new Hx(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return de(a)?a.then((e=>[].concat(e))):[].concat(a)}class hw{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function fw(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>ux(e)[0]));let c=[];null!=r&&(c=r.map((e=>ux(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(bw(e)||xw(e)||ww(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const mw=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],gw=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],yw=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function bw(e){return mw.indexOf(e.op)>=0}function xw(e){return gw.indexOf(e.op)>=0}function ww(e){return yw.indexOf(e.op)>=0}class vw{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new vw(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=fw(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>ux(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[ux(e)[0]])),a=t.map((e=>ux(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return bi((()=>{const n=new hw(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=ux(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=pw(t,r,n,this._resourceManager);if(de(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>sx(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[ox(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new hw(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>sx(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[ux(e)[0]])),i=n.map((e=>ux(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=fw(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=ux(t),a=[];a[r]=e[t],h[n]=a}));const f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){const e=this.processStack(s,p,t,h,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!bw(e)&&!sx(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&ax("isConstant",e.node,r,n)&&([c]=ix(e.node.name,n)),null==r[e.node.name]){const d=pw(e.node,r,n,this._resourceManager);c||([c]=ix(e.node.name,n));const p=n.currentContext;de(d)?l.push(d.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=ix(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!sx(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!sx(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=ux(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;F(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&F(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=ux(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=ux(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class kw{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Iw{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new kw}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Bs(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,rs.getLoadHandlers(t,n));if(0===r.length)r.push(Bs(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=L(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ka[n.dtype],c=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ns()),l=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=L(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Ka[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=qa(e,o,"float32"),i=qa(r,o,"float32");n[t]=Ha(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=qa(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new vw(Ex.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Ex.Instance.transformGraph(e.modelInitializer);this.initializer=new vw(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=as(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof ca||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Nw(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Iw(e,t);return await n.load(),n}var Sw,Tw,Cw=n(391);function $w(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Rw(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=$w(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function _w(e,t=Aw){return Ew(e,t)}function Ew(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Rw(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Ew(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Aw(e){return null===e?null:Rw(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Rw(e){let t=!1;if(ye().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ca)&&!(e instanceof Promise)&&!t)}function Fw(e){return $w(e,Dw)}function Dw(e){return e instanceof ca?{value:e.clone(),recurse:!1}:Rw(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Ow{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Mw extends Ow{constructor(){super(Mw.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Mw.INITIAL_CAPACITY=32;class Lw{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new jw(this,e)}filter(e){return new Gw(this,e)}map(e){return new Hw(this,e)}mapAsync(e){return new qw(this,e)}serialMapAsync(e){return new qw(this,e).serial()}flatmap(e){return new Xw(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Uw(this,e,t)}columnMajorBatch(e,t=!0,n=Aw){return this.rowMajorBatch(e,t).map((e=>_w(e,n)))}concatenate(e,t){return new Yw(new zw([this,e]),t)}take(e){return e<0||null==e?this:new Vw(this,e)}skip(e){return e<0||null==e?this:new Ww(this,e)}prefetch(e){return new Zw(this,e)}shuffle(e,t){return new Jw(this,e,t)}serial(){return new Bw(this)}}class zw extends Lw{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Fw(e),done:!1}}}class Pw extends Lw{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Bw extends Lw{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ww extends Lw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;xi(e.value)}return this.upstream.next()}}class Vw extends Lw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Uw extends Lw{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Gw extends Lw{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;xi(e.value)}}}class Hw extends Lw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$a(e.value),n=this.transform(e.value),r=$a(n);for(const e of t)Ca(e,r)||e.dispose();return{value:n,done:!1}}}class jw extends Lw{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class qw extends Lw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$a(e.value),n=await this.transform(e.value),r=$a(n);for(const e of t)Ca(e,r)||e.dispose();return{value:n,done:!1}}}class Kw extends Lw{constructor(){super(),this.outputQueue=new Mw,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Xw extends Kw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=$a(e.value),n=this.transform(e.value),r=$a(n);this.outputQueue.pushAll(n);for(const e of t)Ca(e,r)||e.dispose();return!0}}class Yw extends Lw{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Tw=Sw||(Sw={}))[Tw.FAIL=0]="FAIL",Tw[Tw.SHORTEST=1]="SHORTEST",Tw[Tw.LONGEST=2]="LONGEST";class Zw extends Lw{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Ow(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Jw extends Zw{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Cw.alea(n||Xr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Qw{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return F(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ev((async()=>(await n.iterator()).columnMajorBatch(e,t,tv)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ev((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ev((async()=>(await t.iterator()).filter((t=>bi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ev((async()=>(await t.iterator()).map((t=>bi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ev((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ev((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ev((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new Pw(a)).take(e),new Yw(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ev((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Cw.alea(t||Xr().toString());return ev((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ev((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ev(e,t=null){return new class extends Qw{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function tv(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof ca||X(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ca?Tu(e):qa(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function nv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&F("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Qw.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const rv=Jc;class av extends C{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new T(this,gi())}nextDataId(){return av.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ye().get("IS_NODE")&&pe("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Z(n[0])){const a=n.map((e=>Yr(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?$c(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Zr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return _s(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return gi().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Xr();return e(),{kernelMs:Xr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){nv([e],"where");const t=this.readSync(e.dataId);return rv(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function sv(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(nv(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=L(i.shape),c=n||i.dtype,d=q(c,l);for(let e=0;e<l;++e)d[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,d)}}function iv(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(nv(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}av.nextDataId=0,vi("cpu",(()=>new av),1);const ov=sv(yt,(e=>e>=0?e:Math.exp(e)-1)),uv={kernelName:yt,backendName:"cpu",kernelFunc:ov};function lv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const cv={kernelName:Dt,backendName:"cpu",kernelFunc:lv};function dv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;nv([a],"leakyRelu");const i=L(a.shape),o=n.data.get(a.dataId).values,u=j("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const pv={kernelName:Bt,backendName:"cpu",kernelFunc:dv};function hv(e){return(t,n,r,a,s)=>{const i=go(t,n),o=i.length,u=ne(i),l=j(s,L(i)),c=t.length,d=n.length,p=ne(t),h=ne(n),f=fo(t,i),m=fo(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=ce(t,o,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=le(s,c,p),g=n.slice(-d);m.forEach((e=>g[e]=0));const y=le(g,d,h);l[t]=e(r[i],a[y])}return[l,i]}}const fv=hv(((e,t)=>e<0?t*e:e));function mv(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;nv([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=fv(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}const gv={kernelName:kn,backendName:"cpu",kernelFunc:mv},yv=sv(Cn,(e=>Math.max(0,e))),bv={kernelName:Cn,backendName:"cpu",kernelFunc:yv},xv=sv(Fn,(e=>Math.min(Math.max(0,e),6))),wv={kernelName:Fn,backendName:"cpu",kernelFunc:xv};function vv(e){return(t,n,r)=>{const a=j(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const kv=vv((e=>1/(1+Math.exp(-e)))),Iv=sv(Gn,(e=>1/(1+Math.exp(-e)))),Nv={kernelName:Gn,backendName:"cpu",kernelFunc:Iv};function Sv(e,t,n,r,a){if("linear"===n)return lv({inputs:{x:t},backend:e});if("relu"===n)return yv({inputs:{x:t},backend:e});if("elu"===n)return ov({inputs:{x:t},backend:e});if("relu6"===n)return xv({inputs:{x:t},backend:e});if("prelu"===n)return mv({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return dv({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Iv({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Tv(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Cv={kernelName:qe,backendName:"cpu",kernelFunc:Tv};function $v(e,t,n="float32"){if("complex64"===n)return Tv({inputs:{real:$v(e,t,"float32"),imag:$v(e,t,"float32")},backend:e});const r=ie(L(t),n);return e.makeTensorInfo(t,n,r)}function _v(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Ev={kernelName:Sn,backendName:"cpu",kernelFunc:_v};function Av(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return lv({inputs:{x:a},backend:n});const e=$v(n,a.shape,a.dtype),t=Av({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Tv({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=_v({inputs:{input:a},backend:n}),t=Av({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!K(a.dtype,s)){const e=lv({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=Kr([0],a.dtype),[r,s]=hv(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const Rv={kernelName:Ge,backendName:"cpu",kernelFunc:Av};function Fv(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;nv([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Yc(u):u,d="string"===s.dtype?Yc(l):l,p=r||s.dtype,[h,f]=t(s.shape,i.shape,c,d,p);return o.makeTensorInfo(f,p,h)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=Av({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=Av({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(h.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=Tv({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function Dv(e){return(t,n,r,a,s,i)=>{const o=go(t,n),u=L(o),l=o.length,c=ne(o),d=j("float32",u),p=j("float32",u),h=fo(t,o),f=fo(n,o),m=$c(r,a),g=$c(s,i),y=t.length,b=ne(t),x=n.length,w=ne(n);if(h.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=a.real,p[t]=a.imag}else for(let t=0;t<d.length;t++){const n=ce(t,l,c),r=n.slice(-y);h.forEach((e=>r[e]=0));const a=le(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=le(s,x,w),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,p[t]=o.imag}return[d,p,o]}}const Ov=hv(((e,t)=>e+t)),Mv=Dv(((e,t,n,r)=>({real:e+n,imag:t+r}))),Lv=Fv(Se,Ov,Mv),zv={kernelName:Se,backendName:"cpu",kernelFunc:Lv};function Pv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=L(a.shape),o=U(s,i),u=L(o);F(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const Bv={kernelName:$n,backendName:"cpu",kernelFunc:Pv};function Wv(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;nv([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-1]:a.shape[u-2],h=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=L(f),y=L(m);F(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,h]);F(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,d]:[y,d,h],w=Pv({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=Pv({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],S=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,$=ne(w.shape),_=ne(v.shape),[E,A,R]=i?[$[0],1,$[1]]:[$[0],$[1],1],[D,O,M]=o?[1,_[1],_[0]]:[_[1],1,_[0]],z=I*N,P=_s([S,I,N],w.dtype),B=P.values,W=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<I;t+=W)for(let n=0;n<N;n+=W)for(let r=0;r<k;r+=W){const a=Math.min(t+W,I),s=Math.min(n+W,N),i=Math.min(r+W,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*E,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*R]*C[a*D+t*O+s]}B[e*z+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,P.dtype,P.values)}const Vv={kernelName:Be,backendName:"cpu",kernelFunc:Wv},Uv={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=Wv({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(h=Lv({inputs:{a:p,b:i},backend:n}),m.push(p),p=h),c&&(f=Sv(n,p,c,o,d),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function Gv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Hv={kernelName:ke,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;nv(t,"abs");let r=new Float32Array(L(t.shape));return r=Gv(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},jv=sv(Ie,(e=>Math.acos(e))),qv={kernelName:Ie,backendName:"cpu",kernelFunc:jv},Kv=sv(Ne,(e=>Math.acosh(e))),Xv={kernelName:Ne,backendName:"cpu",kernelFunc:Kv},Yv={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;nv(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=_s(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Zv(e,t,n,r,a){const s=t.length,i=L(t),o=ne(t),u=ne(a),l=j(n,L(a));for(let t=0;t<i;++t){const n=ce(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[le(a,s,u)]=e[t]}return l}function Jv(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;nv(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=Zv(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const Qv={kernelName:fr,backendName:"cpu",kernelFunc:Jv},ek={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nv(a,"all");const o=G(s,a.shape);let u=o;const l=qo(u,a.shape.length);let c=a;null!=l&&(c=Jv({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Xo(u.length,a.shape.length)),jo("all",u,c.shape.length);const[d,p]=Go(c.shape,u),h=L(p),f=ie(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=Pv({inputs:{x:g},backend:n,attrs:{shape:Ho(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},tk={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nv(a,"any");const o=G(s,a.shape);let u=o;const l=qo(u,a.shape.length);let c=a;null!=l&&(c=Jv({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Xo(u.length,a.shape.length)),jo("any",u,c.shape.length);const[d,p]=Go(c.shape,u),h=L(p),f=ie(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=Pv({inputs:{x:g},backend:n,attrs:{shape:Ho(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},nk={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;nv(a,"argMax");let i=G(s,a.shape);const o=qo(i,a.shape.length);let u=a;const l=[];null!=o&&(u=Jv({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Xo(i.length,u.shape.length)),i=[i[0]],jo("argMax",i,u.shape.length);const[c,d]=Go(u.shape,i),p=ie(L(c),"int32"),h=L(d),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*h;let n=f[t],r=0;for(let e=0;e<h;++e){const a=f[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},rk={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;nv(a,"argMin");let i=G(s,a.shape);const o=qo(i,a.shape.length);let u=a;const l=[];null!=o&&(u=Jv({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Xo(i.length,u.shape.length)),i=[i[0]],jo("argMin",i,u.shape.length);const[c,d]=Go(u.shape,i),p=ie(L(c),"int32"),h=L(d),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*h;let n=f[t],r=0;for(let e=0;e<h;++e){const a=f[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},ak=sv(Ae,(e=>Math.asin(e))),sk={kernelName:Ae,backendName:"cpu",kernelFunc:ak},ik=sv(Re,(e=>Math.asinh(e))),ok={kernelName:Re,backendName:"cpu",kernelFunc:ik},uk=sv(Fe,(e=>Math.atan(e))),lk={kernelName:Fe,backendName:"cpu",kernelFunc:uk},ck=hv(((e,t)=>Math.atan2(e,t))),dk=Fv(Oe,ck),pk={kernelName:Oe,backendName:"cpu",kernelFunc:dk},hk=sv(De,(e=>Math.atanh(e))),fk={kernelName:De,backendName:"cpu",kernelFunc:hk};function mk(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,h=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_s(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-h,c=Math.max(0,i),p=Math.min(a.inWidth,d+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function gk(e,t,n,r,a=!1,s=!1){const i=_s(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=_s(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-h;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let h=d;for(;h<0;)h+=c;const x=Math.min(r.inWidth,p+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=h;o<x;o+=c){const u=o-d,l=m.get(e,n,o,t);l>w&&(w=l,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(v,e,n,o,t)}}return i}function yk(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterDepth,h=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=_s(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const S=v*i-m;let T=S;for(;T<0;)T+=l;const C=Math.min(a.inDepth,p+S),$=n+v*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(a.inHeight,h+i),v=$+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=d;const h=Math.min(a.inWidth,f+i),g=v+n*N;let k=b,I=0,S=0;for(let n=T;n<C;n+=l){const a=x+n*r[1];for(let n=p;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<h;n+=d){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/S:k}}}}return x}const bk={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;nv(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;F(Wi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ai(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&z(l.inShape,l.outShape))c=lv({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ne(a.shape),r=mk(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},xk={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;nv(a,"avgPool3d");const c=Ri(a.shape,s,i,1,o,u,l),d=yk(n.data.get(a.dataId).values,a.shape,a.dtype,ne(a.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},wk={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;nv([a,s],"avgPool3DGrad");const c=Ri(s.shape,i,o,1,u,l),d=c.strideDepth,p=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,S=v-1-c.padInfo.top,T=_s(s.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-S,o=a-N;let u=0;for(let n=0;n<w;n+=y){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const a=(i+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/h;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=$.get(e,r,a,s,t))}}}T.set(u*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},vk={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;nv([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Ai(i.shape,o,u,1,l),d=c.strideHeight,p=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=_s(i.shape,"float32"),k=1/(h*f),I=n.data.get(a.dataId).values,N=_s(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-w,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=N.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},kk={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;F(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),nv([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,b=p.length,x=d.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-d[v++])*h[k++]/Math.sqrt(p[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function Ik(e,t,n,r,a){const s=ui(r,t,n),i=L(n),o=ne(r);if(s){const n=li(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=_s(r,a,"string"===a?Yc(e):e),l=_s(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?Zc(l.values):l.values}function Nk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;nv(a,"slice");const[o,u]=ci(a,s,i);Ys(a,o,u);const l=Ik(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const Sk={kernelName:Bn,backendName:"cpu",kernelFunc:Nk},Tk={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;nv([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=mc(a.shape,s,o),l=gc(u.length,s.length),c=yc(a.shape,s,o),d=bc(i,s.length),p=xc(c,i,s.length),h=Pv({inputs:{x:a},backend:n,attrs:{shape:u}}),f=Jv({inputs:{x:h},backend:n,attrs:{perm:l}}),m=Pv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Nk({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Ck(e,t,n,r,a){const s=L(r),i=ie(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function $k(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=_s([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const _k={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Ck(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},Ek={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=go(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Ak=vv((e=>Math.ceil(e))),Rk=iv(He,Ak),Fk={kernelName:He,backendName:"cpu",kernelFunc:Rk},Dk=sv(je,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Ok={kernelName:je,backendName:"cpu",kernelFunc:Dk},Mk={kernelName:Ke,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(L(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Lk(e,t,n,r){const a=q(n,L(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=L(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Yc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function zk(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Pk={kernelName:Mt,backendName:"cpu",kernelFunc:zk};function Bk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=G(a,t[0].shape)[0];let i=dc(t.map((e=>e.shape)),s);if(0===L(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>L(e.shape)>0));if(1===o.length)return lv({inputs:{x:o[0]},backend:n});if(cc(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>_v({inputs:{input:e},backend:n}))),t=o.map((e=>zk({inputs:{input:e},backend:n}))),r=Bk({inputs:e,backend:n,attrs:{axis:s}}),a=Bk({inputs:t,backend:n,attrs:{axis:s}}),i=Tv({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const u=o.map((e=>{const t=L(e.shape.slice(s));return Pv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=dc(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],d=Lk(l,i,t[0].dtype,c),p=dc(o.map((e=>e.shape)),s),h=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const Wk={kernelName:Xe,backendName:"cpu",kernelFunc:Bk};function Vk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;nv([a,s],"conv2d");const d=Vi(u),p=Fi(a.shape,s.shape,i,l,o,c,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new ia(p.outShape,a.dtype),v=ne(a.shape),k=ne(s.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,E=x?1:w.strides[1],A=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=w.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<p.outHeight;++e){const r=n+e*$,a=e*p.strideHeight-b;for(let e=0;e<h;++e){const n=a+e*m;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*_,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*S;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=A[a+e*T];for(let e=0;e<p.outChannels;++e)F[t+e*E]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const Uk={kernelName:Ye,backendName:"cpu",kernelFunc:Vk},Gk={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;nv([a,s],"conv2dBackpropFilter");const d=Vi(u),p=Fi(a.shape,c,i,1,o,l,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new ia(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new ia(a.shape,a.dtype,v),N=new ia(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/h)),n=Math.min(p.outHeight,(p.inHeight+w-e)/h);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*h-w;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Hk={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;nv([a,s],"conv2dBackpropInput");const d=ne(s.shape),p=ne(a.shape);let h=Vi(l);const f=Fi(i,s.shape,o,1,u,c,!1,h),m=new ia(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=d,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:T,inWidth:C,outChannels:$,outHeight:_,outWidth:E,strideHeight:A,strideWidth:R}=f;h=f.dataFormat;const F=I-1-f.padInfo.top,D=N-1-f.padInfo.left,O="channelsLast"===h,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],W=O?p[1]:p[2],V=O?p[2]:1,U=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<T;++n){const r=n-F,a=Math.max(0,Math.ceil(r/A)),s=Math.min(_,(I+r)/A);for(let i=0;i<C;++i){const o=i-D,u=Math.max(0,Math.ceil(o/R)),l=Math.min(E,(N+o)/R);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=B*e+W*n+V*r,i=x*(I-1-a)+w*(N-1-(r*R-o))+v*t;for(let e=0;e<$;++e)c+=y[s+U*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},jk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;nv([a,s],"conv3d");const l=Di(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new ia(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,N=ne(a.shape),S=ne(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*h;if(n<0||n>=l.inDepth)continue;const s=e*S[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*S[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*S[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},qk={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;nv([a,s],"conv3dBackpropFilterV2");const l=ne(a.shape),c=ne(s.shape),d=Di(a.shape,u,i,1,o),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new ia(d.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(s.dataId).values,[S,T,C,$]=c,_=n.data.get(a.dataId).values,[E,A,R,F]=l,D=d.padInfo.front,O=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/p)),n=Math.min(d.outDepth,(d.inDepth+D-e)/p),r=e*w;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((M-a)/h)),i=Math.min(d.outHeight,(d.inHeight+M-a)/h),o=a*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(d.outWidth,(d.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*I+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*E,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-D)*A+d,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*h-M)*R+t,i=e*C+n;for(let e=u;e<l;++e){const t=e*$+i;g+=_[(r+e*f-O)*F+s+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Kk={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;nv([a],"conv3dBackpropInputV2");const l=ne(a.shape),c=ne(s.shape),d=Di(u,s.shape,o,1,i),p=new ia(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=l,I=n.data.get(s.dataId).values,[N,S,T,C]=c,{batchSize:$,filterDepth:_,filterHeight:E,filterWidth:A,inChannels:R,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=_-1-d.padInfo.front,G=E-1-d.padInfo.top,H=A-1-d.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(_+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(E+o)/W);for(let c=0;c<O;++c){const d=c-H,p=Math.max(0,Math.ceil(d/V)),$=Math.min(P,(A+d)/V);let R=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=p;i<$;++i){const o=x*e+w*n+v*r+k*i,u=N*(_-1-a)+S*(E-1-s)+T*(A-1-(i*V-d))+C*t;for(let e=0;e<M;++e)R+=b[o+e]*I[u+e]}}}h[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Xk=sv(nt,(e=>Math.cos(e))),Yk={kernelName:nt,backendName:"cpu",kernelFunc:Xk},Zk=sv(rt,(e=>Math.cosh(e))),Jk={kernelName:rt,backendName:"cpu",kernelFunc:Zk},Qk={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,d,p,h]=a.shape,f=s.shape[0],[m,g]=o,y=_s([f,m,g,h],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=ne(a.shape),k=ne(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(d-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(c<0||c>d-1)for(let n=0;n<g;n++)for(let r=0;r<h;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+s)*(p-1);if(c<0||c>p-1){for(let n=0;n<h;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const d=Math.floor(c),m=Math.ceil(c),b=c-d;for(let r=0;r<h;r++){let s=r+d*v[2]+n*v[1]+i*v[0];const l=w[s];s=r+m*v[2]+n*v[1]+i*v[0];const c=w[s];s=r+d*v[2]+a*v[1]+i*v[0];const p=w[s];s=r+m*v[2]+a*v[1]+i*v[0];const h=l+(c-l)*b,f=p+(w[s]-p)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=h+(f-h)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<h;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<h;r++){const a=r+o*v[2]+u*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},eI={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;nv(a,"cumsum");const u=qo([s],a.shape.length);let l=a;null!=u&&(l=Jv({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Xo(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const d=Na(l.dtype,"int32"),p=ie(L(l.shape),d),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:h[n];else{const r=m(e,t-1);p[n]=i?h[r]+p[r]:h[n]+p[r]}}const g=n.makeTensorInfo(l.shape,d,p);if(null!=u){const e=Jv({inputs:{x:g},backend:n,attrs:{perm:Ko(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},tI={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=Ck(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=$k(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},nI={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;F("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],d=u*s,p=l*s,h=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*p*h);let g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*h;for(let t=0;t<h;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,d,p,h],a.dtype,m)}};function rI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;nv([a,s],"depthwiseConv2DNative");const c=ne(a.shape),d=ne(s.shape);let p=u;null==p&&(p=[1,1]),F(Wi(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const h=Fi(a.shape,s.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,w=b.top,v=h.outChannels/h.inChannels,k=new ia(h.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<h.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<h.outHeight;++e){const r=n+e*k.strides[1],a=e*h.strideHeight-w;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=h.inHeight)continue;const s=e*d[0],i=t+n*c[1];for(let e=0;e<h.outWidth;++e){const t=r+e*k.strides[2],n=e*h.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=h.inWidth)continue;const a=s+e*d[1],o=i+r*h.inChannels;let u=t,l=a;for(let e=0;e<h.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)S[u+e]+=t*N[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const aI={kernelName:ut,backendName:"cpu",kernelFunc:rI},sI={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;nv([a,s],"depthwiseConv2dNativeBackpropFilter");const d=Fi(a.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new ia(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,v=new ia(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new ia(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(d.outHeight,(d.inHeight+b-e)/p);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/h)),s=Math.min(d.outWidth,(d.inWidth+y-r)/h);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=a;e<s;++e){const n=r+e*h-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},iI={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;nv([a,s],"depthwiseConv2DNativeBackpropInput");const d=ne(a.shape),p=ne(s.shape),h=Fi(c,s.shape,i,o,u,l,!0),f=new ia(h.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=d,I=n.data.get(s.dataId).values,[N,S,T]=p,{batchSize:C,filterHeight:$,filterWidth:_,inChannels:E,inHeight:A,inWidth:R,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=h,z=$-1-h.padInfo.top,P=_-1-h.padInfo.left,B=F/E;for(let e=0;e<C;++e)for(let t=0;t<E;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/M)),s=Math.min(D,($+r)/M);for(let i=0;i<R;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(_+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=u;r<l;++r){const s=w*e+v*n+k*r,i=N*($-1-a)+S*(_-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},oI={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=L(r.shape),s=n.data.get(r.dataId).values,i=_s([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},uI={kernelName:pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,d=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=Ei(r.shape,a.shape,s,i,"NHWC",o),C=L(T),$=T.length,_=q(r.dtype,C);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const i=s*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){const h=i+n*S;if(h>=0&&h<m){const i=le([e,s,h,o],c,ne(r.shape)),f=le([t,n,o],p,ne(a.shape)),m=l[i]+d[f];m>u&&(u=m)}}}_[le([e,t,s,o],$,ne(T))]=u}}}return{dataId:u.write(Kr(_,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},lI={kernelName:ft,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ae(r.shape,l.data.get(r.dataId).values),d=ae(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Ei(r.shape,a.shape,i,o,"NHWC",u);F(s.rank===S.length,(()=>`Error in ${ft}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const T=ae(S,l.data.get(s.dataId).values),C=oe(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<h)for(let n=0;n<k;++n){const l=a+n*N;if(l>=0&&l<f){const a=c[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}C[o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(Kr(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},cI={kernelName:ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ae(r.shape,l.data.get(r.dataId).values),d=ae(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Ei(r.shape,a.shape,i,o,"NHWC",u);F(s.rank===S.length,(()=>`Error in ${ht}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const T=ae(S,l.data.get(s.dataId).values),C=oe(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<h)for(let n=0;n<k;++n){const l=a+n*N;if(l>=0&&l<f){const a=c[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=r,u=l)}}}C[e][o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(Kr(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dI=hv(((e,t)=>e*t)),pI=Dv(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),hI=Fv(dn,dI,pI),fI={kernelName:dn,backendName:"cpu",kernelFunc:hI};function mI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;nv(a,"sum"),o="bool"===a.dtype?Av({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):lv({inputs:{x:a},backend:n});const u=o.shape.length,l=G(s,o.shape),c=qo(l,u);let d=l,p=o;null!=c&&(p=Jv({inputs:{x:o},backend:n,attrs:{perm:c}}),d=Xo(d.length,u)),jo("sum",d,p.shape.length);const[h,f]=Go(p.shape,d);let m=$v(n,h,Na(p.dtype,"int32"));const g=L(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=Pv({inputs:{x:m},backend:n,attrs:{shape:Ho(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const gI={kernelName:qn,backendName:"cpu",kernelFunc:mI},yI={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Bc(a,s.length);Vc(i.length,u,s);const{path:l,steps:c}=Uc(o,u),d=c.length;let p=null,h=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Wc(h,u[t]);let a;Gc(e)?a=s[t]:(a=Jv({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);z(a.shape,i)||(a=Pv({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=hI({inputs:{a,b:p},backend:n}),f.push(p))}e<d-1&&(l[e]>=0&&(p=mI({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},bI={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;nv([r,a],"eluGrad");const s=new Float32Array(L(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},xI=hv(((e,t)=>e===t?1:0)),wI=Fv(wt,xI,null,"bool"),vI={kernelName:wt,backendName:"cpu",kernelFunc:wI},kI=kc,II=Ic,NI=Nc,SI=Sc,TI=Tc,CI=Cc,$I=sv(xt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+kI*n);return t*(1-((((CI*r+TI)*r+SI)*r+NI)*r+II)*r*Math.exp(-n*n))})),_I={kernelName:xt,backendName:"cpu",kernelFunc:$I},EI=vv((e=>Math.exp(e))),AI=iv(vt,EI,"float32"),RI={kernelName:vt,backendName:"cpu",kernelFunc:AI};function FI(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(F(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),Pv({inputs:{x:a},backend:n,attrs:{shape:o}})}const DI={kernelName:kt,backendName:"cpu",kernelFunc:FI},OI=vv((e=>Math.expm1(e))),MI=iv(It,OI),LI={kernelName:It,backendName:"cpu",kernelFunc:MI},zI=hv(((e,t)=>e/t)),PI=Fv(mt,zI),BI={kernelName:mt,backendName:"cpu",kernelFunc:PI},WI=hv(((e,t)=>e-t)),VI=Dv(((e,t,n,r)=>({real:e-n,imag:t-r}))),UI=Fv(ur,WI,VI),GI={kernelName:ur,backendName:"cpu",kernelFunc:UI};function HI(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=L(l),d=j("float32",c),p=j("float32",c);for(let e=0;e<a;e++){const r=Nk({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Nk({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Tv({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=jI(i,t,n),h=$c(l,c);for(let t=0;t<s;t++){const n=Rc(h,t);d[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const h=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",p),m=Tv({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function jI(e,t,n){const r=L(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Oc(a*r,t,n),u=Rc(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),Fc(r,s,i,a)}return r}($c(s,i),r,t);return _c(e)}{const a=qI(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",qr(r,"float32")),i=lv({inputs:{x:s},backend:n}),u=BI.kernelFunc({inputs:{a:e,b:s},backend:n}),l=BI.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,d=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:d}}return a}var o}function qI(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=$c(e,t),i=n/2,o=Ec(s),u=o.real,l=o.imag,c=[u.length],d=a.makeTensorInfo(c,"float32",u),p=a.makeTensorInfo(c,"float32",l),h=Tv({inputs:{real:d,imag:p},backend:a}),f=Ac(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=Tv({inputs:{real:b,imag:x},backend:a}),v=qI(u,l,i,r,a),k=v.real,I=v.imag,N=[k.length],S=a.makeTensorInfo(N,"float32",k),T=a.makeTensorInfo(N,"float32",I),C=Tv({inputs:{real:S,imag:T},backend:a}),$=qI(m,g,i,r,a),_=$.real,E=$.imag,A=[_.length],R=a.makeTensorInfo(A,"float32",_),F=a.makeTensorInfo(A,"float32",E),D=Tv({inputs:{real:R,imag:F},backend:a}),O=Dc(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),z=a.makeTensorInfo(M,"float32",O.imag),P=Tv({inputs:{real:L,imag:z},backend:a}),B=hI({inputs:{a:P,b:D},backend:a}),W=Lv({inputs:{a:C,b:B},backend:a}),V=UI({inputs:{a:C,b:B},backend:a}),U=_v({inputs:{input:W},backend:a}),G=_v({inputs:{input:V},backend:a}),H=zk({inputs:{input:W},backend:a}),j=zk({inputs:{input:V},backend:a}),q=Bk({inputs:[U,G],backend:a,attrs:{axis:0}}),K=Bk({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const KI={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=L(r.shape),s=r.shape[r.shape.length-1],i=Pv({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=HI(i,!1,n),u=Pv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function XI(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Q(a),o=q(i,L(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const YI={kernelName:St,backendName:"cpu",kernelFunc:XI},ZI={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=j(r.dtype,L(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let d=c[o];i>=0&&i<u&&(d=c[t+n+i*l+a]),s[o]=d}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},JI=vv((e=>Math.floor(e))),QI=iv(Ct,JI),eN={kernelName:Ct,backendName:"cpu",kernelFunc:QI},tN=hv(((e,t)=>Math.floor(e/t))),nN=Fv($t,tN,null,"int32"),rN={kernelName:$t,backendName:"cpu",kernelFunc:nN},aN={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Vk({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=Lv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=Sv(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},sN={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=rI({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=Lv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=Sv(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function iN(e,t,n,r,a,s,i,o,u){const l=_s([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}const oN={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=L(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,d]=Gs(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=iN(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,d,r.shape,s);return n.makeTensorInfo(u,r.dtype,p.values)}};function uN(e,t,n){const r=_s(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}const lN={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;nv([a,s],"gatherV2");const u=G(i,a.shape)[0],l=n.data.get(s.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];F(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let d=o;null==o&&(d=0);const p=L(s.shape),h=Xc(a,s,u,d),f=Pv({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Pv({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),b=uN(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,b.dtype,b.values)}},cN=hv(((e,t)=>e>t?1:0)),dN=Fv(Rt,cN,null,"bool"),pN={kernelName:Rt,backendName:"cpu",kernelFunc:dN},hN=hv(((e,t)=>e>=t?1:0)),fN=Fv(Ft,hN,null,"bool"),mN={kernelName:Ft,backendName:"cpu",kernelFunc:fN},gN={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=L(r.shape),s=r.shape[r.shape.length-1],i=Pv({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=HI(i,!0,n),u=Pv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},yN=sv(Lt,(e=>Number.isFinite(e)?1:0),"bool"),bN={kernelName:Lt,backendName:"cpu",kernelFunc:yN},xN=sv(zt,(e=>Math.abs(e)===1/0?1:0),"bool"),wN={kernelName:zt,backendName:"cpu",kernelFunc:xN},vN=sv(Pt,(e=>Number.isNaN(e)?1:0),"bool"),kN={kernelName:Pt,backendName:"cpu",kernelFunc:vN},IN=hv(((e,t)=>e<t?1:0)),NN=Fv(Wt,IN,null,"bool"),SN={kernelName:Wt,backendName:"cpu",kernelFunc:NN},TN=hv(((e,t)=>e<=t?1:0)),CN=Fv(Vt,TN,null,"bool"),$N={kernelName:Vt,backendName:"cpu",kernelFunc:CN};function _N(e,t,n){const r=(t-e)/(n-1),a=ie(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const EN={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=_N(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},AN=vv((e=>Math.log(e))),RN=iv(Gt,AN),FN={kernelName:Gt,backendName:"cpu",kernelFunc:RN},DN=sv(Ht,(e=>Math.log1p(e))),ON={kernelName:Ht,backendName:"cpu",kernelFunc:DN},MN=hv(((e,t)=>e&&t)),LN=Fv(jt,MN,null,"bool"),zN={kernelName:jt,backendName:"cpu",kernelFunc:LN},PN=sv(qt,(e=>e?0:1),"bool"),BN={kernelName:qt,backendName:"cpu",kernelFunc:PN},WN=hv(((e,t)=>e||t)),VN=Fv(Kt,WN,null,"bool"),UN={kernelName:Kt,backendName:"cpu",kernelFunc:VN},GN={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;nv(a,"LRN");const l=a.shape[3],c=l-1,d=n.data.get(a.dataId).values,p=L(a.shape),h=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=d[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=f(e),n=d[e]*Math.pow(i+o*t,-u);h[e]=n}return n.makeTensorInfo(a.shape,a.dtype,h)}},HN={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;nv(i,"LRNGrad");const d=L(i.shape),p=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=h[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function jN(e,t,n,r){const a=j(r,L(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function qN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=G(s,u);let d=c;const p=qo(d,l);let h=o.data.get(a.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];h=Zv(h,u,a.dtype,p,e),d=Xo(d.length,l),u=e}nv(a,"max"),jo("max",d,l);const[f,m]=Go(u,d),g=jN(h,L(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Ho(f,c)),{dataId:y,shape:b,dtype:a.dtype}}const KN={kernelName:Zt,backendName:"cpu",kernelFunc:qN},XN=hv(((e,t)=>Math.max(e,t))),YN=Fv(Jt,XN),ZN={kernelName:Jt,backendName:"cpu",kernelFunc:YN},JN={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;nv(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;F(Wi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ai(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&z(l.inShape,l.outShape))c=lv({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ne(a.shape),r=mk(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},QN={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;nv(a,"maxPool3d");const c=Ri(a.shape,s,i,1,o,u,l),d=yk(n.data.get(a.dataId).values,a.shape,a.dtype,ne(a.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},eS={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;nv([a,s],"maxPool3DGrad");const c=Ri(s.shape,i,o,1,u,l),d=function(e,t){const n=_s(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-h;let p=l;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const h=a*s-f;let k=h;for(;k<0;)k+=u;const I=Math.min(t.inWidth,d+h);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=p;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-h,o=e.get(m,t,r,s,g);o>=N&&(N=o,S=n*c*d+a*c+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=_s(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-v,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const p=b*x*w-1-d.get(e,r,s,l,t)===n*x*w+a*w+i?1:0;0!==p&&(u+=S.get(e,r,s,l,t)*p)}}}N.set(u,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},tS={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;nv([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=Ai(o.shape,u,l,1,c,d),h=n.data.get(o.dataId).values,f=_s(p.outShape,o.dtype,gk(h,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=_s(o.shape,"float32"),N=n.data.get(a.dataId).values,S=_s(a.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=b){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+a?1:0;0!==u&&(i+=S.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},nS={kernelName:rn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;nv(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Ai(r.shape,a,s,[1,1],i),[d,p]=function(e,t,n,r,a){const s=mk(e,0,n,ne(t),a,"max"),i=gk(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),h=u.write(d,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:h,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},rS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=G(s,a.shape),u=L(Go(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const d=Av({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(d);const p=PI({inputs:{a:d,b:c},backend:n});l.push(p);const h=mI({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},aS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nv(a,"min");const o=G(s,a.shape);let u=o;const l=qo(u,a.shape.length);let c=a;null!=l&&(c=Jv({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Xo(u.length,a.shape.length)),jo("min",u,c.shape.length);const[d,p]=Go(c.shape,u),h=L(p),f=ie(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=Pv({inputs:{x:g},backend:n,attrs:{shape:Ho(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},sS=hv(((e,t)=>Math.min(e,t))),iS=Fv(on,sS),oS={kernelName:on,backendName:"cpu",kernelFunc:iS},uS={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;nv(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,d=n.data.get(a.dataId).values,p=a.shape.length,h=ne(a.shape),f=L(o),m=o.length,g=ne(o),y=j(a.dtype,f);for(let e=0;e<f;e++){let t=ce(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=le(t,p,h);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},lS=hv(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),cS=Fv(ln,lS),dS={kernelName:ln,backendName:"cpu",kernelFunc:cS};var pS=n(546);function hS(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=G([o],a.shape),l=qN({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Ho(l.shape,u),d=Pv({inputs:{x:l},backend:n,attrs:{shape:c}}),p=UI({inputs:{a,b:d},backend:n}),h=AI({inputs:{x:p},backend:n}),f=mI({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=Pv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=PI({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const fS={kernelName:Yn,backendName:"cpu",kernelFunc:hS},mS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;nv(a,"multinomial");const u=o?a:hS({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],d=n.data.get(u.dataId).values,p=[l,s],h=ie(L(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=pS.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();h[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){h[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",h)}};function gS(e,t,n){const r=qr(-1,n);return dI([],t,r,e,n)}const yS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;nv(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=gS(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},bS=pl,xS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;nv(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=bS(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},wS=hl,vS={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;nv(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=wS(c,d,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},kS=fl,IS={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;nv(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,p=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=kS(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},NS=hv(((e,t)=>e!==t?1:0)),SS=Fv(hn,NS,null,"bool"),TS={kernelName:hn,backendName:"cpu",kernelFunc:SS},CS={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;nv(a,"oneHot");const u=L(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function $S(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=_v({inputs:{input:r},backend:n}),t=$S({inputs:{x:e},backend:n}),a=zk({inputs:{input:r},backend:n}),s=$S({inputs:{x:a},backend:n}),i=Tv({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return XI({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const _S={kernelName:br,backendName:"cpu",kernelFunc:$S},ES={kernelName:yn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=_v({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=zk({inputs:{input:a},backend:r}),i=$S({inputs:{x:s},backend:r}),o=Tv({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return XI({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function AS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return FI({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(s,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Bk({inputs:t.map((e=>{const t=FI({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const RS={kernelName:xn,backendName:"cpu",kernelFunc:AS},FS={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;nv(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=L(a.shape),d=a.shape.length,p=ne(a.shape),h=L(o),f=o.length,m=ne(o),g=j(a.dtype,h);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[le(ce(e,d,p).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},DS=hv(((e,t)=>Math.pow(e,t))),OS=Fv(vn,DS),MS={kernelName:vn,backendName:"cpu",kernelFunc:OS};function LS(e,t,n,r){const[a,s]=Go(e,r),i=Na(t,"int32"),o=ie(L(a),i),u=L(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const zS={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nv(a,"prod");const o=a.shape.length,u=G(s,a.shape),l=qo(u,o);let c=u,d=a;const p=[];null!=l&&(d=Jv({inputs:{x:a},backend:n,attrs:{perm:l}}),p.push(d),c=Xo(c.length,o));const h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=LS(d.shape,d.dtype,h,c);let y=m;return i&&(y=Ho(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function PS(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ie(0,r);const a=ie(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const BS={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=PS(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},WS=sv(Tn,(e=>1/e)),VS={kernelName:Tn,backendName:"cpu",kernelFunc:WS},US={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;nv(a,"resizeBilinear");const u=ne(a.shape),[l,c]=o,[d,p,h,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(L([d,l,c,f])),y=[s&&l>1?p-1:p,s&&c>1?h-1:h],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(h-1,Math.ceil(t)),c=o+n*u[2],d=l+n*u[2],p=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[d+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([d,l,c,f],"float32",g)}},GS={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;nv([s,a],"resizeBilinearGrad");const o=ne(a.shape),[u,l,c,d]=a.shape,[,p,h]=s.shape,f=new Float32Array(u*l*c*d),m=[i&&p>1?l-1:l,i&&h>1?c-1:c],g=[i&&p>1?p-1:p,i&&h>1?h-1:h],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,p=1-u;for(let e=0;e<h;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,h=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*l,k=p*a,I=u*l,N=u*a;for(let e=0;e<d;e++){const t=x[w++];f[h+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,d],"float32",f)}},HS={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;nv(a,"resizeNearestNeighbor");const u=ne(a.shape),[l,c]=o,[d,p,h,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(d*l*c*f),y=[s&&l>1?p-1:p,s&&c>1?h-1:h],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(h-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([d,l,c,f],a.dtype,g)}},jS={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;nv([s,a],"resizeNearestNeighborGrad");const o=ne(a.shape),u=ne(s.shape),[l,c,d,p]=a.shape,[,h,f]=s.shape,m=new Float32Array(l*c*d*p),g=n.data.get(s.dataId).values,y=[i&&h>1?c-1:c,i&&f>1?d-1:d],b=[i&&h>1?h-1:h,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<d;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-N/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=h)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*u[2],s=t*w;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},qS={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;nv(a,"reverse");const i=a.shape.length,o=G(s,a.shape);if(0===i)return lv({inputs:{x:a},backend:n});const u=new ia(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},KS={kernelName:vr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=j(r.dtype,L(r.shape)),[l,c,d,p]=r.shape,[h,f]=fc(i,c,d),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*d*c*p;for(let e=0;e<c;e++){const n=e*(d*p);for(let r=0;r<d;r++){const a=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-h)*g-(x-f)*m,v=(b-h)*m+(x-f)*g;w=Math.round(w+h),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<d&&v>=0&&v<c&&(k=y[t+v*(d*p)+w*p+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},XS=sv(On,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),YS={kernelName:On,backendName:"cpu",kernelFunc:XS},ZS=vv((e=>1/Math.sqrt(e))),JS=iv(Mn,ZS),QS={kernelName:Mn,backendName:"cpu",kernelFunc:JS};function eT(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],d=e.values,p=t.values;if(0===r)return _s(n,t.dtype);const h=_s(c,t.dtype);h.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?h.values[u*a+n]+=p[e*a+n]:h.values[u*a+n]=0===t.rank?p[0]:p[e*a+n]}return h}const tT={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=qs(0,a,i),p=eT(n.bufferSync(a),n.bufferSync(s),i,d,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},nT={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;nv([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=Na(a.dtype,s.dtype),d=ie(L(a.shape),c);let p=0;const h=0===i||i>1||1===a.shape.length?1:L(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?d[p++]=u[e]:d[p++]=l[e];return n.makeTensorInfo(a.shape,c,d)}},rT=wc,aT=vc,sT=sv(Pn,(e=>e>=0?aT*e:rT*(Math.exp(e)-1))),iT={kernelName:Pn,backendName:"cpu",kernelFunc:sT},oT=sv(Un,(e=>e<0?-1:e>0?1:0)),uT={kernelName:Un,backendName:"cpu",kernelFunc:oT},lT=sv(Wn,(e=>Math.sin(e))),cT={kernelName:Wn,backendName:"cpu",kernelFunc:lT},dT=sv(Vn,(e=>Math.sinh(e))),pT={kernelName:Vn,backendName:"cpu",kernelFunc:dT},hT=Math.log(1.1920928955078125e-7)+2,fT=sv(Hn,(e=>{const t=e>-hT,n=e<hT,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),mT={kernelName:Hn,backendName:"cpu",kernelFunc:fT},gT={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;nv([a],"spaceToBatchND");const o=L(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=FS.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=mc(l.shape,s,o,!1),d=gc(c.length,s.length,!1),p=yc(l.shape,s,o,!1),h=Pv({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Jv({inputs:{x:h},backend:n,attrs:{perm:d}}),m=Pv({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};function yT(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),d=t[1];if(0===u){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[q(n,0),[0,d],q(a,0),l,c]}let p=!0,h=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++f[n],p=p&&n>=h,h=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,d],n,l,c]}{const t=f[u-1],s=q(n,t*d),p=q(a,t),h=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d],a=h[n],i=(0===n?0:f[n-1])+a;h[n]++;for(let n=0;n<d;++n)s[i*d+n]=e[t*d+n];p[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===h[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;p[t]=i}return[s,[t,d],p,l,c]}}const bT={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,p,h,f,m]=yT(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function xT(e,t,n,r,a){const s=L(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const d=L(u);if(d!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${u}`);const p=r.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=q(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*h[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}const wT={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,d]=xT(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function vT(e,t,n,r,a,s=!1,i=0){const o=r.length;if(o!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=c;const p=q(n,d.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,d];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,f=1,m=0,g=a[h];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(`Segment id ${g} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);g>m&&p.fill(i,m*l,g*l);for(let t=h;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${u[0]})`);for(let t=0;t<l;t++)p[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)p[g*l+e]/=f-h;if(h=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*l,c*l),[p,d]}const kT={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=vT(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},IT={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=vT(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},NT={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=qs(0,a,o),h=eT(n.bufferSync(a),n.bufferSync(s),o,p,c,l,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,h.dtype,h.values)}},ST={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=G(i,a.shape)[0],u=jc(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=Nk({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},TT=vv((e=>Math.sqrt(e))),CT=sv(jn,(e=>Math.sqrt(e))),$T={kernelName:jn,backendName:"cpu",kernelFunc:CT},_T={kernelName:rr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;nv(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ET=hv(((e,t)=>{const n=e-t;return n*n})),AT=Fv(nr,ET),RT={kernelName:nr,backendName:"cpu",kernelFunc:AT},FT=sv(xr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),DT={kernelName:xr,backendName:"cpu",kernelFunc:FT};function OT(e,t,n,r){const a=_s(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const MT={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r;nv(a,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=di(a.shape,s,i,o,u,l,c,d,p);let v;if(m)v=Pv({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){F(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Js(b,x,w),t=Nk({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});v=Pv({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=OT(h,n.bufferSync(a),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class LT{constructor(e,t,n,r,a,s){this.separator=Yr(e),this.nGramWidths=t,this.leftPad=Yr(n),this.rightPad=Yr(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),d=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const h=n[r+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=q("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}function zT(e,t,n,r,a,s,i,o){return new LT(n,r,a,s,i,o).compute(e,t)}const PT={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values,[f,m]=zT(p,h,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function BT(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function WT(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;BT(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=q("int32",2*s),l=new Array(s),c=[r,i];let d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*d]=e,u[2*d+1]=t,l[d]=a[d],++d;return[u,l,c]}const VT={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,d]=WT(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function UT(e,t){const n=q("int32",e.length);for(let r=0;r<e.length;++r)n[r]=jr(e[r]).modulo(t).getLowBitsUnsigned();return n}const GT={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=UT(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},HT=sv(lr,(e=>Math.tan(e))),jT={kernelName:lr,backendName:"cpu",kernelFunc:HT},qT=sv(cr,(e=>Math.tanh(e)));function KT(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=_s(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const XT=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function YT(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);YT(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(R(e,n,t),XT(e[r],a)>0&&R(e,n,r);s<i;){for(R(e,s,i),s++,i--;XT(e[s],a)<0;)s+=1;for(;XT(e[i],a)>0;)i-=1}0===XT(e[n],a)?R(e,n,i):(i+=1,R(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function ZT(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=j(n,i*r),l=j("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(YT(i,r),i=i.slice(0,r)),a&&i.sort(XT);const c=t*r,d=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[_s(c,n,u),_s(c,"int32",l)]}function JT(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return E(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return E(0,n,t-1)}(e,t);case"nearest":return function(e,t){return E(0,e,t-1)}(e,t);default:return e}}function QT(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function eC(e,t,n,r,a,s,i,o,u,l,c){return QT(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function tC(e,t,n,r,a,s,i,o,u,l,c){const d=Math.floor(o),p=Math.floor(u),h=d+1,f=p+1;return(h-o)*((f-u)*QT(e,t,n,r,a,s,i,d,p,l,c)+(u-p)*QT(e,t,n,r,a,s,i,d,f,l,c))+(o-d)*((f-u)*QT(e,t,n,r,a,s,i,h,p,l,c)+(u-p)*QT(e,t,n,r,a,s,i,h,f,l,c))}function nC(e,t,n,r){const a=G(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new ia(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const d=s.slice();d[1]=Object.keys(i).length;const p=new ia(d,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,e,r),n,t,r)}));const h=n.slice();return h[a]=d[1],{outputValues:p.values,outputShape:h,indices:o}}const rC=[Uv,Hv,qv,Xv,zv,Yv,ek,tk,nk,rk,sk,ok,lk,pk,fk,bk,xk,wk,vk,Vv,kk,Tk,_k,Ek,Rv,Fk,Ok,Cv,Mk,Wk,Gk,Hk,Uk,qk,Kk,jk,Yk,Jk,Qk,eI,tI,nI,aI,sI,iI,oI,uI,cI,lI,BI,yI,uv,bI,vI,_I,RI,DI,LI,KI,YI,ZI,eN,rN,aN,sN,oN,lN,pN,mN,cv,gN,Pk,bN,wN,kN,pv,SN,$N,EN,FN,ON,zN,BN,UN,GN,HN,ZN,JN,QN,eS,tS,nS,KN,rS,aS,oS,uS,dS,mS,fI,yS,xS,vS,IS,TS,CS,ES,RS,FS,MS,gv,zS,BS,Ev,VS,bv,wv,Bv,US,GS,HS,jS,qS,KS,YS,QS,tT,nT,iT,Nv,uT,cT,pT,Sk,fS,mT,gT,bT,wT,kT,IT,NT,ST,$T,_T,RT,DT,MT,PT,VT,GT,GI,gI,jT,{kernelName:cr,backendName:"cpu",kernelFunc:qT},{kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;nv(a,"tile");const i=KT(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;nv(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=ZT(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Qv,{kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,d,p,h]=a.shape,[f,m]=null!=l?l:[d,p],g=[c,f,m,h],y=ne(a.shape),b=y[0],x=y[1],w=y[2],v=j(a.dtype,L(g));v.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<h;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,h=(t[3]*r+t[4]*n+t[5])/l,f=JT(c,p,o),m=JT(h,d,o);switch(i){case"nearest":s=eC(k,d,p,b,x,w,e,m,f,a,u);break;case"bilinear":s=tC(k,d,p,b,x,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+r*w+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;nv(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=nC(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=Nk({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});p[e]=Pv({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},{kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;nv(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=FI({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=qr(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=wI({inputs:{a:r,b:c},backend:n}),i=Av({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=hI({inputs:{a:i,b:a},backend:n}),d=mI({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),u.push(r),u.push(s),u.push(i),u.push(l),u.push(d)}const d=AS({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},_S];for(const e of rC)Er(e);const aC={},sC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function iC(e){if(!(e in aC)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete aC[e]}),!1),1===e?t.getContext("webgl",sC)||t.getContext("experimental-webgl",sC):t.getContext("webgl2",sC)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;aC[e]=t}const t=aC[e];return t.isContextLost()?(delete aC[e],iC(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),aC[e])}var oC,uC,lC,cC,dC,pC;function hC(e,t){return[t,e]}function fC(e){const t=L(e);return B(Math.ceil(t/4))}function mC(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function gC(e,t){const n=e;let r,a,s,i,o,u,l,c,d,p;return 2===ye().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:p}}function yC(e,t){const n=t();return ye().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function bC(e){return!!(ye().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function xC(e,t){return CC(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}(uC=oC||(oC={}))[uC.DENSE=0]="DENSE",uC[uC.SHARED_BATCH=1]="SHARED_BATCH",(cC=lC||(lC={}))[cC.RENDER=0]="RENDER",cC[cC.UPLOAD=1]="UPLOAD",cC[cC.PIXELS=2]="PIXELS",cC[cC.DOWNLOAD=3]="DOWNLOAD",(pC=dC||(dC={}))[pC.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",pC[pC.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",pC[pC.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",pC[pC.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",pC[pC.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";const wC=/ERROR: [0-9]+:([0-9]+):/g;function vC(e,t){if(yC(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function kC(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(yC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),yC(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),yC(e,(()=>e.enableVertexAttribArray(o))),!0)}function IC(e,t,n,r){yC(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),yC(e,(()=>e.activeTexture(e.TEXTURE0+n))),yC(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),yC(e,(()=>e.uniform1i(n,r)))}function NC(e,t,n){yC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),yC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function SC(e,t){yC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),yC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function TC(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function CC(e,t,n){const r=yC(e,(()=>t()));if(null==r)throw new Error(n);return r}function $C(e,t=2){return L(e.slice(0,e.length-t))}function _C(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function EC(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[$C(e),..._C(e)]),t}function AC(e){return e%2==0}function RC(e,t){if(z(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(AC(n)&&AC(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&AC(e[0])&&AC(t[0])}let FC,DC;function OC(e,t){return null!=e.getExtension(t)}function MC(e){try{if(null!=iC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function LC(e){const t=gC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function zC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&F("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const PC=ye();function BC(){let e,t,n,r,a,s,i,o,u,l;return 2===ye().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function WC(e,t,n="index"){const r=ne(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function VC(e,t,n="index"){const r=ne(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function UC(e){const t=ne(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}PC.registerFlag("HAS_WEBGL",(()=>PC.getNumber("WEBGL_VERSION")>0)),PC.registerFlag("WEBGL_VERSION",(()=>MC(2)?2:MC(1)?1:0)),PC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),PC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===PC.get("WEBGL_VERSION"))),PC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),PC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),PC.registerFlag("WEBGL_PACK",(()=>PC.getBool("HAS_WEBGL"))),PC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_CLIP",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_PACK_REDUCE",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_CONV_IM2COL",(()=>PC.getBool("WEBGL_PACK"))),PC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==FC){const t=iC(e);FC=t.getParameter(t.MAX_TEXTURE_SIZE)}return FC}(PC.getNumber("WEBGL_VERSION")))),PC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==DC){const t=iC(e);DC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,DC)}(PC.getNumber("WEBGL_VERSION")))),PC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=PC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=iC(e);return t=OC(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:OC(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),PC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>PC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ma())),PC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=iC(e);if(1===e){if(!OC(t,"OES_texture_float"))return!1}else if(!OC(t,"EXT_color_buffer_float"))return!1;return LC(t)}(PC.getNumber("WEBGL_VERSION")))),PC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!PC.getBool("WEBGL_FORCE_F16_TEXTURES")&&PC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),PC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=iC(e);if(1!==e){if(OC(t,"EXT_color_buffer_float"))return LC(t);const e="EXT_color_buffer_half_float";if(OC(t,e)){const n=t.getExtension(e);return function(e,t){const n=gC(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!OC(t,"OES_texture_float")&&!!OC(t,"WEBGL_color_buffer_float")&&LC(t)}(PC.getNumber("WEBGL_VERSION")))),PC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=PC.getNumber("WEBGL_VERSION"))&&null!=iC(e).fenceSync;var e})),PC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>PC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),PC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),PC.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ma()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),PC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),PC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),PC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),PC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const GC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:HC}=a;function jC(e,t,n){const r=[];if(e.forEach((e=>{const t=L(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=n$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?KC(e,r):qC(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=HC(e.shapeInfo.logicalShape,t.logicalShape),u=t$(i),l=i-s;let c;const d=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+l]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+l]}`)).join(", ");let h="return outputValue;";const f=1===L(e.shapeInfo.logicalShape),m=1===L(t.logicalShape);if(1!==s||f||m){if(f&&!m)h=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&z(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=t$(u),c=HC(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let p;const h=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${h[e+d]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=BC(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${XC}\n    ${YC}\n    ${ZC}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(z(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return z(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${VC(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=WC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${VC(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=WC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=WC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=WC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(d+=JC),[d,u,c,a,l,s,n.userCode].join("\n")}function qC(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=QC(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${e$(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=QC(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&z(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=H(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${qC(r$(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${a$(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${e$(e)}\n      }\n    `;const l=s[0],c=s[1],d=QC(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=H(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${qC(r$(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${a$(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${e$(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],p=c[1],h=e.shapeInfo.flatOffset;if(p===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=QC(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=H(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${qC(r$(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${a$(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${e$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(h===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=QC(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=H(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${qC(r$(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${a$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${e$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${QC(n)};\n      vec2 uv = uvFromFlat(${p}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=H(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${qC(r$(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${a$(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${e$(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===c&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${QC(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function KC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${BC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=BC();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=BC();if(null!=s&&z(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${KC(r$(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${a$(s,r)});\n        }\n      `}const o=BC();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=BC();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[i-1]/2);let p=d*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const XC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ZC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",JC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function QC(e){return`offset${e}`}function e$(e){const t=e.name,n=L(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function t$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function n$(e,t,n){const{newShape:r,keptDims:a}=H(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!z(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function r$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function a$(e,t){return t.map((t=>e[t])).join(", ")}function s$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!z(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!z(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function i$(e){return ye().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class o${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=oC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=BC();this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?VC(["r","c","d"],e):WC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class u${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=oC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=BC();this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?VC(["r","c","d"],e):WC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class l${constructor(e){this.variableNames=["A"],this.outTexUsage=lC.DOWNLOAD;const t=BC();this.outputShape=e,this.userCode=`\n      ${GC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class c${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=lC.DOWNLOAD;const t=BC();this.outputShape=e,this.userCode=`\n      ${GC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class d${constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=BC();this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":UC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class p${constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=BC();this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":UC(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function h$(e,t,n,r,a,s){!function(e,t){const n=ye().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return CC(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return yC(e,(()=>e.bindTexture(o,i))),yC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),yC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),yC(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),yC(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),yC(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),yC(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function f$(e){return e.internalFormatFloat}function m$(e){return e.internalFormatHalfFloat}function g$(e){return e.downloadTextureFormat}function y$(e){return e.internalFormatPackedFloat}function b$(e){return e.internalFormatPackedHalfFloat}class x${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=ye().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){aC[e]=t}(t,e)):this.gl=iC(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===ye().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=xC(this.gl,e),OC(this.gl,t))this.textureHalfFloatExtension=xC(this.gl,t);else if(ye().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),OC(this.gl,r))this.colorBufferHalfFloatExtension=xC(this.gl,r);else if(ye().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",OC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!OC(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=CC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return yC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),yC(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=CC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return yC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),yC(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return CC(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=gC(this.gl,this.textureHalfFloatExtension)}get debug(){return ye().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;yC(e,(()=>e.finish())),yC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),yC(e,(()=>e.deleteFramebuffer(this.framebuffer))),yC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),yC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),yC(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=hC(t,n);return h$(e,a,s,f$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=hC(t,n);return h$(e,a,s,m$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=hC(t,n);return h$(e,a,s,g$(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){yC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?yC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):yC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),yC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;yC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),yC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),yC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=mC(t,n);return h$(e,a,s,b$(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=mC(t,n);return h$(e,a,s,y$(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(SC(this.gl,this.framebuffer),this.outputTexture=null),yC(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=hC(t,n),i=new Uint8Array(t*n*4);return yC(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i){const o=e,u=new Float32Array(function(e,t){const[n,r]=mC(e,t);return n*r*4}(s,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,u),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();yC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return yC(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),yC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),yC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ye().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return yC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=CC(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(yC(e,(()=>e.shaderSource(n,t))),yC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=wC.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>W((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${W(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=BC();return function(e,t){const n=CC(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(yC(e,(()=>e.shaderSource(n,t))),yC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return CC(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return yC(t,(()=>t.attachShader(r,this.vertexShader))),yC(t,(()=>t.attachShader(r,n))),function(e,t){if(yC(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&vC(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return yC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),kC(e,t,"clipSpacePos",n,3,20,0)&&kC(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&yC(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&vC(this.gl,this.program),yC(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return CC(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),yC(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),IC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=mC(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&vC(this.gl,this.program),TC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),yC(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),yC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=xC(this.gl,2===ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await V((()=>this.disposed||this.isQueryAvailable(e,ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||V((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),NC(this.gl,e,this.framebuffer),this.debug&&TC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(NC(this.gl,this.outputTexture,this.framebuffer),this.debug&&TC(this.gl)):SC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;NC(r,e,this.framebuffer),this.debug&&TC(r),this.outputTexture=e,yC(r,(()=>r.viewport(0,0,t,n))),yC(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),yC(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:w$,XI:v$,Nk:k$,YG:I$,hH:N$,z3:S$,sG:T$,uM:C$,vS:$$,qB:_$,GG:E$,rq:A$,lg:R$,WR:F$,cu:D$,GE:O$,px:M$,jC:L$,He:z$,hE:P$,BF:B$,Dk:W$,cl:V$,_B:U$,qy:G$,Zy:H$,zv:j$,dH:q$,HS:K$,yH:X$,l3:Y$,z9:Z$,x6:J$,eW:Q$,GK:e_,SP:t_,f6:n_,dl:r_,Dw:a_,xT:s_,_X:i_,wz:o_}=N;function u_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function l_(e,t){return 1===t?[e]:u_(e,t)}class c_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=l_("rc",t),r=t$(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class d_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):WC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":UC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class p_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=f_(t,n),a=m_(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=h_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===dC.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===dC.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===dC.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===dC.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===dC.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=f_(n,r),s=m_(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=h_(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ye().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function h_(e,t,n,r,a){const s=function(e,t){switch(e){case dC.PACKED_2X2_FLOAT32:return y$(t);case dC.PACKED_2X2_FLOAT16:return b$(t);case dC.UNPACKED_FLOAT32:return f$(t);case dC.UNPACKED_FLOAT16:return m$(t);case dC.PACKED_4X1_UNSIGNED_BYTE:return g$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=mC(e[0],e[1]);i=t*n}else{const[t,n]=hC(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function f_(e,t){if(e===lC.UPLOAD)return dC.PACKED_2X2_FLOAT32;if(e===lC.RENDER||null==e)return function(e){return ye().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?dC.PACKED_2X2_FLOAT32:dC.UNPACKED_FLOAT32:e?dC.PACKED_2X2_FLOAT16:dC.UNPACKED_FLOAT16}(t);if(e===lC.DOWNLOAD||e===lC.PIXELS)return dC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function m_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class g_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const y_="if (isnan(x)) return x;",b_="return abs(x);",x_=y_+"\n  return (x < 0.0) ? 0.0 : x;\n",w_=y_+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",v_="return x;";class k_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class I_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=l_("rc",t),r=t$(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const N_=Jc,S_={},T_=ye().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class C_ extends C{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ye().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=iC(ye().getNumber("WEBGL_VERSION"));this.binaryCache=((t=ye().getNumber("WEBGL_VERSION"))in S_||(S_[t]={}),S_[t]),this.gpgpu=new x$(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new p_(this.gpgpu),this.numMBBeforeWarning=null==ye().global.screen?1024:ye().global.screen.height*ye().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new T(this,gi())}nextDataId(){return C_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((ye().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ye().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:lC.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(ye().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:lC.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new k_(i,v_):new g_(i,v_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Xr()),c="complex64"===r?$c(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Xr()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new k_(r,v_):new g_(r,v_);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!ye().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ye().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&ye().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...fC(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=$c(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=L(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;yC(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&gi().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Zr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return _s(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!bC(n)){if(ye().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=L(t);if(ye().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...fC(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=ye().getBool("WEBGL_PACK")&&!0===r,i=s?EC(t):t,o=s?new c$(i):new l$(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=M(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=M(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xr(),endMs:null}}endTimer(e){return ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xr(),e)}async getQueryTime(e){if(ye().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=T_){return ye().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&L(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){pe("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return N_(e.shape,t)}packedUnaryOp(e,t,n){const r=new k_(e.shape,t),a=this.compileAndRun(r,[e],n);return gi().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=q$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ye().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,b_,e.dtype);const t=new g_(e.shape,b_),n=this.compileAndRun(t,[e]);return gi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Z(n[0])){const a=n.map((e=>Yr(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return gi().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new I_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new c_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[$C(e.shape),..._C(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[$C(t),..._C(t)],s=new d_(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=EC(r);let i;const o=fC(s);i=n?new u$(s):new o$(s);const u=[o];return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===oC.DENSE){const t=fC(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===L(s.shape))return i.values=j(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&L(t.shape)<=ye().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!RC(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=n$(e.packedInputs,t.shape,s);let l="",c="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ne(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,h=2===o.length&&z(t.shape,s),f=1===L(t.shape),m=fo(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&z(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?u:""}_${o.length}_${f}_${m}_${h}_${l}_${c}_${d}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${ye().getNumber("WEBGL_VERSION")}`,s}(e,u,l),d=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=jC(a,i,t),u=e.createProgram(o);let l=null;const c=e.getUniformLocation(u,"NAN",!1);1===ye().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(u,"INFINITY",!1));const d=!1,p={},h={},f={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(u,r,d),p[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,d),t.enableShapeUniforms&&(h[`${r}Shape`]=e.getUniformLocation(u,`${r}Shape`,d),f[`${r}TexShape`]=e.getUniformLocation(u,`${r}TexShape`,d))}let m,g,y;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",d),y=e.getUniformLocation(u,"outShapeStrides",d),g=e.getUniformLocation(u,"outTexShape",d));const b=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{b[n]=e.getUniformLocation(u,t.name,d)})),{program:t,source:o,webGLProgram:u,uniformLocations:p,customUniformLocations:b,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:c,inShapesLocations:h,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:y,outTexShapeLocation:g}}(this.gpgpu,e,u,l))),p=null!=this.activeTimers;let h;p&&(h=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(s$(t.inShapeInfos,n),s$([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===ye().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=n$(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(L(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ne(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,d,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));const f=ye().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=Xr();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ye().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ye().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=bi((()=>{if(!ye().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ye().getBool("DEBUG");ye().set("DEBUG",!1);const t=this.abs(Ii(1e-8)).dataSync()[0];if(ye().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Xr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=ye().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?A(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=H(e);e=t.newShape}let r=L(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=$C(e);let n=2,a=2;return e.length&&([n,a]=_C(e)),r=t*(n/2)*(a/2),B(r).map((e=>2*e))}return B(r)}(n,o),t.texShape=c),null!=a){const e=EC(n);let s,i=c[1],d=c[0];const p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;o?([i,d]=mC(c[0],c[1]),s=new p$(e,p)):s=new d$(e,p);const h=this.makeTensorInfo([d,i],r);this.texData.get(h.dataId).usage=p?lC.PIXELS:lC.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(h.dataId),i,d,a);const f=[[d,i]],m=!0,g=this.runWebGLProgram(s,[h],r,f,m),y=this.texData.get(g.dataId);t.texture=y.texture,t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,this.disposeIntermediateTensorInfo(h),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=Xr()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Y(t)}}C_.nextDataId=0,La()&&vi("webgl",(()=>new C_),2);const $_="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class __{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=go(t,n),this.enableShapeUniforms=i$(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const E_="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class A_{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=go(t,n);const a=this.outputShape.length;this.enableShapeUniforms=i$(a);let s="";if(r)if(0===a||1===L(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${t$(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=l_("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function R_(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const F_={kernelName:Dt,backendName:"webgl",kernelFunc:R_};function D_(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=R_({inputs:{x:r},backend:n}),u=R_({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const O_={kernelName:qe,backendName:"webgl",kernelFunc:D_},M_="return (a < 0.) ? b * a : a;",L_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",z_={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",qr(s,"float32")),o=ye().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new A_(L_,a.shape,i.shape):new __(M_,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},P_="return (a < 0.) ? b * a : a;",B_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",W_={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=ye().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new A_(B_,r.shape,a.shape):new __(P_,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},V_="if (isnan(x)) return x;";function U_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=ye().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new k_(i.shape,t):new g_(i.shape,e),o.runWebGLProgram(l,[i],u)}}function G_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new __(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],Na(n.dtype,r.dtype))})),s=D_({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const d=s||Na(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Yc(e):e,r="string"===u.dtype?Yc(t):t,[s,i]=a(u.shape,l.shape,n,r,d),o=c.makeTensorInfo(i,d);return c.texData.get(o.dataId).values=s,o}let p;return p=ye().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new A_(t,u.shape,l.shape,n):new __(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],d)}}function H_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":x_;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":w_;if("prelu"===e)return t?B_:P_;if("leakyrelu"===e)return t?L_:M_;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class j_{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=i$(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class q_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=go(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const K_="return a * b;";function X_(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Na(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new q_("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new q_("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=D_({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=B$(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=ye().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new A_(K_,r.shape,a.shape):new __(K_,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const Y_={kernelName:dn,backendName:"webgl",kernelFunc:X_};function Z_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=L(a.shape),u=U(s,o),l=L(u);F(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||RC(a.shape,u)||null!==c.texture&&RC(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[$C(e.shape),..._C(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[$C(t),..._C(t)],i=new d_(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}const J_={kernelName:$n,backendName:"webgl",kernelFunc:Z_};class Q_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${P(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class eE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function tE(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=hc(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,d;c="mean"===n?0===i?new Q_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Q_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new eE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class nE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=t$(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class rE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=t$(this.rank),a=u_("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function aE(e,t,n){const r=ye().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rE(e.shape,t):new nE(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function sE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=G(a,e.shape);let o=i;const u=qo(o,s),l=null!=u;let c=e;l&&(c=aE(e,u,r),o=Xo(o.length,s)),jo("sum",o,s);const[d,p]=Go(c.shape,o);let h=d;n&&(h=Ho(d,i));const f=L(p),m=Z_({inputs:{x:c},attrs:{shape:[L(e.shape)/f,f]},backend:r}),g=tE(m,Sa(e.dtype),"sum",r),y=Z_({inputs:{x:g},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}const iE={kernelName:qn,backendName:"webgl",kernelFunc:sE};function oE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=i_(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=aE(a,s,i);return l}const uE={kernelName:fr,backendName:"webgl",kernelFunc:oE};function lE({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,d=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=L(m),b=L(g);F(l>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,f]);F(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,d,h]:[y,h,d],v=r?[b,f,p]:[b,p,f],k=Z_({inputs:{x:e},backend:a,attrs:{shape:w}}),I=Z_({inputs:{x:t},backend:a,attrs:{shape:v}}),N=[k,I],S=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=s,$=null!=i,_="leakyrelu"===u,E=null!=u?H_(u,!0):null;let A;if((1===h||1===f)&&T>1e3&&!1===(C||$||_||null!=E)){let e=k,t=I;n&&(e=oE({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=oE({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const s=1===f;let i=e;1!==f&&(i=Z_({inputs:{x:e},backend:a,attrs:{shape:[S,T,1]}}),N.push(i));const o=1===f?2:1;let u=t;s&&(u=Z_({inputs:{x:t},backend:a,attrs:{shape:[S,1,T]}}),N.push(u));const l=X_({inputs:{a:i,b:u},backend:a});A=sE({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=Na(e.dtype,t.dtype),l=new j_(w,v,[S,h,f],n,r,C,E,$,_),c=[k,I];if(null!=s&&c.push(s),$&&c.push(i),_){const e=a.makeTensorInfo([],"float32",qr(o,"float32"));c.push(e),N.push(e)}A=a.runWebGLProgram(l,c,u)}const R=Z_({inputs:{x:A},backend:a,attrs:{shape:x}});N.push(A);for(const e of N)a.disposeIntermediateTensorInfo(e);return R}const cE={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return lE({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},dE="return abs(x);",pE={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=q$(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=ye().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new k_(r.shape,dE):new g_(r.shape,dE),n.runWebGLProgram(a,[r],r.dtype)}},hE=U_({opSnippet:y_+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),fE={kernelName:Ie,backendName:"webgl",kernelFunc:hE},mE=U_({opSnippet:y_+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),gE={kernelName:Ne,backendName:"webgl",kernelFunc:mE},yE="return a + b;",bE=G_({opSnippet:yE,packedOpSnippet:yE,supportsComplex:!0,cpuKernelImpl:w$}),xE={kernelName:Se,backendName:"webgl",kernelFunc:bE};class wE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class vE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const kE={kernelName:Te,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return R_({inputs:{x:a[0]},backend:r});if(a.length>ye().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>Na(e,t))),i=a.map((e=>e.shape)),o=ye().getBool("WEBGL_PACK")?new vE(a[0].shape,i):new wE(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},IE={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=G(s,a.shape);let l=u;const c=qo(l,o);let d=a;null!=c&&(d=oE({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Xo(l.length,o)),jo("all",l,o);const[p,h]=Go(d.shape,l),f=Z_({inputs:{x:d},backend:n,attrs:{shape:[-1,L(h)]}}),m=tE(f,f.dtype,"all",n);let g;return g=Z_(i?{inputs:{x:m},backend:n,attrs:{shape:Ho(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},NE={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=G(s,a.shape);let l=u;const c=qo(l,o);let d=a;null!=c&&(d=oE({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Xo(l.length,o)),jo("any",l,o);const[p,h]=Go(d.shape,l),f=Z_({inputs:{x:d},backend:n,attrs:{shape:[-1,L(h)]}}),m=tE(f,f.dtype,"any",n);let g;return g=Z_(i?{inputs:{x:m},backend:n,attrs:{shape:Ho(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};class SE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class TE{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=t$(o),l=l_("coords",o);let c,d;if(1===s){d=o+1;const e=t$(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else d=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map((e=>"int "+e)),m=l_("sourceLocR",d-1).concat("inIdx.r"),g=l_("sourceLocG",d-1).concat("inIdx.g"),y=l_("sourceLocB",d-1).concat("inIdx.b"),b=l_("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function CE(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=hc(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new SE(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const d=CE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function $E(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=hc(a[a.length-1]),i=new TE(a,s,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=$E(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function _E(e,t,n,r){const a=[n];if(jo("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!ye().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Go(i.shape,a),l=L(u),c=Z_({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const d=CE(e,c,r);n.push(d);const p=Z_({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return $E(e,t,r)}const EE={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=G(s,a.shape);const o=qo(i,a.shape.length);let u=a;const l=[];null!=o&&(u=oE({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Xo(i.length,u.shape.length)),jo("argMax",[i[0]],u.shape.length);const c=_E(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},AE={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=G(s,a.shape);const o=qo(i,a.shape.length);let u=a;const l=[];null!=o&&(u=oE({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Xo(i.length,u.shape.length)),jo("argMin",[i[0]],u.shape.length);const c=_E(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},RE=U_({opSnippet:y_+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),FE={kernelName:Ae,backendName:"webgl",kernelFunc:RE},DE=U_({opSnippet:y_+"return log(x + sqrt(x * x + 1.0));"}),OE={kernelName:Re,backendName:"webgl",kernelFunc:DE},ME=U_({opSnippet:y_+"\n  return atan(x);\n"}),LE={kernelName:Fe,backendName:"webgl",kernelFunc:ME},zE=G_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),PE={kernelName:Oe,backendName:"webgl",kernelFunc:zE},BE=U_({opSnippet:y_+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),WE={kernelName:De,backendName:"webgl",kernelFunc:BE};class VE{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class UE{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const GE={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;zC(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;F(Wi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ai(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&z(l.inShape,l.outShape))return R_({inputs:{x:a},backend:n});const c=new VE(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},HE={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Ri(a.shape,s,i,[1,1,1],o,u,l),d=new UE(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class jE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const KE={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=Ri(i.shape,o,u,[1,1,1],l,c),p=new qE(d);return n.runWebGLProgram(p,[a],i.dtype)}},XE={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;zC([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Ai(i.shape,o,u,1,l),d=new jE(c);return n.runWebGLProgram(d,[a],i.dtype)}},YE={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return lE({a,b:s,transposeA:i,transposeB:o,backend:n})}};class ZE{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],go(e,t),go(e,n);let i="0.0";null!=r&&(go(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(go(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class JE{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],go(e,t),go(e,n);let i="vec4(0.0)";null!=r&&(go(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(go(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const QE={kernelName:_t,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;F(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let d=null;null!=o&&(d=o.shape,l.push(o));const p=ye().getBool("WEBGL_PACK_NORMALIZATION")?new JE(r.shape,a.shape,s.shape,c,d,u):new ZE(r.shape,a.shape,s.shape,c,d,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class eA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=t$(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return tA.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${tA[t]} = start[${t}] + coords.${tA[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const tA=["x","y","z","w","u","v"];class nA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=t$(this.rank),n=l_("coords",this.rank),r=l_("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function rA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=ci(a,s,i);if(Ys(a,o,u),0===L(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=K$(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=ui(a.shape,o,u);if(l||!c){const e=ye().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nA(u):new eA(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=li(t,ne(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const aA={kernelName:Bn,backendName:"webgl",kernelFunc:rA},sA={kernelName:We,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;F(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=mc(a.shape,s,o),l=gc(u.length,s.length),c=yc(a.shape,s,o),d=bc(i,s.length),p=xc(c,i,s.length),h=[],f=Z_({inputs:{x:a},backend:n,attrs:{shape:u}}),m=oE({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Z_({inputs:{x:m},backend:n,attrs:{shape:c}}),y=rA({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},iA={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=v$(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},oA={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=go(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},uA=G_({opSnippet:"return float(a != b);",cpuKernelImpl:V$,dtype:"bool"}),lA={kernelName:hn,backendName:"webgl",kernelFunc:uA};function cA(e){const{inputs:t,backend:n}=e,{input:r}=t;return R_({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const dA={kernelName:Sn,backendName:"webgl",kernelFunc:cA},pA={kernelName:Ge,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return R_({inputs:{x:s},backend:r});const t=tu(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=D_({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=cA({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!K(s.dtype,i)){const e=R_({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new g_(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",j("bool",1)),t=uA({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},hA="return ceil(x);",fA=U_({opSnippet:hA,packedOpSnippet:hA,cpuKernelImpl:I$}),mA={kernelName:He,backendName:"webgl",kernelFunc:fA};class gA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class yA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const bA={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=ye().getBool("WEBGL_PACK_CLIP")?new yA(a.shape):new gA(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};class xA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function wA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const vA={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new xA(r.shape),i=[wA(r,a.complexTensorInfos.real),wA(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class kA{constructor(e){this.outputShape=[],this.outputShape=dc(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class IA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=dc(e,t);const n=this.outputShape,r=n.length,a=t$(r),s=l_("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${NA(i,u,t)}),\n            vec2(${NA(l,u,t)}));\n        }`}const p=o.length,h=o[o.length-1];d+=`\n        return getChannel(\n          getT${p}(${NA(i,u,h)}),\n          vec2(${NA(l,u,h)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function NA(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function SA(e){const{inputs:t,backend:n}=e,{input:r}=t;return R_({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const TA={kernelName:Mt,backendName:"webgl",kernelFunc:SA};function CA(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>cA({inputs:{input:e},backend:n}))),a=e.map((e=>SA({inputs:{input:e},backend:n}))),s=CA(r,t,n),i=CA(a,t,n),o=D_({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=L(e.shape.slice(t));return Z_({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=dc(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=N$(s,i,r,o),l=dc(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>ye().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=CA(e.slice(0,r),t,n),s=CA(e.slice(r),t,n),i=CA([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(ye().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new IA(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=dc(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Z_({inputs:{x:e},attrs:{shape:[-1,L(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new kA(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=Z_({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function $A(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=G(a,t[0].shape)[0],i=dc(t.map((e=>e.shape)),s);if(0===L(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>L(e.shape)>0));return 1===o.length?R_({inputs:{x:o[0]},backend:n}):(cc(o.map((e=>e.shape)),s),CA(o,s,n))}const _A={kernelName:Xe,backendName:"webgl",kernelFunc:$A};class EA{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class AA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=i$(this.outputShape.length);const{dataFormat:n}=t,r=BC(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function FA({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,d=u[0]*u[1]*u[2],p=n.outChannels,h="channelsLast"===n.dataFormat,f=!1,m=!1;let g;const y=[];if((1!==d&&1!==p||!(c>1e3))&&l.isPacked&&h&&null!=l.texture&&u[2]%2!=0&&z(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,F(RC(l.shape,d.shape),(()=>`packed reshape ${l.shape} to ${d.shape} isn't free`));const h=Z_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(h);const b=lE({a:d,b:h,backend:r,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(b.dataId);F(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,x.shape=n.outShape,g=R_({inputs:{x:b},backend:r}),g.shape=n.outShape,y.push(b)}else{const l=Z_({inputs:{x:e},backend:r,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=Z_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=lE({a:l,b:c,transposeA:f,transposeB:m,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=Z_({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),y.push(l),y.push(c),y.push(d)}for(const e of y)r.disposeIntermediateTensorInfo(e);return g}function DA({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:d,outHeight:p,dataFormat:h}=n,f="channelsLast"===h,m=u*l*c,g=p*d,y=[m,g],b=[],x=Z_({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Z_({inputs:{x:t},backend:r,attrs:{shape:[1,m,L(t.shape)/m]}});b.push(x),b.push(w);const v=new RA(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(v,[x],"float32",k),N=Z_({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(N);const S=null!=a,T=null!=s,C="leakyrelu"===o,$=o?H_(o,!0):null,_=new j_(N.shape,w.shape,[1,g,n.outChannels],!0,!1,S,$,T,C),E=[N,w];if(a&&E.push(a),T&&E.push(s),C){const e=r.makeTensorInfo([],"float32",qr(i,"float32"));E.push(e),b.push(e)}const A=r.runWebGLProgram(_,E,"float32"),R=Z_({inputs:{x:A},backend:r,attrs:{shape:f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const OA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=Vi(u),p=Fi(a.shape,s.shape,i,l,o,c,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(ye().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])h=DA({x:a,filter:s,convInfo:p,backend:n});else{const e=new EA(p);h=n.runWebGLProgram(e,[a,s],"float32")}else h=FA({x:a,filter:s,convInfo:p,backend:n});const f=Z_({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class MA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BA={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=Vi(u),p=Fi(a.shape,c,i,1,o,l,!1,d),h=new MA(p);return n.runWebGLProgram(h,[a,s],"float32")}},WA={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=Vi(l),p=Fi(i,s.shape,o,1,u,c,!1,d),h=new LA(p);return n.runWebGLProgram(h,[a,s],"float32")}},VA={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Di(a.shape,s.shape,i,u,o),c=new AA(l);return n.runWebGLProgram(c,[a,s],"float32")}},UA={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=Di(a.shape,u,i,1,o),c=new zA(l);return n.runWebGLProgram(c,[a,s],"float32")}},GA={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=Di(u,s.shape,o,1,i),c=new PA(l);return n.runWebGLProgram(c,[a,s],"float32")}},HA=U_({opSnippet:V_+"\n  return cos(x);\n"}),jA={kernelName:nt,backendName:"webgl",kernelFunc:HA},qA=U_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),KA={kernelName:rt,backendName:"webgl",kernelFunc:qA};class XA{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const p="bilinear"===r?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,w]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const YA={kernelName:st,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new XA(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class ZA{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${JA(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${t$(r)} coords = getOutputCoords();\n        int end = ${QA(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${QA(r,"coords")} = idx;\n          val += getX(${JA(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function JA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function QA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const eR={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=qo([s],u);let c=a;null!=l&&(c=oE({inputs:{x:a},backend:n,attrs:{perm:l}}));const d=Xo(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=c.shape[d];let h=R_({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new ZA(c.shape,!1,o),r=[[e]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new ZA(c.shape,i,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=oE({inputs:{x:h},backend:n,attrs:{perm:Ko(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}},tR={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=v$(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=k$(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class nR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rR={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new nR("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};class aR{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=i$(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class sR{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=i$(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?A(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const iR={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),F(Wi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=Fi(a.shape,s.shape,i,c,o,l,!0);let p;p=ye().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new sR(d):new aR(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",h)}};class oR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lR={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,d=Fi(a.shape,c,i,o,u,l,!0),p=new oR(d);return n.runWebGLProgram(p,[a,s],"float32")}},cR={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,d=Fi(c,s.shape,i,o,u,l,!0),p=new uR(d);return n.runWebGLProgram(p,[a,s],"float32")}};class dR{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const pR={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=L(r.shape),i=Z_({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new dR(s),u=n.runWebGLProgram(o,[i],i.dtype),l=Z_({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class hR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const fR={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Ei(a.shape,s.shape,i,o,"NHWC",u);let c;const d=new hR(l);c=n.runWebGLProgram(d,[a,s],"float32");const p=Z_({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},mR={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Bc(a,s.length);Vc(i.length,u,s);const{path:l,steps:c}=Uc(o,u),d=c.length;let p=null,h=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Wc(h,u[t]);let a;Gc(e)?a=s[t]:(a=oE({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);z(a.shape,i)||(a=Z_({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=X_({inputs:{a,b:p},backend:n}),f.push(p))}e<d-1&&(l[e]>=0&&(p=sE({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},gR=U_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),yR={kernelName:yt,backendName:"webgl",kernelFunc:gR},bR={kernelName:bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=ye().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new A_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new __("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},xR=G_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:S$}),wR={kernelName:wt,backendName:"webgl",kernelFunc:xR},vR=U_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${kc};\n  float a1 = ${Ic};\n  float a2 = ${Nc};\n  float a3 = ${Sc};\n  float a4 = ${Tc};\n  float a5 = ${Cc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),kR={kernelName:xt,backendName:"webgl",kernelFunc:vR},IR="return exp(x);",NR=U_({opSnippet:IR,packedOpSnippet:IR,cpuKernelImpl:T$,dtype:"float32"}),SR={kernelName:vt,backendName:"webgl",kernelFunc:NR};function TR(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(F(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),Z_({inputs:{x:s},backend:r,attrs:{shape:o}})}const CR={kernelName:kt,backendName:"webgl",kernelFunc:TR},$R="return exp(x) - 1.0;",_R=U_({opSnippet:$R,packedOpSnippet:$R,cpuKernelImpl:C$}),ER={kernelName:It,backendName:"webgl",kernelFunc:_R};class AR{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function RR(e,t,n){const r=n.texData.get(e.dataId),a=L(e.shape),s=e.shape[e.shape.length-1],i=Z_({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new AR("real",o,t),l=new AR("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),h=D_({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const f=Z_({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(h),f}const FR={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return RR(r,!1,n)}};class DR{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function OR(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||Q(a),"string"===s){const e=q(s,L(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new DR(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const MR={kernelName:St,backendName:"webgl",kernelFunc:OR};class LR{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const zR={kernelName:Tt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new LR(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},PR="return floor(x);",BR=U_({opSnippet:PR,packedOpSnippet:PR,cpuKernelImpl:$$}),WR={kernelName:Ct,backendName:"webgl",kernelFunc:BR},VR=G_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),UR={kernelName:$t,backendName:"webgl",kernelFunc:VR};class GR{constructor(e){this.variableNames=["A"];const t=BC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class HR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=BC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const jR={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,s];(o||i)&&(null==qR&&(qR=document.createElement("canvas").getContext("2d")),qR.canvas.width=u,qR.canvas.height=l,qR.drawImage(a,0,0,u,l),a=qR.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=lC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const h=ye().getBool("WEBGL_PACK")?new HR(d):new GR(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}};let qR;const KR={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=Vi(c),g=Fi(a.shape,s.shape,u,d,l,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(ye().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=DA({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===h,u=h?H_(h,!1):null,l=new EA(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",qr(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=FA({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});const x=Z_({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},XR={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,f=[];let m=c;null==m&&(m=[1,1]),F(Wi(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Fi(a.shape,s.shape,u,m,l,d,!0),y=ye().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?H_(p,y):null,x=[a,s],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",qr(h,"float32"));x.push(e),f.push(e)}let I;I=y?new sR(g,w,b,v,k):new aR(g,w,b,v,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class YR{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=t$(t.length),a=t$(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const ZR={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=L(r.shape),[u,l,c,d]=Gs(r,a),p=Z_({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),h=Z_({inputs:{x:r},backend:n,attrs:{shape:[L(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=_$(e,t,r.dtype,l,i,c,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new YR(i,d,[l,c]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=Z_({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class JR{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=t$(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function QR(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=G(i,a.shape)[0],l=n.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];F(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const d=Xc(a,s,u,o),p=L(s.shape),h=[],f=Z_({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=Z_({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);const g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),r=E$(t,e,g);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d.outputShape,r.dtype,r.values)}const y=new JR(f.shape,g),b=n.runWebGLProgram(y,[f,m],f.dtype);h.push(b);const x=Z_({inputs:{x:b},backend:n,attrs:{shape:d.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const eF={kernelName:Et,backendName:"webgl",kernelFunc:QR},tF=G_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:A$,dtype:"bool"}),nF={kernelName:Rt,backendName:"webgl",kernelFunc:tF},rF=G_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:R$}),aF={kernelName:Ft,backendName:"webgl",kernelFunc:rF},sF={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return RR(r,!0,n)}},iF=U_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),oF={kernelName:Lt,backendName:"webgl",kernelFunc:iF},uF=U_({opSnippet:"return float(isinf(x));",dtype:"bool"}),lF={kernelName:zt,backendName:"webgl",kernelFunc:uF},cF=U_({opSnippet:"return float(isnan(x));",dtype:"bool"}),dF={kernelName:Pt,backendName:"webgl",kernelFunc:cF},pF=G_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:F$,dtype:"bool"}),hF={kernelName:Wt,backendName:"webgl",kernelFunc:pF},fF=G_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:D$,dtype:"bool"}),mF={kernelName:Vt,backendName:"webgl",kernelFunc:fF},gF={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=O$(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},yF=U_({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:M$}),bF={kernelName:Gt,backendName:"webgl",kernelFunc:yF},xF=U_({opSnippet:"return log(1.0 + x);"}),wF={kernelName:Ht,backendName:"webgl",kernelFunc:xF},vF=G_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),kF={kernelName:jt,backendName:"webgl",kernelFunc:vF},IF=U_({opSnippet:"return float(!(x >= 1.0));"}),NF={kernelName:qt,backendName:"webgl",kernelFunc:IF},SF=G_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),TF={kernelName:Kt,backendName:"webgl",kernelFunc:SF};class CF{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class $F{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const _F={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=ye().getBool("WEBGL_PACK_NORMALIZATION")?new $F(a.shape,s,i,o,u):new CF(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};class EF{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const AF={kernelName:Yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,d=new EF(a.shape,o,u,l,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function RF(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=G(s,a.shape);let l=u;const c=qo(l,o),d=null!=c,p=n.shouldExecuteOnCPU([a]);let h=a;if(d){if(p){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=i_(e,a.shape,a.dtype,c,t);h=n.makeTensorInfo(t,a.dtype),n.texData.get(h.dataId).values=r}else h=aE(a,c,n);l=Xo(l.length,o)}jo("max",l,o);const[f,m]=Go(h.shape,l);let g,y=f;if(i&&(y=Ho(f,u)),p){const e=n.texData.get(h.dataId).values,t=L$(e,L(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=L(t),s=Z_({inputs:{x:e},attrs:{shape:[L(e.shape)/a,a]},backend:r}),i=tE(s,e.dtype,"max",r),o=Z_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(h,m,y,n);return d&&n.disposeIntermediateTensorInfo(h),g}const FF={kernelName:Zt,backendName:"webgl",kernelFunc:RF},DF=G_({opSnippet:$_+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+E_+"\n  return result;\n",cpuKernelImpl:z$}),OF={kernelName:Jt,backendName:"webgl",kernelFunc:DF},MF={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;zC(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;F(Wi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ai(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&z(l.inShape,l.outShape))return R_({inputs:{x:a},backend:n});const c=new VE(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},LF={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Ri(a.shape,s,i,[1,1,1],o,l,u),d=new UE(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class zF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=u-1-e.padInfo.top,p=l-1-e.padInfo.left,h=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BF={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=Ri(i.shape,o,u,[1,1,1],l,c),p=new UE(d,"max",!0),h=n.runWebGLProgram(p,[i],i.dtype),f=new PF(d),m=n.runWebGLProgram(f,[a,h],i.dtype);return n.disposeIntermediateTensorInfo(h),m}},WF={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;zC([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=Ai(o.shape,u,l,1,c,d),h=new VE(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new zF(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},VF={kernelName:rn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;F(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];F(Wi(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=Ai(r.shape,a,s,l,i),[d,p]=function(e,t,n,r){let a=new VE(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new VE(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[d,p]}},UF={kernelName:an,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=G(s,r.shape);let l=u;const c=qo(l,o),d=null!=c,p=i.shouldExecuteOnCPU([r]),h=[];let f=r;if(d){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=i_(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=aE(r,c,i);h.push(f),l=Xo(l.length,o)}jo("sum",l,o);const[m,g]=Go(f.shape,l);let y=m;a&&(y=Ho(m,u));const b=function(e,t,n,r){const a=L(t),s=Z_({inputs:{x:e},attrs:{shape:[L(e.shape)/a,a]},backend:r}),i=tE(s,"float32","mean",r),o=Z_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of h)i.disposeIntermediateTensorInfo(e);return b}},GF={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=G(s,a.shape);let l=u;const c=qo(l,o);let d=a;null!=c&&(d=oE({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Xo(l.length,a.shape.length)),jo("min",l,o);const[p,h]=Go(d.shape,l),f=Z_({inputs:{x:d},backend:n,attrs:{shape:[-1,L(h)]}}),m=tE(f,f.dtype,"min",n);let g;return g=Z_(i?{inputs:{x:m},backend:n,attrs:{shape:Ho(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},HF=G_({opSnippet:$_+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+E_+"\n  return result;\n",cpuKernelImpl:P$}),jF={kernelName:on,backendName:"webgl",kernelFunc:HF};class qF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=t$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class KF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=t$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=l_("rc",r),u=l_("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const XF={kernelName:un,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=ye().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KF(r.shape,a,s):new qF(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},YF=G_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+E_+"\n  return result;\n"}),ZF={kernelName:ln,backendName:"webgl",kernelFunc:YF};class JF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const QF=G_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),eD={kernelName:mt,backendName:"webgl",kernelFunc:QF},tD="return a - b;",nD=G_({opSnippet:tD,packedOpSnippet:tD,supportsComplex:!0,cpuKernelImpl:r_}),rD={kernelName:ur,backendName:"webgl",kernelFunc:nD};function aD(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=G([s],a.shape),o=RF({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Ho(o.shape,i),l=Z_({inputs:{x:o},backend:n,attrs:{shape:u}}),c=nD({inputs:{a,b:l},backend:n}),d=NR({inputs:{x:c},backend:n}),p=sE({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),h=Z_({inputs:{x:p},backend:n,attrs:{shape:u}}),f=QF({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}const sD={kernelName:Yn,backendName:"webgl",kernelFunc:aD},iD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:aD({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new JF(l,c,s),p=[[i]],h=n.runWebGLProgram(d,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),h}},oD="return -x;",uD={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=W$(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=ye().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new k_(r.shape,oD):new g_(r.shape,oD),n.runWebGLProgram(a,[r],r.dtype)}},lD=pl,cD={kernelName:fn,backendName:"webgl",kernelFunc:function(e){pe("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=lD(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},dD=hl,pD={kernelName:mn,backendName:"webgl",kernelFunc:function(e){pe("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=dD(c,d,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},hD=fl,fD={kernelName:gn,backendName:"webgl",kernelFunc:function(e){pe("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),p=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=hD(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class mD{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const gD={kernelName:bn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=L(a.shape),l=new mD(u,s,i,o),c=Z_({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=Z_({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};function yD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=cA({inputs:{input:r},backend:n}),t=yD({inputs:{x:e},backend:n}),a=SA({inputs:{input:r},backend:n}),s=yD({inputs:{x:a},backend:n}),i=D_({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return OR({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const bD={kernelName:br,backendName:"webgl",kernelFunc:yD},xD={kernelName:yn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=cA({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=SA({inputs:{input:a},backend:r}),i=yD({inputs:{x:s},backend:r}),o=D_({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return OR({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},wD={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return TR({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(s,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=$A({inputs:t.map((e=>{const t=TR({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class vD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=t$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class kD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=t$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=l_("rc",r),u=l_("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const ID=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===L(a.shape))return OR({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});const o=ye().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kD(a.shape,s,i):new vD(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},ND={kernelName:wn,backendName:"webgl",kernelFunc:ID},SD=G_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+E_+"\n  return result;\n"}),TD={kernelName:vn,backendName:"webgl",kernelFunc:SD},CD={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=G(s,a.shape);let c=l;const d=qo(c,o);let p,h=a;if(null!=d&&(h=oE({inputs:{x:a},backend:n,attrs:{perm:d}}),c=Xo(c.length,o),u.push(h)),jo("prod",c,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:a}=U$(h.shape,h.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=Go(h.shape,c),r=L(t),s=Z_({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),i=tE(s,Sa(a.dtype),"prod",n);p=Z_({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(p);const e=Ho(p.shape,l);p=Z_({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},$D=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=G$(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},_D={kernelName:Nn,backendName:"webgl",kernelFunc:$D},ED=U_({opSnippet:"return 1.0 / x;"}),AD={kernelName:Tn,backendName:"webgl",kernelFunc:ED},RD=U_({opSnippet:y_+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FD={kernelName:Cn,backendName:"webgl",kernelFunc:RD},DD=U_({opSnippet:y_+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),OD={kernelName:Fn,backendName:"webgl",kernelFunc:DD};class MD{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class LD{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const zD={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=ye().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LD(a.shape,u,l,s,i):new MD(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};class PD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const BD={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new PD(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class WD{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class VD{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const UD={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=ye().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new VD(a.shape,u,l,s,i):new WD(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class GD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const HD={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new GD(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class jD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=t$(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class qD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=l_("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=t$(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const KD={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=G(s,a.shape);if(0===i)return R_({inputs:{x:a},backend:n});const u=ye().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qD(a.shape,o):new jD(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class XD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const YD={kernelName:vr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new XD(r.shape,s),[l,c]=fc(i,r.shape[1],r.shape[2]),d=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,d)}},ZD=U_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),JD={kernelName:On,backendName:"webgl",kernelFunc:ZD},QD=U_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:H$}),eO={kernelName:Mn,backendName:"webgl",kernelFunc:QD};class tO{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=t$(a.length),u=t$(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const nO={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=qs(0,a,i),p=[d/l,l];if(0===d)return n.makeTensorInfo(i,a.dtype);const h=Z_({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=Z_({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new tO(u,o,h.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),b=Z_({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class rO{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=t$(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const aO={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new rO(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Na(a.dtype,s.dtype))}},sO=U_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${wc};\n  float scale = ${vc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),iO={kernelName:Pn,backendName:"webgl",kernelFunc:sO},oO="return 1.0 / (1.0 + exp(-1.0 * x));",uO=U_({opSnippet:oO,packedOpSnippet:oO,cpuKernelImpl:j$}),lO={kernelName:Gn,backendName:"webgl",kernelFunc:uO},cO=U_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),dO={kernelName:Un,backendName:"webgl",kernelFunc:cO},pO=U_({opSnippet:V_+"\n  return sin(x);\n"}),hO={kernelName:Wn,backendName:"webgl",kernelFunc:pO},fO=U_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),mO={kernelName:Vn,backendName:"webgl",kernelFunc:fO},gO=U_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),yO={kernelName:Hn,backendName:"webgl",kernelFunc:gO},bO={kernelName:Kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;F(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=ID({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=mc(c.shape,s,o,!1),p=gc(d.length,s.length,!1),h=yc(c.shape,s,o,!1),f=Z_({inputs:{x:c},backend:n,attrs:{shape:d}}),m=oE({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Z_({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},xO={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,p,h,f,m]=X$(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},wO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=Y$(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},vO={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Z$(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},kO={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Z$(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},IO={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:d}=qs(0,a,o),p=new tO(l,u,a.shape.length,s.shape.length,c,[d,1],!1),h=n.runWebGLProgram(p,[s,a,i],s.dtype),f=Z_({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),f}},NO={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=G(i,a.shape)[0],u=jc(a,s,o),l=a.shape.length,c=new Array(l).fill(0),d=a.shape.slice();return u.map((e=>{const t=[...d];t[o]=e;const r=rA({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},SO="return sqrt(x);",TO=U_({opSnippet:SO,packedOpSnippet:SO,cpuKernelImpl:J$}),CO={kernelName:jn,backendName:"webgl",kernelFunc:TO},$O={kernelName:rr,backendName:"webgl",kernelFunc:U_({opSnippet:"return x * x;"})},_O="return (a - b) * (a - b);",EO=G_({opSnippet:_O,packedOpSnippet:_O}),AO={kernelName:nr,backendName:"webgl",kernelFunc:EO},RO={kernelName:xr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=y_+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new g_(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class FO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=t$(n.length),s=t$(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const DO={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=di(a.shape,s,i,o,u,l,c,d,p);let v;if(m)v=Z_({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){F(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Js(b,x,w),t=rA({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});v=Z_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=_s(a.shape,a.dtype,e),r=Q$(h,t,w,b);v=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new FO(b,w,h);v=n.runWebGLProgram(e,[a],a.dtype)}const k=Z_({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},OO={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=e_(p,h,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},MO={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=t_(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},LO={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=n_(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},zO=U_({opSnippet:"return tan(x);"}),PO={kernelName:lr,backendName:"webgl",kernelFunc:zO},BO=U_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),WO={kernelName:cr,backendName:"webgl",kernelFunc:BO};class VO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=t$(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function UO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Zr(e))):e,r=_s(a.shape,a.dtype,t),i=a_(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new VO(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const GO={kernelName:dr,backendName:"webgl",kernelFunc:UO};class HO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class jO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function qO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function KO(e){let t=1;for(;t<e;)t*=2;return t}const XO={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=ye().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=ye().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=s_(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,OR({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),p=null!==d&&d.isPacked,h=p?n.unpackTensor(a):a,f=L(l)/c,m=Z_({inputs:{x:h},attrs:{shape:[f,c]},backend:n});p&&qO(n,h);const g=KO(s),y=KO(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const a=x(),s=new HO(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),qO(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new jO([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),qO(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=rA({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),qO(n,v);let k=QR({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});qO(n,m);const I=l.slice(0,-1);I.push(s),v=b,b=Z_({inputs:{x:b},attrs:{shape:I},backend:n}),qO(n,v);const N=k;return k=Z_({inputs:{x:k},attrs:{shape:I},backend:n}),qO(n,N),[k,b]}};class YO{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const ZO={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,p,h]=a.shape,[f,m]=null!=l?l:[d,p],g=new YO(d,p,i,o,u,[c,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}},JO={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;zC(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=o_(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},QO={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=rA({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=Z_({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class eM{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const tM=[_F,AF,cE,pE,fE,gE,xE,kE,IE,NE,EE,AE,FE,OE,PE,LE,WE,HE,GE,KE,XE,YE,QE,sA,iA,oA,pA,mA,bA,vA,O_,_A,BA,WA,OA,UA,GA,VA,jA,KA,YA,eR,tR,rR,lR,cR,iR,pR,fR,mR,yR,bR,wR,kR,SR,CR,ER,FR,MR,zR,WR,UR,jR,KR,XR,ZR,eF,nF,aF,F_,sF,TA,oF,lF,dF,z_,hF,mF,gF,wF,bF,kF,NF,TF,FF,LF,MF,BF,WF,VF,OF,UF,GF,jF,XF,ZF,iD,Y_,uD,cD,pD,fD,lA,gD,xD,wD,ND,TD,W_,CD,_D,dA,eD,AD,OD,FD,J_,zD,BD,UD,HD,KD,YD,JD,eO,nO,aO,iO,lO,dO,hO,mO,aA,sD,yO,bO,xO,wO,vO,kO,IO,NO,CO,$O,AO,RO,DO,OO,MO,LO,rD,iE,PO,WO,GO,XO,ZO,uE,JO,QO,{kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=qo([l],o);let d=a;null!=c&&(d=oE({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(d),l=Xo(1,o)[0]);const p=Kc(d.shape,l,i),h=L([d.shape[l]]),f=Z_({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=Sa(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=qc(o,s),c=new eM({windowSize:l,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(c,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const p=$D({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=UO({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(h),g(d,t,h,a,s)},y=Z_({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=Ko(c);b=oE({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},bD];for(const e of tM)Er(e);var nM,rM,aM,sM;let iM;(rM=nM||(nM={}))[rM.float32=0]="float32",rM[rM.int32=1]="int32",rM[rM.bool=2]="bool",rM[rM.string=3]="string",rM[rM.complex64=4]="complex64",(sM=aM||(aM={}))[sM.linear=0]="linear",sM[sM.relu=1]="relu",sM[sM.relu6=2]="relu6",sM[sM.prelu=3]="prelu",sM[sM.leakyrelu=4]="leakyrelu",sM[sM.sigmoid=5]="sigmoid",sM[sM.elu=6]="elu";const oM={kernelName:kr,backendName:"wasm",setupFunc:function(e){iM=e.wasm.cwrap(kr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r,p=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=aM[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],x=a.shape[0],w=n.makeOutput([x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return iM(p,k,a.shape.length,h,I,s.shape.length,u,l,g,f,m,d||0,v),w}};function uM(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===L(i.shape)||n(s,nM[a.dtype],o),i}}}const lM=uM(ke);function cM(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:i}=a,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,d=null!=n?n:o.dtype,p=go(o.shape,u.shape),h=s.makeOutput(p,d);if(0===L(p))return h;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(h.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,nM[o.dtype],g);if(t&&"float32"===o.dtype)return y(),h;const b=fo(o.shape,p),x=fo(u.shape,p),w=b.every(((e,t)=>e===t)),v=x.every(((e,t)=>e===t));if(w&&v)return y(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}const dM=cM(Se,!0);let pM;const hM={kernelName:Te,backendName:"wasm",setupFunc:function(e){pM=e.wasm.cwrap(Te,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===L(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return pM(s,a.length,nM[r.dtype],i),r}};function fM(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const mM={kernelName:Dt,backendName:"wasm",kernelFunc:fM};let gM;function yM(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=fM({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(l.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return gM(c,h,u.shape.length,nM[u.dtype],d,p,s.length),l}const bM={kernelName:fr,backendName:"wasm",kernelFunc:yM,setupFunc:function(e){gM=e.wasm.cwrap(fr,null,["number","array","number","number","number","array","number"])}};function xM(e,t,n){const r=e.shape,a=e.shape.length,s=G(t,r);let i=s;const o=qo(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Xo(i.length,a),u=yM({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}let wM;const vM={kernelName:Ce,backendName:"wasm",setupFunc:function(e){wM=e.wasm.cwrap(Ce,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:p}=xM(i,a,t);p&&(u=l,o=t.dataIdMap.get(l.dataId).id),jo("all",c,u.shape.length);const[h,f]=Go(u.shape,c),m=L(f),g=t.makeOutput(h,i.dtype);if(0!==L(u.shape)){const e=t.dataIdMap.get(g.dataId).id;wM(o,m,e)}if(p&&t.disposeData(l.dataId),s){const e=Ho(g.shape,d);g.shape=e}return g}};let kM;const IM={kernelName:$e,backendName:"wasm",setupFunc:function(e){kM=e.wasm.cwrap($e,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:p}=xM(i,a,t);p&&(u=l,o=t.dataIdMap.get(l.dataId).id),jo("any",c,u.shape.length);const[h,f]=Go(u.shape,c),m=L(f),g=t.makeOutput(h,i.dtype);if(0!==L(u.shape)){const e=t.dataIdMap.get(g.dataId).id;kM(o,m,e)}if(p&&t.disposeData(l.dataId),s){const e=Ho(g.shape,d);g.shape=e}return g}};let NM;const SM={kernelName:_e,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:d}=xM(s,a,t);if(d){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const p=u.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=L(h.shape),g=u.shape[c[0]];return NM(o,nM[u.dtype],m,g,f),d&&t.disposeData(l.dataId),h},setupFunc:function(e){NM=e.wasm.cwrap(_e,null,["number","number","number","number","number"])}};let TM;const CM={kernelName:Me,backendName:"wasm",setupFunc:function(e){TM=e.wasm.cwrap(Me,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Ai(a.shape,i,o,1,u,l),d=c.filterHeight,p=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return TM(s,a.shape[0],a.shape[1],a.shape[2],d,p,h,f,m,g,y,b,x,v),w}};function $M(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=L(r.shape),i=U(a,s);return F(s===L(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}const _M={kernelName:$n,backendName:"wasm",kernelFunc:$M};let EM;const AM={kernelName:Be,backendName:"wasm",setupFunc:function(e){EM=e.wasm.cwrap(Be,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-1]:a.shape[u-2],h=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=L(f),y=L(m);F(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,h]);F(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,d]:[y,d,h],w=$M({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=$M({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(v.dataId).id,N=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],T=Math.max(g,y),C=n.makeOutput([T,N,S],w.dtype),$=n.dataIdMap.get(C.dataId).id,_=new Uint8Array(new Int32Array(w.shape).buffer),E=new Uint8Array(new Int32Array(v.shape).buffer);return EM(k,_,w.shape.length,I,E,v.shape.length,i,o,$),n.disposeData(w.dataId),n.disposeData(v.dataId),C.shape=b,C}};function RM(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=ci(t,n,r),o=ui(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=ne(t.shape),d=a.dataIdMap.get(l.dataId);if(o){const e=li(s,c);return"string"===t.dtype?d.stringBytes=u.slice(e,e+L(i)):a.typedArrayFromHeap(l).set(u.subarray(e,e+L(i))),l}if("string"===t.dtype){const e=Ik(u,s,i,t.shape,t.dtype);return d.stringBytes=e,l}const p=a.typedArrayFromHeap(l),h=t.shape.length;if(2===h)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],p,s,i);else if(3===h)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],p,s,i);else if(4===h)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],p=l+i[1],h=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<p;u++)for(let l=c;l<h;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],p,s,i);else{const e=Ik(u,s,i,t.shape,t.dtype);p.set(e)}return l}const FM={kernelName:Bn,backendName:"wasm",kernelFunc:RM},DM={kernelName:We,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),u=mc(a.shape,s,o),l=gc(u.length,s.length),c=yc(a.shape,s,o),d=bc(i,s.length),p=xc(c,i,s.length),h=$M({inputs:{x:a},backend:n,attrs:{shape:u}}),f=yM({inputs:{x:h},backend:n,attrs:{perm:l}}),m=RM({inputs:{x:$M({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),m}};function OM(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const MM={kernelName:Ge,backendName:"wasm",kernelFunc:OM},LM=uM(He);let zM;const PM={kernelName:je,backendName:"wasm",setupFunc:function(e){zM=e.wasm.cwrap(je,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return zM(o,s,i,l),u}};function BM(e){const{inputs:t,backend:n}=e,r=G(e.attrs.axis,t[0].shape)[0];let a=dc(t.map((e=>e.shape)),r);const s=t.filter((e=>L(e.shape)>0));if(1===s.length)return fM({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===L(a))return i;if(cc(s.map((e=>e.shape)),r),"string"===s[0].dtype){const e=s.map((e=>{const t=L(e.shape.slice(r));return $M({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=dc(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=Lk(o,a,t[0].dtype,u),c=dc(s.map((e=>e.shape)),r);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=Zc(l),e.forEach((e=>n.disposeData(e.dataId))),i}const o=L(s[0].shape.slice(0,r));let u=0;const l=s.map((e=>{const t=L(e.shape.slice(r));return u+=t,t})),c=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<o;e++){let t=e*u;for(let n=0;n<c.length;n++){const r=l[n],a=e*r,s=c[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}const WM={kernelName:Xe,backendName:"wasm",kernelFunc:BM};let VM;const UM={kernelName:Ye,backendName:"wasm",setupFunc:function(e){VM=e.wasm.cwrap(Ye,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d,dataFormat:p}=n,h=Vi(p),f=Fi(a.shape,s.shape,u,l,c,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(f.outShape,"float32"),_=r.dataIdMap.get($.dataId).id;return VM(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,C,v,k,I,N,S,T,_),$}};let GM;const HM={kernelName:Je,backendName:"wasm",setupFunc:function(e){GM=e.wasm.cwrap(Je,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,d=Vi(u),p=Fi(c,s.shape,i,1,o,l,!1,d),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=p,N=f-1-p.padInfo.top,S=m-1-p.padInfo.left,T="channelsLast"===p.dataFormat,C=ne(p.inShape),$=ne(a.shape),[_,E,A]=ne(s.shape),R=C[0],F=T?C[1]:C[2],D=T?C[2]:1,O=T?1:C[1],M=$[0],L=T?$[1]:$[2],z=T?$[2]:1,P=T?1:$[1],B=t.makeOutput(p.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return GM(V,U,h,f,m,y,b,g,w,v,x,k,I,N,S,_,E,A,R,F,D,O,M,L,z,P,W),B}},jM=uM(nt),qM=uM(rt);var KM,XM;let YM;(XM=KM||(KM={}))[XM.bilinear=0]="bilinear",XM[XM.nearest=1]="nearest";const ZM={kernelName:st,backendName:"wasm",setupFunc:function(e){YM=e.wasm.cwrap(st,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,p]=i,h=[c,d,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=OM({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(h,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return YM(g,y,b,c,v,d,p,KM[a],s,w),null!=f&&t.disposeData(f.dataId),x}};let JM;const QM={kernelName:at,backendName:"wasm",setupFunc:function(e){JM=e.wasm.cwrap(at,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;F("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=qo([s],u);let c=a;null!==l&&(c=yM({inputs:{x:a},attrs:{perm:l},backend:n}));const d=Xo(1,u)[0];jo("cumsum",[d],u);const p=n.makeOutput(c.shape,c.dtype),h=c.shape[d],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(p.dataId).id;JM(f,i?1:0,o?1:0,h,m,nM[a.dtype]);let g=p;return null!==l&&(g=yM({inputs:{x:p},attrs:{perm:Ko(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(p.dataId)),g}};let eL;const tL={kernelName:ot,backendName:"wasm",setupFunc:function(e){eL=e.wasm.cwrap(ot,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d="NHWC"===i?[o,u,l,c]:[o,c,u,l],p=t.makeOutput(d,"float32"),h=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(ne(a.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(ne(d)).buffer),y=t.dataIdMap.get(p.dataId).id;return eL(h,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,d.length,y),p}};let nL;const rL={kernelName:ut,backendName:"wasm",setupFunc:function(e){nL=e.wasm.cwrap(ut,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d}=n,p=null==l?[1,1]:l,h=Fi(a.shape,s.shape,u,p,c,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,w=h.dilationHeight,v=h.dilationWidth,k=h.strideHeight,I=h.strideWidth,N=h.inChannels,S=h.outChannels,T="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(h.outShape,"float32"),$=r.dataIdMap.get(C.dataId).id;return nL(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,N,S,$),C}},aL=uM(yt),sL=cM(wt,!1,"bool"),iL=uM(vt,"float32");function oL(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(F(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),$M({inputs:{x:a},backend:r,attrs:{shape:o}})}const uL={kernelName:kt,backendName:"wasm",kernelFunc:oL};function lL(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const cL={kernelName:St,backendName:"wasm",kernelFunc:lL};let dL;const pL={kernelName:Tt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return dL(s,o,u,l,c,i),a},setupFunc:function(e){dL=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number"])}},hL=uM(Ct),fL=cM($t,!1);let mL;const gL={kernelName:_t,backendName:"wasm",setupFunc:function(e){mL=e.wasm.cwrap(_t,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===L(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return mL(c,d,p,h,f,a,g),m}};let yL;const bL={kernelName:Ir,backendName:"wasm",setupFunc:function(e){yL=e.wasm.cwrap(Ir,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=Fi(a.shape,s.shape,u,c,l,p),g=aM[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,O=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const M=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(M.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return yL(y,F,D,O,b,v,k,w,I,N,S,T,R,C,$,_,E,A,x,g,z,f||0,L),M}};let xL;const wL={kernelName:Nr,backendName:"wasm",setupFunc:function(e){xL=e.wasm.cwrap(Nr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=Fi(a.shape,s.shape,u,c,l,p,!0),g=aM[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,O=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const M=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(M.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return xL(y,F,D,O,b,v,k,w,I,N,S,T,R,C,$,_,E,A,x,g,z,f||0,L),M}};let vL;const kL={kernelName:At,backendName:"wasm",setupFunc:function(e){vL=e.wasm.cwrap(At,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=Gs(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,d=c[c.length-1],p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return vL(p,nM[r.dtype],h,i,d,o,f,m),l}};let IL;const NL={kernelName:Et,backendName:"wasm",setupFunc:function(e){IL=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=G(i,a.shape)[0],l=t.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];F(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const d=Xc(a,s,u,o),p=$M({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=L(s.shape),f=$M({inputs:{x:s},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,a.dtype);if(0===L(a.shape))return g;const y=p.shape.length-1,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(ne(p.shape)).buffer),k=new Uint8Array(new Int32Array(ne(m)).buffer);return IL(b,nM[a.dtype],v,y,x,d.batchSize,k,w),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},SL=cM(Rt,!1,"bool"),TL=cM(Ft,!1,"bool");let CL;const $L={kernelName:Bt,backendName:"wasm",setupFunc:function(e){CL=e.wasm.cwrap(Bt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==L(t.shape)){const e=r.dataIdMap.get(s.dataId).id;CL(a,nM[t.dtype],n,e)}return s}},_L=cM(Wt,!1,"bool"),EL=cM(Vt,!1,"bool"),AL=uM(Gt),RL=cM(jt,!1,"bool");let FL;const DL={kernelName:Zt,backendName:"wasm",setupFunc:function(e){FL=e.wasm.cwrap(Zt,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:p}=xM(i,a,t);p&&(u=l,o=t.dataIdMap.get(l.dataId).id),jo("max",c,u.shape.length);const[h,f]=Go(u.shape,c),m=L(f),g=t.makeOutput(h,i.dtype);if(0!==L(u.shape)){const e=t.dataIdMap.get(g.dataId).id;FL(o,nM[i.dtype],m,e)}if(p&&t.disposeData(l.dataId),s){const e=Ho(g.shape,d);g.shape=e}return g}},OL=cM(Jt,!1);let ML;const LL={kernelName:Qt,backendName:"wasm",setupFunc:function(e){ML=e.wasm.cwrap(Qt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;F("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Ai(a.shape,i,o,1,u,l),d=c.filterHeight,p=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return ML(s,a.shape[0],a.shape[1],a.shape[2],d,p,h,f,m,g,y,b,x,w,v,k,N),I}};let zL;const PL={kernelName:an,backendName:"wasm",setupFunc:function(e){zL=e.wasm.cwrap(an,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=xM(i,a,t);let f=d;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Xo(f.length,l.shape.length))}jo("mean",f,l.shape.length);const[m,g]=Go(l.shape,f),y=L(g);let b=l;"float32"!==l.dtype&&(b=OM({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==L(l.shape)){const e=t.dataIdMap.get(x.dataId).id;zL(u,y,e)}if(h&&t.disposeData(c.dataId),s){const e=Ho(x.shape,p);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}};let BL;const WL={kernelName:sn,backendName:"wasm",setupFunc:function(e){BL=e.wasm.cwrap(sn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=xM(i,a,t);if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}jo("min",d,l.shape.length);const[f,m]=Go(l.shape,d),g=L(m),y=t.makeOutput(f,l.dtype);if(0!==L(l.shape)){const e=t.dataIdMap.get(y.dataId).id;BL(u,nM[i.dtype],g,e)}if(h&&t.disposeData(c.dataId),s){const e=Ho(y.shape,p);y.shape=e}return y}},VL=cM(on,!1);var UL,GL;let HL;(GL=UL||(UL={}))[GL.reflect=0]="reflect",GL[GL.symmetric=1]="symmetric";const jL={kernelName:un,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),d=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(d).buffer);return HL(i,l,t.shape.length,nM[t.dtype],p,h,UL[a],u),o},setupFunc:function(e){HL=e.wasm.cwrap(un,null,["number","array","number","number","array","array","number","number"])}},qL=cM(dn,!0),KL=uM(pn);function XL(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let YL;const ZL={kernelName:fn,backendName:"wasm",setupFunc:function(e){YL=e.wasm.cwrap(fn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=YL(l,c,s,a,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=XL(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};let JL;const QL={kernelName:mn,backendName:"wasm",setupFunc:function(e){JL=e.wasm.cwrap(mn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=JL(c,d,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=XL(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}};let ez;const tz={kernelName:gn,backendName:"wasm",setupFunc:function(e){ez=e.wasm.cwrap(gn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=ez(c,d,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=XL(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},nz=cM(hn,!1,"bool");let rz;const az={kernelName:bn,backendName:"wasm",setupFunc:function(e){rz=e.wasm.cwrap(bn,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return rz(c,s,i,o,l),u}},sz={kernelName:yn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},iz={kernelName:xn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return oL({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(s,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=BM({inputs:t.map((e=>{const t=oL({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}};let oz;const uz={kernelName:wn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===L(t.shape))return lL({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),d=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(d).buffer);return oz(i,l,t.shape.length,nM[t.dtype],p,h,a,u),o},setupFunc:function(e){oz=e.wasm.cwrap(wn,null,["number","array","number","number","array","array","number","number"])}},lz=cM(vn,!1);let cz;const dz={kernelName:kn,backendName:"wasm",setupFunc:function(e){cz=e.wasm.cwrap(kn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=OM({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(c.dataId).id;return cz(o,i,d),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};let pz;const hz={kernelName:In,backendName:"wasm",setupFunc:function(e){pz=e.wasm.cwrap(In,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=xM(i,a,t);let f=d;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Xo(f.length,l.shape.length))}jo("prod",f,l.shape.length);const[m,g]=Go(l.shape,f),y=L(g),b=t.makeOutput(m,l.dtype);if(0!==L(l.shape)){const e=t.dataIdMap.get(b.dataId).id;pz(u,y,nM[b.dtype],e)}if(h&&t.disposeData(c.dataId),s){const e=Ho(b.shape,p);b.shape=e}return b}},fz={kernelName:Nn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=PS(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},mz=cM(mt,!0),gz=uM(Cn),yz=uM(Fn);let bz;const xz={kernelName:An,backendName:"wasm",setupFunc:function(e){bz=e.wasm.cwrap(An,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,d,p,h]=a.shape,f=[c,u,l,h];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=OM({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===L(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return bz(y,c,d,p,h,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}};let wz;const vz={kernelName:Dn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=G(s,a.shape);if(0===a.shape.length)return fM({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);wz(u,c,i.length,d,a.shape.length,l);const p=$M({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){wz=e.wasm.cwrap(Dn,null,["number","array","number","array","number","number"])}};let kz;const Iz={kernelName:vr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[d,p,h,f]=a.shape,[m,g]=fc(o,p,h),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return kz(l,d,p,h,f,s,m,g,b,y.length,c),u},setupFunc:function(e){kz=e.wasm.cwrap(vr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Nz=uM(On),Sz=uM(Mn);let Tz;const Cz={kernelName:Ln,backendName:"wasm",setupFunc:function(e){Tz=e.wasm.cwrap(Ln,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===L(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=qs(0,a,i),h=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return Tz(h,f,nM[s.dtype],u,l,c,m,p,g),o}};let $z;const _z={kernelName:zn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,d=r.shape.length,p=a.shape.length,h=0===d||d>1||1===p?1:L(a.shape.slice(1));return $z(i,o,u,h,c),l},setupFunc:function(e){$z=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let Ez;const Az={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Ez=e.wasm.cwrap(Gn,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===L(a.shape)||Ez(r,s),a}},Rz=uM(Wn);let Fz;const Dz={kernelName:Yn,backendName:"wasm",setupFunc:function(e){Fz=e.wasm.cwrap(Yn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=L(n.shape)/o;return 0===L(s.shape)||Fz(a,i,o,u),s}},Oz={kernelName:Kn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=L(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=uz.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=mc(l.shape,s,o,!1),d=gc(c.length,s.length,!1),p=yc(l.shape,s,o,!1),h=$M({inputs:{x:l},backend:n,attrs:{shape:c}}),f=yM({inputs:{x:h},backend:n,attrs:{perm:d}}),m=$M({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(l.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}},Mz={kernelName:Xn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=G(i,a.shape)[0],u=jc(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=RM({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},Lz=uM(jn),zz=uM(rr),Pz=cM(nr,!0);let Bz;const Wz={kernelName:xr,backendName:"wasm",setupFunc:function(e){Bz=e.wasm.cwrap(xr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return Bz(i,a,nM[s.dtype],u),o}};let Vz;const Uz={kernelName:ar,backendName:"wasm",setupFunc:function(e){Vz=e.wasm.cwrap(ar,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=di(a.shape,s,i,o,u,l,c,d,p);let v;if(m)v=$M({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){F(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Js(b,x,w),n=RM({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});v=$M({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(h,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(ne(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(h).buffer),l=new Uint8Array(new Int32Array(ne(h)).buffer),c=t.dataIdMap.get(e.dataId).id;Vz(n,r,a.shape.length,s,i,o,u,l,h.length,c),v=$M({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return v}},Gz=cM(ur,!0);let Hz;const jz={kernelName:qn,backendName:"wasm",setupFunc:function(e){Hz=e.wasm.cwrap(qn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=xM(i,a,t);let f=d;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Xo(f.length,l.shape.length))}jo("sum",f,l.shape.length);const[m,g]=Go(l.shape,f),y=L(g),b=t.makeOutput(m,l.dtype);if(0!==L(l.shape)){const e=t.dataIdMap.get(b.dataId).id;Hz(u,y,nM[b.dtype],e)}if(h&&t.disposeData(c.dataId),s){const e=Ho(b.shape,p);b.shape=e}return b}},qz=uM(lr),Kz=uM(cr);let Xz,Yz,Zz;const Jz=[lM,dM,hM,vM,IM,SM,CM,AM,DM,MM,LM,PM,WM,UM,HM,jM,qM,ZM,QM,tL,rL,aL,sL,iL,uL,cL,pL,hL,fL,oM,gL,bL,wL,kL,NL,SL,TL,mM,$L,_L,EL,AL,RL,DL,OL,LL,PL,WL,VL,jL,qL,KL,ZL,QL,tz,nz,az,sz,iz,uz,lz,dz,hz,fz,mz,gz,yz,_M,xz,vz,Iz,Sz,Nz,Cz,_z,Az,Rz,FM,Dz,Oz,Mz,Lz,zz,Pz,Wz,Uz,Gz,jz,qz,Kz,{kernelName:dr,backendName:"wasm",setupFunc:function(e){Xz=e.wasm.cwrap(dr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(c.dataId).id;return Xz(s,u,a.shape.length,l,o.length,nM[c.dtype],d),c}},{kernelName:pr,backendName:"wasm",setupFunc:function(e){Yz=e.wasm.cwrap(pr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,d=t.makeOutput(u,"int32"),p=t.dataIdMap.get(d.dataId).id;return Yz(i,o,r.shape.length,nM[r.dtype],a,s,c,p),[l,d]}},{kernelName:hr,backendName:"wasm",setupFunc:function(e){Zz=e.wasm.cwrap(hr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,p,h]=a.shape,[f,m]=null!=l?l:[d,p],g=[c,f,m,h],y=new Uint8Array(new Int32Array(ne(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(a.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return Zz(w,v,s.shape[0]>1,c,f,m,h,p,d,y,a.shape.length-1,k,I,u,x),b}},bM,{kernelName:gr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=RM({inputs:{x:a},attrs:{begin:d,size:p},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:br,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of Jz)Er(e);const Qz=ye();Qz.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Qz.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Qz.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var eP=n(417),tP=n.n(eP),nP=n(805),rP=n.n(nP);class aP extends C{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(hP),fP=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new T(this,gi())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=Xr();return e(),{kernelMs:Xr()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=L(n),o=i*Y(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+L(r)*Y(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=L(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=L(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}}function sP(e,t,n){if(null!=uP)return uP;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=cP&&null!=cP[r]?cP[r]:n+r}async function iP(){const[e,t]=await Promise.all([ye().getAsync("WASM_HAS_SIMD_SUPPORT"),ye().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?sP(e,t,null!=lP?lP:r):r+n},pP&&(a.instantiateWasm=(s=sP(e,t,null!=lP?lP:""),(e,t)=>(function(e,t){return ye().platform.fetch(e,t)}(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||dP||(dP=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==uP?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+tP().toString()],{type:"text/javascript"}),i=tP()(a)):i=rP()(a),i.then((e=>{o=!0,dP=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}const oP=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let uP=null,lP=null,cP={},dP=!1,pP=!1,hP=-1,fP=null;function mP(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function gP(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}vi("wasm",(async()=>{const{wasm:e}=await iP();return new aP(e)}),2);var yP=function(e){return{startEndTensor:e,startPoint:gu(e,[0,0],[-1,2]),endPoint:gu(e,[0,2],[-1,2])}},bP={strides:[8,16],anchors:[2,6]};function xP(e,t){var n,r,a;if(e.topLeft instanceof ca&&e.bottomRight instanceof ca){var s=bi((function(){return[Zi([gu(Ro(t-1,e.topLeft),0,1),gu(e.topLeft,1,1)]),Zi([Ro(t-1,gu(e.bottomRight,0,1)),gu(e.bottomRight,1,1)])]}));n=s[0],r=s[1],null!=e.landmarks&&(a=bi((function(){var n=Ro($u([t-1,0]),e.landmarks),r=$u([1,-1]);return Ao(n,r)})))}else{var i=e.topLeft,o=i[0],u=i[1],l=e.bottomRight,c=l[0],d=l[1];n=[t-1-o,u],r=[t-1-c,d],null!=e.landmarks&&(a=e.landmarks.map((function(e){return[t-1-e[0],e[1]]})))}var p={topLeft:n,bottomRight:r};return null!=a&&(p.landmarks=a),null!=e.probability&&(p.probability=e.probability instanceof ca?e.probability.clone():e.probability),p}function wP(e,t){return bi((function(){var n;return n=e.hasOwnProperty("box")?e.box:e,Su(function(e,t){var n=Ao(e.startPoint,t),r=Ao(e.endPoint,t),a=Qi([n,r],1);return yP(a)}(n,t).startEndTensor)}))}var vP=function(){function e(e,t,n,r,a,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){for(var r=[],a=0;a<n.strides.length;a++)for(var s=n.strides[a],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),u=n.anchors[a],l=0;l<i;l++)for(var c=s*(l+.5),d=0;d<o;d++)for(var p=s*(d+.5),h=0;h<u;h++)r.push([p,c]);return r}(t,n,bP),this.anchors=_u(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=$u([t,n]),this.iouThreshold=a,this.scoreThreshold=s}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),mP(this,void 0,void 0,(function(){var r,a,s,i,o,u,l,c,d,p,h,f,m,g,y=this;return gP(this,(function(b){switch(b.label){case 0:return r=bi((function(){var t=Xl.resizeBilinear(e,[y.width,y.height]),n=Ao(Ro(po(t,255),.5),2),r=y.blazeFaceModel.predict(n),a=Su(r),s=function(e,t,n){var r=gu(e,[0,1],[-1,2]),a=Ti(r,t),s=gu(e,[0,3],[-1,2]),i=po(s,n),o=po(a,n),u=po(i,2),l=Ro(o,u),c=Ti(o,u),d=Ao(l,n),p=Ao(c,n);return Qi([d,p],1)}(a,y.anchors,y.inputSize),i=gu(a,[0,0],[-1,1]);return[a,s,Su(mu(i))]})),a=r[0],s=r[1],i=r[2],o=console.warn,console.warn=function(){},u=Xl.nonMaxSuppression(s,i,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=o,[4,u.array()];case 1:return l=b.sent(),u.dispose(),c=l.map((function(e){return gu(s,[e,0],[1,-1])})),t?[3,3]:[4,Promise.all(c.map((function(e){return mP(y,void 0,void 0,(function(){var t;return gP(this,(function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}}))}))})))];case 2:c=b.sent(),b.label=3;case 3:for(d=e.shape[1],p=e.shape[2],h=t?po([p,d],this.inputSize):[p/this.inputSizeData[0],d/this.inputSizeData[1]],f=[],m=function(e){var r=c[e],s=bi((function(){var s=yP(r instanceof ca?r:_u(r));if(!n)return s;var o,u=l[e];return o=t?gu(y.anchors,[u,0],[1,2]):y.anchorsData[u],{box:s,landmarks:Ui(Su(gu(a,[u,5],[1,-1])),[6,-1]),probability:gu(i,[u],[1]),anchor:o}}));f.push(s)},g=0;g<c.length;g++)m(g);return s.dispose(),i.dispose(),a.dispose(),[2,{boxes:f,scaleFactor:h}]}}))}))},e.prototype.estimateFaces=function(e,t,n,r){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===r&&(r=!0),mP(this,void 0,void 0,(function(){var a,s,i,o,u,l,c=this;return gP(this,(function(d){switch(d.label){case 0:return a=function(e){return e instanceof ca?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=a[1],i=bi((function(){return e instanceof ca||(e=Us(e)),xo(Es(e,"float32"),0)})),[4,this.getBoundingBoxes(i,t,r)];case 1:return o=d.sent(),u=o.boxes,l=o.scaleFactor,i.dispose(),t?[2,u.map((function(e){var t=wP(e,l),a={topLeft:gu(t,[0],[2]),bottomRight:gu(t,[2],[2])};if(r){var i=e,o=i.landmarks,u=i.probability,c=i.anchor,d=Ao(Ti(o,c),l);a.landmarks=d,a.probability=u}return n&&(a=xP(a,s)),a}))]:[2,Promise.all(u.map((function(e){return mP(c,void 0,void 0,(function(){var t,a,i,o,u,c,d,p,h,f,m,g=this;return gP(this,(function(y){switch(y.label){case 0:return t=wP(e,l),r?[3,2]:[4,t.array()];case 1:return u=y.sent(),a={topLeft:u.slice(0,2),bottomRight:u.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map((function(e){return mP(g,void 0,void 0,(function(){return gP(this,(function(t){return[2,e.array()]}))}))})))];case 3:i=y.sent(),o=i[0],u=i[1],c=i[2],d=e.anchor,h=(p=l)[0],f=p[1],m=o.map((function(e){return[(e[0]+d[0])*h,(e[1]+d[1])*f]})),a={topLeft:u.slice(0,2),bottomRight:u.slice(2),landmarks:m,probability:c},function(e){e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()}(e.box),e.landmarks.dispose(),e.probability.dispose(),y.label=4;case 4:return t.dispose(),n&&(a=xP(a,s)),[2,a]}}))}))})))]}}))}))},e}(),kP=n(238),IP=n.n(kP);let NP,SP,TP;!function(e,t=!1){if(dP)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)lP=e;else{cP=e;const t=oP.filter((e=>null==cP[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}pP=t}({"tfjs-backend-wasm.wasm":`${S.STATIC_ASSETS_BASE_URL}wasm-store/tf/tfjs-backend-wasm.wasm`,"tfjs-backend-wasm-simd.wasm":`${S.STATIC_ASSETS_BASE_URL}wasm-store/tf/tfjs-backend-wasm-simd.wasm`,"tfjs-backend-wasm-threaded-simd.wasm":`${S.STATIC_ASSETS_BASE_URL}wasm-store/tf/tfjs-backend-wasm-threaded-simd.wasm`});let CP,$P,_P,EP,AP,RP,FP,DP,OP,MP,LP,zP=null,PP=!0;const BP=async()=>{if(PP)return;MP.drawImage(DP,0,0),_P.drawImage(DP,LP.x,LP.y,LP.width,LP.height,0,0,300,400);const e=await(async e=>{let t,n,r,a,s,i,o,u;if(performance.now(),o=e.data,gi().startScope(),s=Us(e),i=await TP.estimateFaces(s,!1,!1,!1),!TP)return gi().endScope(),void qP();if(0===i.length)return gi().endScope(),{faceFound:!1,far:!1,close:!1,noSufficientLite:!1,misAligned:!1,outsideGuide:!1};if(t=parseInt(i[0].topLeft[0]),n=parseInt(i[0].topLeft[1]),r=parseInt(i[0].bottomRight[0]),a=parseInt(i[0].bottomRight[1]),t<=0||r>=FP||n<=0||a>=RP)return gi().endScope(),{faceFound:!1,far:!1,close:!1,noSufficientLite:!1,misAligned:!1,outsideGuide:!1};t=t<0?0:t,n=n<0?0:n,r=r>FP?FP-1:r,a=a>RP?RP-1:a,[u]=bi((()=>{const e=po(s,255).slice([n,t],[a-n,r-t]),i=Xl.resizeBilinear(e,[112,112]).expandDims(0);let o=SP.predict(i).squeeze(0).reshape([106,2]),[u,l]=Iu(o,2,1);u=Ti(Ao(u,e.shape[1]),t).asType("float32"),l=Ti(Ao(l,e.shape[0]),n).asType("float32");const c=Zi([u,l],1);return[new Float32Array(c.reshape([106,2]).dataSync().buffer)]})),null===zP&&(zP=NP._malloc(o.length),CP=NP._malloc(u.length*u.BYTES_PER_ELEMENT)),NP.HEAPU8.set(o,zP),NP.HEAPF32.set(u,CP>>2);const l=NP.verify_image(zP,FP,RP,CP,AP.tx,AP.ty,AP.bx,AP.by),c={faceFound:!0,far:l.too_far,close:l.too_close,noSufficientLite:l.light,misAligned:!0===l.orientation,outsideGuide:l.outsideGuide};return gi().endScope(),performance.now(),c})(_P.getImageData(0,0,300,400));PP||(EP(e),requestAnimationFrame(BP))},WP=function(){return $P||($P=new Promise(((e,t)=>{UP().then((()=>async function(){await VP()}())).then((()=>{e()})).catch((()=>{$P=null,t()}))})),$P)};let VP=async()=>{TP&&SP||await Promise.all([HP(),GP()]).then((([e,t])=>(TP=e,SP=t,Promise.resolve())))};const UP=async function(){return new Promise((async(e,t)=>(await Da.setBackend("wasm"),await Da.ready(),NP={onRuntimeInitialized:()=>e(),onStatus:e=>console.log(e),onExit:()=>console.log("wasm exit"),locateFile:e=>(console.log("locateFile: ",e),S.ASSETS_BASE_URL+e)},ye().set("PROD",!0),IP()(NP))))},GP=()=>{let e=NP.getSc(),t=JSON.parse(new TextDecoder("utf-8").decode(e));const n={signature:t.userDefinedMetaData.signature};return Nw(function(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ws(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ws({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ws({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}({modelTopology:t.modelTopology,weightSpecs:t.weightsManifest,weightData:function(e){for(var t=window.atob(e),n=t.length,r=new Uint8Array(n),a=0;a<n;a++)r[a]=t.charCodeAt(a);return r.buffer}(new TextDecoder("utf-8").decode(NP.getW())),userDefinedMetadata:n}))},HP=()=>function(e){var t=void 0===e?{}:e,n=t.maxFaces,r=void 0===n?10:n,a=t.inputWidth,s=void 0===a?128:a,i=t.inputHeight,o=void 0===i?128:i,u=t.iouThreshold,l=void 0===u?.3:u,c=t.scoreThreshold,d=void 0===c?.75:c,p=t.modelUrl;return mP(this,void 0,void 0,(function(){var e;return gP(this,(function(t){switch(t.label){case 0:return null==p?[3,2]:[4,Nw(p)];case 1:return e=t.sent(),[3,4];case 2:return[4,Nw("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new vP(e,s,o,r,l,d)]}}))}))}({maxFaces:1,modelUrl:`${S.STATIC_ASSETS_BASE_URL}wasm-store/blazeface/model.json`}),jP=()=>{PP=!0},qP=()=>{jP(),null!==zP&&(NP._free(zP),zP=null),null!==CP&&(NP._free(CP),CP=null),SP&&(SP.dispose(),SP=null),TP&&(TP.blazeFaceModel.dispose(),TP.anchors.dispose(),TP.inputSize.dispose(),TP=null),NP&&(NP=null),$P&&($P=null),Da.disposeVariables(),_P=void 0,EP=void 0,AP=void 0,RP=void 0,FP=void 0,DP=void 0,OP=void 0,MP=void 0,LP=void 0,console.log("Smart Capture stopped "+yi().numTensors)};class KP{static CONTAINER_MISSING={code:1,message:"Container is missing."};static SDK_NOT_INITIALIZED={code:2,message:"SDK not initialized."};static IMAGE_NOT_PROVIDED={code:3,message:"Image not provided."};static API_ERROR={code:4,message:"API error."};static CAMERA_NOT_FOUND={code:5,message:"Camera not found."};static APP_INIT_ISSUE={code:6,message:"App initialization issue."};static REQUEST_CANCELLED={code:7,message:"Request cancelled."}}const XP={context:void 0,registry:void 0,effects:void 0,done:!1,getContextId(){return YP(this.context.count)},getNextContextId(){return YP(this.context.count++)}};function YP(e){const t=String(e),n=t.length-1;return XP.context.id+(n?String.fromCharCode(96+n):"")+t}const ZP=(Symbol("solid-proxy"),Symbol("solid-track"),Symbol("solid-dev-component"),{equals:(e,t)=>e===t});let JP=NB;const QP=1,eB=2,tB={owned:null,cleanups:null,context:null,owner:null};var nB=null;let rB=null,aB=null,sB=null,iB=null,oB=null,uB=null,lB=0;function cB(e,t){const n={value:e,observers:null,observerSlots:null,comparator:(t=t?Object.assign({},ZP,t):ZP).equals||void 0};return[yB.bind(n),e=>("function"==typeof e&&(e=rB&&rB.running&&rB.sources.has(n)?e(n.tValue):e(n.value)),bB(n,e))]}function dB(e,t,n){const r=vB(e,t,!1,QP);aB&&rB&&rB.running?oB.push(r):xB(r)}function pB(e,t,n){n=n?Object.assign({},ZP,n):ZP;const r=vB(e,t,!0,0);return r.observers=null,r.observerSlots=null,r.comparator=n.equals||void 0,aB&&rB&&rB.running?(r.tState=QP,oB.push(r)):xB(r),yB.bind(r)}function hB(e){if(!sB&&null===iB)return e();const t=iB;iB=null;try{return sB?sB.untrack(e):e()}finally{iB=t}}const[fB,mB]=cB(!1);let gB;function yB(){const e=rB&&rB.running;if(this.sources&&(e?this.tState:this.state))if((e?this.tState:this.state)===QP)xB(this);else{const e=oB;oB=null,IB((()=>SB(this)),!1),oB=e}if(iB){const e=this.observers?this.observers.length:0;iB.sources?(iB.sources.push(this),iB.sourceSlots.push(e)):(iB.sources=[this],iB.sourceSlots=[e]),this.observers?(this.observers.push(iB),this.observerSlots.push(iB.sources.length-1)):(this.observers=[iB],this.observerSlots=[iB.sources.length-1])}return e&&rB.sources.has(this)?this.tValue:this.value}function bB(e,t,n){let r=rB&&rB.running&&rB.sources.has(e)?e.tValue:e.value;if(!e.comparator||!e.comparator(r,t)){if(rB){const r=rB.running;(r||!n&&rB.sources.has(e))&&(rB.sources.add(e),e.tValue=t),r||(e.value=t)}else e.value=t;e.observers&&e.observers.length&&IB((()=>{for(let t=0;t<e.observers.length;t+=1){const n=e.observers[t],r=rB&&rB.running;r&&rB.disposed.has(n)||((r?n.tState:n.state)||(n.pure?oB.push(n):uB.push(n),n.observers&&TB(n)),r?n.tState=QP:n.state=QP)}if(oB.length>1e6)throw oB=[],new Error}),!1)}return t}function xB(e){if(!e.fn)return;CB(e);const t=lB;wB(e,rB&&rB.running&&rB.sources.has(e)?e.tValue:e.value,t),rB&&!rB.running&&rB.sources.has(e)&&queueMicrotask((()=>{IB((()=>{rB&&(rB.running=!0),iB=nB=e,wB(e,e.tValue,t),iB=nB=null}),!1)}))}function wB(e,t,n){let r;const a=nB,s=iB;iB=nB=e;try{r=e.fn(t)}catch(t){return e.pure&&(rB&&rB.running?(e.tState=QP,e.tOwned&&e.tOwned.forEach(CB),e.tOwned=void 0):(e.state=QP,e.owned&&e.owned.forEach(CB),e.owned=null)),e.updatedAt=n+1,_B(t)}finally{iB=s,nB=a}(!e.updatedAt||e.updatedAt<=n)&&(null!=e.updatedAt&&"observers"in e?bB(e,r,!0):rB&&rB.running&&e.pure?(rB.sources.add(e),e.tValue=r):e.value=r,e.updatedAt=n)}function vB(e,t,n,r=QP,a){const s={fn:e,state:r,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:t,owner:nB,context:nB?nB.context:null,pure:n};if(rB&&rB.running&&(s.state=0,s.tState=r),null===nB||nB!==tB&&(rB&&rB.running&&nB.pure?nB.tOwned?nB.tOwned.push(s):nB.tOwned=[s]:nB.owned?nB.owned.push(s):nB.owned=[s]),sB&&s.fn){const[e,t]=cB(void 0,{equals:!1}),n=sB.factory(s.fn,t);!function(e){null===nB||(null===nB.cleanups?nB.cleanups=[e]:nB.cleanups.push(e))}((()=>n.dispose()));const r=()=>function(e){if(rB&&rB.running)return e(),rB.done;const t=iB,n=nB;return Promise.resolve().then((()=>{let r;return iB=t,nB=n,(aB||gB)&&(r=rB||(rB={sources:new Set,effects:[],promises:new Set,disposed:new Set,queue:new Set,running:!0}),r.done||(r.done=new Promise((e=>r.resolve=e))),r.running=!0),IB(e,!1),iB=nB=null,r?r.done:void 0}))}(t).then((()=>a.dispose())),a=sB.factory(s.fn,r);s.fn=t=>(e(),rB&&rB.running?a.track(t):n.track(t))}return s}function kB(e){const t=rB&&rB.running;if(0===(t?e.tState:e.state))return;if((t?e.tState:e.state)===eB)return SB(e);if(e.suspense&&hB(e.suspense.inFallback))return e.suspense.effects.push(e);const n=[e];for(;(e=e.owner)&&(!e.updatedAt||e.updatedAt<lB);){if(t&&rB.disposed.has(e))return;(t?e.tState:e.state)&&n.push(e)}for(let r=n.length-1;r>=0;r--){if(e=n[r],t){let t=e,a=n[r+1];for(;(t=t.owner)&&t!==a;)if(rB.disposed.has(t))return}if((t?e.tState:e.state)===QP)xB(e);else if((t?e.tState:e.state)===eB){const t=oB;oB=null,IB((()=>SB(e,n[0])),!1),oB=t}}}function IB(e,t){if(oB)return e();let n=!1;t||(oB=[]),uB?n=!0:uB=[],lB++;try{const t=e();return function(e){if(oB&&(aB&&rB&&rB.running?function(e){for(let t=0;t<e.length;t++){const n=e[t],r=rB.queue;r.has(n)||(r.add(n),aB((()=>{r.delete(n),IB((()=>{rB.running=!0,kB(n)}),!1),rB&&(rB.running=!1)})))}}(oB):NB(oB),oB=null),e)return;let t;if(rB)if(rB.promises.size||rB.queue.size){if(rB.running)return rB.running=!1,rB.effects.push.apply(rB.effects,uB),uB=null,void mB(!0)}else{const e=rB.sources,n=rB.disposed;uB.push.apply(uB,rB.effects),t=rB.resolve;for(const e of uB)"tState"in e&&(e.state=e.tState),delete e.tState;rB=null,IB((()=>{for(const e of n)CB(e);for(const t of e){if(t.value=t.tValue,t.owned)for(let e=0,n=t.owned.length;e<n;e++)CB(t.owned[e]);t.tOwned&&(t.owned=t.tOwned),delete t.tValue,delete t.tOwned,t.tState=0}mB(!1)}),!1)}const n=uB;uB=null,n.length&&IB((()=>JP(n)),!1),t&&t()}(n),t}catch(e){n||(uB=null),oB=null,_B(e)}}function NB(e){for(let t=0;t<e.length;t++)kB(e[t])}function SB(e,t){const n=rB&&rB.running;n?e.tState=0:e.state=0;for(let r=0;r<e.sources.length;r+=1){const a=e.sources[r];if(a.sources){const e=n?a.tState:a.state;e===QP?a!==t&&(!a.updatedAt||a.updatedAt<lB)&&kB(a):e===eB&&SB(a,t)}}}function TB(e){const t=rB&&rB.running;for(let n=0;n<e.observers.length;n+=1){const r=e.observers[n];(t?r.tState:r.state)||(t?r.tState=eB:r.state=eB,r.pure?oB.push(r):uB.push(r),r.observers&&TB(r))}}function CB(e){let t;if(e.sources)for(;e.sources.length;){const t=e.sources.pop(),n=e.sourceSlots.pop(),r=t.observers;if(r&&r.length){const e=r.pop(),a=t.observerSlots.pop();n<r.length&&(e.sourceSlots[a]=n,r[n]=e,t.observerSlots[n]=a)}}if(e.tOwned){for(t=e.tOwned.length-1;t>=0;t--)CB(e.tOwned[t]);delete e.tOwned}if(rB&&rB.running&&e.pure)$B(e,!0);else if(e.owned){for(t=e.owned.length-1;t>=0;t--)CB(e.owned[t]);e.owned=null}if(e.cleanups){for(t=e.cleanups.length-1;t>=0;t--)e.cleanups[t]();e.cleanups=null}rB&&rB.running?e.tState=0:e.state=0}function $B(e,t){if(t||(e.tState=0,rB.disposed.add(e)),e.owned)for(let t=0;t<e.owned.length;t++)$B(e.owned[t])}function _B(e,t=nB){const n=function(e){return e instanceof Error?e:new Error("string"==typeof e?e:"Unknown error",{cause:e})}(e);throw n}Symbol("fallback");function EB(e){const t=e.keyed,n=pB((()=>e.when),void 0,{equals:(e,n)=>t?e===n:!e==!n});return pB((()=>{const r=n();if(r){const a=e.children;return"function"==typeof a&&a.length>0?hB((()=>a(t?r:()=>{if(!hB(n))throw`Stale read from <${"Show"}>.`;return e.when}))):a}return e.fallback}),void 0,void 0)}Object.create(null),Object.create(null);const AB="_$DX_DELEGATE";function RB(e,t,n,r={}){let a;return function(e,t){const n=iB,r=nB,a=0===e.length,s=void 0===t?r:t,i=a?tB:{owned:null,cleanups:null,context:s?s.context:null,owner:s},o=a?e:()=>e((()=>hB((()=>CB(i)))));nB=i,iB=null;try{return IB(o,!0)}finally{iB=n,nB=r}}((r=>{a=r,t===document?e():LB(t,e(),t.firstChild?null:void 0,n)}),r.owner),()=>{a(),t.textContent=""}}function FB(e,t,n){let r;const a=()=>{const t=document.createElement("template");return t.innerHTML=e,n?t.content.firstChild.firstChild:t.content.firstChild},s=t?()=>hB((()=>document.importNode(r||(r=a()),!0))):()=>(r||(r=a())).cloneNode(!0);return s.cloneNode=s,s}function DB(e,t){zB(e)||(null==t?e.removeAttribute("class"):e.className=t)}function OB(e,t,n,r){if(r)Array.isArray(n)?(e[`$$${t}`]=n[0],e[`$$${t}Data`]=n[1]):e[`$$${t}`]=n;else if(Array.isArray(n)){const r=n[0];e.addEventListener(t,n[0]=t=>r.call(e,n[1],t))}else e.addEventListener(t,n,"function"!=typeof n&&n)}function MB(e,t,n){return hB((()=>e(t,n)))}function LB(e,t,n,r){if(void 0===n||r||(r=[]),"function"!=typeof t)return BB(e,t,r,n);dB((r=>BB(e,t(),r,n)),r)}function zB(e){return!!XP.context&&!XP.done&&(!e||e.isConnected)}function PB(e){if(XP.registry&&XP.events&&XP.events.find((([t,n])=>n===e)))return;let t=e.target;const n=`$$${e.type}`,r=e.target,a=e.currentTarget,s=t=>Object.defineProperty(e,"target",{configurable:!0,value:t}),i=()=>{const r=t[n];if(r&&!t.disabled){const a=t[`${n}Data`];if(void 0!==a?r.call(t,a,e):r.call(t,e),e.cancelBubble)return}return t.host&&"string"!=typeof t.host&&!t.host._$host&&t.contains(e.target)&&s(t.host),!0},o=()=>{for(;i()&&(t=t._$host||t.parentNode||t.host););};if(Object.defineProperty(e,"currentTarget",{configurable:!0,get:()=>t||document}),XP.registry&&!XP.done&&(XP.done=_$HY.done=!0),e.composedPath){const n=e.composedPath();s(n[0]);for(let e=0;e<n.length-2&&(t=n[e],i());e++){if(t._$host){t=t._$host,o();break}if(t.parentNode===a)break}}else o();s(r)}function BB(e,t,n,r,a){const s=zB(e);if(s){!n&&(n=[...e.childNodes]);let t=[];for(let e=0;e<n.length;e++){const r=n[e];8===r.nodeType&&"!$"===r.data.slice(0,2)?r.remove():t.push(r)}n=t}for(;"function"==typeof n;)n=n();if(t===n)return n;const i=typeof t,o=void 0!==r;if(e=o&&n[0]&&n[0].parentNode||e,"string"===i||"number"===i){if(s)return n;if("number"===i&&(t=t.toString())===n)return n;if(o){let a=n[0];a&&3===a.nodeType?a.data!==t&&(a.data=t):a=document.createTextNode(t),n=UB(e,n,r,a)}else n=""!==n&&"string"==typeof n?e.firstChild.data=t:e.textContent=t}else if(null==t||"boolean"===i){if(s)return n;n=UB(e,n,r)}else{if("function"===i)return dB((()=>{let a=t();for(;"function"==typeof a;)a=a();n=BB(e,a,n,r)})),()=>n;if(Array.isArray(t)){const i=[],u=n&&Array.isArray(n);if(WB(i,t,n,a))return dB((()=>n=BB(e,i,n,r,!0))),()=>n;if(s){if(!i.length)return n;if(void 0===r)return n=[...e.childNodes];let t=i[0];if(t.parentNode!==e)return n;const a=[t];for(;(t=t.nextSibling)!==r;)a.push(t);return n=a}if(0===i.length){if(n=UB(e,n,r),o)return n}else u?0===n.length?VB(e,i,r):function(e,t,n){let r=n.length,a=t.length,s=r,i=0,o=0,u=t[a-1].nextSibling,l=null;for(;i<a||o<s;)if(t[i]!==n[o]){for(;t[a-1]===n[s-1];)a--,s--;if(a===i){const t=s<r?o?n[o-1].nextSibling:n[s-o]:u;for(;o<s;)e.insertBefore(n[o++],t)}else if(s===o)for(;i<a;)l&&l.has(t[i])||t[i].remove(),i++;else if(t[i]===n[s-1]&&n[o]===t[a-1]){const r=t[--a].nextSibling;e.insertBefore(n[o++],t[i++].nextSibling),e.insertBefore(n[--s],r),t[a]=n[s]}else{if(!l){l=new Map;let e=o;for(;e<s;)l.set(n[e],e++)}const r=l.get(t[i]);if(null!=r)if(o<r&&r<s){let u,c=i,d=1;for(;++c<a&&c<s&&null!=(u=l.get(t[c]))&&u===r+d;)d++;if(d>r-o){const a=t[i];for(;o<r;)e.insertBefore(n[o++],a)}else e.replaceChild(n[o++],t[i++])}else i++;else t[i++].remove()}}else i++,o++}(e,n,i):(n&&UB(e),VB(e,i));n=i}else if(t.nodeType){if(s&&t.parentNode)return n=o?[t]:t;if(Array.isArray(n)){if(o)return n=UB(e,n,r,t);UB(e,n,null,t)}else null!=n&&""!==n&&e.firstChild?e.replaceChild(t,e.firstChild):e.appendChild(t);n=t}}return n}function WB(e,t,n,r){let a=!1;for(let s=0,i=t.length;s<i;s++){let i,o=t[s],u=n&&n[e.length];if(null==o||!0===o||!1===o);else if("object"==(i=typeof o)&&o.nodeType)e.push(o);else if(Array.isArray(o))a=WB(e,o,u)||a;else if("function"===i)if(r){for(;"function"==typeof o;)o=o();a=WB(e,Array.isArray(o)?o:[o],Array.isArray(u)?u:[u])||a}else e.push(o),a=!0;else{const t=String(o);u&&3===u.nodeType&&u.data===t?e.push(u):e.push(document.createTextNode(t))}}return a}function VB(e,t,n=null){for(let r=0,a=t.length;r<a;r++)e.insertBefore(t[r],n)}function UB(e,t,n,r){if(void 0===n)return e.textContent="";const a=r||document.createTextNode("");if(t.length){let r=!1;for(let s=t.length-1;s>=0;s--){const i=t[s];if(a!==i){const t=i.parentNode===e;r||s?t&&i.remove():t?e.replaceChild(a,i):e.insertBefore(a,n)}else r=!0}}else e.insertBefore(a,n);return[a]}Symbol();class GB{static getMaxCenteredRectangle(e,t,n,r,a){let s=n,i=s/a;return i>r&&(i=r,s=i*a),s>e&&(s=e,i=s/a),i>t&&(i=t,s=i*a),{width:s,height:i,x:(e-s)/2,y:(t-i)/2}}}const HB="Move a little closer!",jB="Gently tilt your head back a bit.",qB="Make sure your face is evenly lit.",KB="Keep your face straight and centered.",XB="Lighting",YB="Pose",ZB="Position",JB="Align your face inside the oval.",QB="Looks Good!",eW="Snap Again";var tW,nW=FB('<div class="osc-abs-center osc-counter"id=autoCapturePendingInterval>'),rW=FB('<div><div id=smart-capture-sdk><img class=osc-loader><video class=osc-video autoplay=true id=selfieVideo muted playsinline></video><canvas class=osc-canvas id=previewCanvas></canvas><canvas class=osc-canvas id=validationCanvas style=display:none;></canvas><div class="osc-blur osc-abs-center osc-guidance-ellipse"> </div><div id=overlay-border></div><div class="osc-error-messages osc-abs-center"id=errorMessages><div></div><div></div><div></div><div></div><div></div></div><div class=osc-indicators><label></label><label></label><label></label></div><div class=osc-actions><button class=osc-button type=button></button><button class=osc-button type=button>');function aW(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s,i,o=[],u=!0,l=!1;try{if(s=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=s.call(n)).done)&&(o.push(r.value),o.length!==t);u=!0);}catch(e){l=!0,a=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return o}}(e,t)||function(e,t){if(e){if("string"==typeof e)return sW(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?sW(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function sW(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function iW(e){return iW="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},iW(e)}function oW(){oW=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},s="function"==typeof Symbol?Symbol:{},i=s.iterator||"@@iterator",o=s.asyncIterator||"@@asyncIterator",u=s.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var s=t&&t.prototype instanceof y?t:y,i=Object.create(s.prototype),o=new E(r||[]);return a(i,"_invoke",{value:T(e,n,o)}),i}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var p="suspendedStart",h="suspendedYield",f="executing",m="completed",g={};function y(){}function b(){}function x(){}var w={};l(w,i,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(A([])));k&&k!==n&&r.call(k,i)&&(w=k);var I=x.prototype=y.prototype=Object.create(w);function N(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function n(a,s,i,o){var u=d(e[a],e,s);if("throw"!==u.type){var l=u.arg,c=l.value;return c&&"object"==iW(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){l.value=e,i(l)}),(function(e){return n("throw",e,i,o)}))}o(u.arg)}var s;a(this,"_invoke",{value:function(e,r){function a(){return new t((function(t,a){n(e,r,t,a)}))}return s=s?s.then(a,a):a()}})}function T(t,n,r){var a=p;return function(s,i){if(a===f)throw Error("Generator is already running");if(a===m){if("throw"===s)throw i;return{value:e,done:!0}}for(r.method=s,r.arg=i;;){var o=r.delegate;if(o){var u=C(o,r);if(u){if(u===g)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(a===p)throw a=m,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);a=f;var l=d(t,n,r);if("normal"===l.type){if(a=r.done?m:h,l.arg===g)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(a=m,r.method="throw",r.arg=l.arg)}}}function C(t,n){var r=n.method,a=t.iterator[r];if(a===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,C(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var s=d(a,t.iterator,n.arg);if("throw"===s.type)return n.method="throw",n.arg=s.arg,n.delegate=null,g;var i=s.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function $(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach($,this),this.reset(!0)}function A(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,s=function n(){for(;++a<t.length;)if(r.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=e,n.done=!0,n};return s.next=s}}throw new TypeError(iW(t)+" is not iterable")}return b.prototype=x,a(I,"constructor",{value:x,configurable:!0}),a(x,"constructor",{value:b,configurable:!0}),b.displayName=l(x,u,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,l(e,u,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},N(S.prototype),l(S.prototype,o,(function(){return this})),t.AsyncIterator=S,t.async=function(e,n,r,a,s){void 0===s&&(s=Promise);var i=new S(c(e,n,r,a),s);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(I),l(I,u,"Generator"),l(I,i,(function(){return this})),l(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=A,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(_),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(r,a){return o.type="throw",o.arg=t,n.next=r,a&&(n.method="next",n.arg=e),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],o=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),_(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;_(n)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:A(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function uW(e,t,n,r,a,s,i){try{var o=e[s](i),u=o.value}catch(e){return void n(e)}o.done?t(u):Promise.resolve(u).then(r,a)}function lW(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var s=e.apply(t,n);function i(e){uW(s,r,a,i,o,"next",e)}function o(e){uW(s,r,a,i,o,"throw",e)}i(void 0)}))}}function cW(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,pW(r.key),r)}}function dW(e,t,n){return(t=pW(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function pW(e){var t=function(e){if("object"!=iW(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=iW(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==iW(t)?t:t+""}var hW=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,n=[{key:"renderSmartCaptureUI",value:(r=lW(oW().mark((function t(n){var r;return oW().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!mW._){t.next=2;break}return t.abrupt("return");case 2:return fW.call(e),t.prev=4,t.next=7,navigator.mediaDevices.getUserMedia(gW._);case 7:r=t.sent,yW._=r,mW._=RB((function(){return rV._.call(e)}),n),iV._.call(e),t.next=19;break;case 13:return t.prev=13,t.t0=t.catch(4),oV._.notification(KP.CAMERA_NOT_FOUND),t.next=18,Promise.reject(KP.CAMERA_NOT_FOUND);case 18:return t.abrupt("return",t.sent);case 19:case"end":return t.stop()}}),t,null,[[4,13]])}))),function(e){return r.apply(this,arguments)})}],n&&cW(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n,r}();function fW(){ZW._.call(tW,3),HW._.call(tW,!1),UW._.call(tW,!1),WW._.call(tW,!1),qW._.call(tW,!0),AW._.call(tW,!1),PW._.call(tW,!1),FW._.call(tW,!1),OW._.call(tW,!1),tV._.call(tW,0),LW._.call(tW,!1),XW._.call(tW,!1),QW._.call(tW,!1),tW.capturedPic=null}tW=hW;var mW={_:void 0},gW={_:{audio:!1,video:{facingMode:"user",width:{min:1280},height:{min:720}}}},yW={_:void 0},bW={_:void 0},xW={_:0},wW={_:0},vW={_:0},kW={_:0},IW={_:void 0},NW={_:null},SW={_:void 0},TW={_:void 0},CW={_:null},$W={_:!1},_W={_:0},EW={_:void 0},AW={_:void 0},RW={_:void 0},FW={_:void 0},DW={_:void 0},OW={_:void 0},MW={_:void 0},LW={_:void 0},zW={_:void 0},PW={_:void 0},BW={_:void 0},WW={_:void 0},VW={_:void 0},UW={_:void 0},GW={_:void 0},HW={_:void 0},jW={_:void 0},qW={_:void 0},KW={_:void 0},XW={_:void 0},YW={_:void 0},ZW={_:void 0},JW={_:void 0},QW={_:void 0},eV={_:void 0},tV={_:void 0};dW(hW,"capturedPic",null),function(){var e=aW(cB(!0),2);EW._=e[0],AW._=e[1];var t=aW(cB(!0),2);RW._=t[0],FW._=t[1];var n=aW(cB(!0),2);DW._=n[0],OW._=n[1];var r=aW(cB(!1),2);MW._=r[0],LW._=r[1];var a=aW(cB(!1),2);zW._=a[0],PW._=a[1];var s=aW(cB(!1),2);BW._=s[0],WW._=s[1];var i=aW(cB(!1),2);VW._=i[0],UW._=i[1];var o=aW(cB(!1),2);GW._=o[0],HW._=o[1];var u=aW(cB(!0),2);jW._=u[0],qW._=u[1];var l=aW(cB(!1),2);KW._=l[0],XW._=l[1];var c=aW(cB(3),2);YW._=c[0],ZW._=c[1];var d=aW(cB(0),2);eV._=d[0],tV._=d[1];var p=aW(cB(!1),2);JW._=p[0],QW._=p[1]}();var nV,rV={_:function(){return function(){var e=rW(),t=e.firstChild,n=t.firstChild,r=n.nextSibling,a=r.nextSibling,s=a.nextSibling,i=s.nextSibling.nextSibling,o=i.nextSibling,u=o.firstChild,l=u.nextSibling,c=l.nextSibling,d=c.nextSibling,p=d.nextSibling,h=o.nextSibling,f=h.firstChild,m=f.nextSibling,g=m.nextSibling,y=h.nextSibling.firstChild,b=y.nextSibling,x=bW._;"function"==typeof x?MB(x,r):bW._=r;var w=IW._;"function"==typeof w?MB(w,a):IW._=a;var v,k,I=TW._;return"function"==typeof I?MB(I,s):TW._=s,LB(u,(function(){return HB})),LB(l,(function(){return jB})),LB(c,(function(){return qB})),LB(d,(function(){return KB})),LB(p,(function(){return JB})),LB(t,(v=EB,k={get when(){return KW._.call(tW)},get children(){var e=nW();return LB(e,(function(){return YW._.call(tW)||""})),e}},hB((()=>v(k||{})))),h),LB(f,(function(){return XB})),LB(m,(function(){return YB})),LB(g,(function(){return ZB})),OB(y,"click",aV._,!0),LB(y,(function(){return eW})),OB(b,"click",sV._,!0),LB(b,(function(){return QB})),dB((function(r){var a,s,o,h="".concat(JW._.call(tW)?"":"osc-veiled"," osc-smart-capture-container"),y="osc-smart-capture-sdk ".concat(0===eV._.call(tW)?"osc-capture-mode":1===eV._.call(tW)?"osc-review-mode":"osc-processing-mode"),b=S.ASSETS_BASE_URL+"loader.png",x="osc-border osc-abs-center osc-guidance-ellipse osc-overlay-border ".concat(jW._.call(tW)?"osc-valid":""),w="osc-div ".concat(MW._.call(tW)?"osc-active":""),v="osc-div ".concat(zW._.call(tW)?"osc-active":""),k="osc-div ".concat(BW._.call(tW)?"osc-active":""),I="osc-div ".concat(VW._.call(tW)?"osc-active":""),N="osc-div ".concat(GW._.call(tW)?"osc-active":""),T="osc-label ".concat(EW._.call(tW)?"osc-invalid":""),C="osc-label ".concat(RW._.call(tW)?"osc-invalid":""),$="osc-label ".concat(DW._.call(tW)?"osc-invalid":"");return h!==r.e&&DB(e,r.e=h),y!==r.t&&DB(t,r.t=y),b!==r.a&&(a=n,s="src",o=r.a=b,zB(a)||(null==o?a.removeAttribute(s):a.setAttribute(s,o))),x!==r.o&&DB(i,r.o=x),w!==r.i&&DB(u,r.i=w),v!==r.n&&DB(l,r.n=v),k!==r.s&&DB(c,r.s=k),I!==r.h&&DB(d,r.h=I),N!==r.r&&DB(p,r.r=N),T!==r.d&&DB(f,r.d=T),C!==r.l&&DB(m,r.l=C),$!==r.u&&DB(g,r.u=$),r}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0,r:void 0,d:void 0,l:void 0,u:void 0}),e}()}},aV={_:(nV=lW(oW().mark((function e(){var t;return oW().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return $W._=!1,tV._.call(tW,0),e.prev=2,e.next=5,navigator.mediaDevices.getUserMedia(gW._);case 5:t=e.sent,yW._=t,e.next=13;break;case 9:throw e.prev=9,e.t0=e.catch(2),oV._.notification(KP.CAMERA_NOT_FOUND),new Error(KP.CAMERA_NOT_FOUND);case 13:iV._.call(tW);case 14:case"end":return e.stop()}}),e,null,[[2,9]])}))),function(){return nV.apply(this,arguments)})},sV={_:function(){tV._.call(tW,2);var e=document.createElement("canvas");e.width=SW._.width,e.height=SW._.height,e.getContext("2d").drawImage(IW._,SW._.x,SW._.y,SW._.width,SW._.height,0,0,SW._.width,SW._.height),e.toBlob((function(e){tW.capturedPic=e,oV._.autoCaptureCallback(e)}))}},iV={_:function(){NW._&&NW._.clearRect(0,0,IW._.width,IW._.height),CW._&&CW._.clearRect(0,0,TW._.width,TW._.height),bW._.srcObject=yW._,bW._.play();var e=function(){var t=bW._,n=t.videoWidth,r=t.videoHeight,a=r/.7,s=n/.7;SW._=GB.getMaxCenteredRectangle(n,r,s,a,.75),vW._=210,kW._=4*vW._/3,xW._=(300-vW._)/2,wW._=(400-kW._)/2,NW._=IW._.getContext("2d"),IW._.width=n,IW._.height=r,NW._.translate(n,0),NW._.scale(-1,1),CW._=TW._.getContext("2d",{alpha:!1,desynchronized:!0,willReadFrequently:!0}),TW._.width=300,TW._.height=400,CW._.translate(300,0),CW._.scale(-1,1),bW._.removeEventListener("loadeddata",e),WP().then((function(){var e,t,n,r,a,s;e=bW._,t=IW._,n=TW._,r=SW._,a=function(e){return requestAnimationFrame((function(){qW._.call(tW,e.faceFound&&!e.far&&!e.close&&!e.noSufficientLite&&!e.misAligned&&!e.outsideGuide),$W._!==jW._.call(tW)&&($W._=jW._.call(tW),jW._.call(tW)?setTimeout((function(){jW._.call(tW)&&(ZW._.call(tW,3),XW._.call(tW,!0),_W._&&(clearInterval(_W._),_W._=0),_W._=setInterval((function(){jW._.call(tW)||(clearInterval(_W._),_W._=0),YW._.call(tW)>1&&(ZW._.call(tW,YW._.call(tW)-1),1===YW._.call(tW)&&setTimeout((function(){jW._.call(tW)&&(uV._.call(tW),XW._.call(tW,!1),tV._.call(tW,1)),clearInterval(_W._),_W._=0}),250))}),1e3))}),500):(clearInterval(_W._),_W._=0,ZW._.call(tW,3),XW._.call(tW,!1)));var t=!1,n=!1,r=!1,a=!1,s=!1,i=!1,o=!1,u=!1;e.faceFound?(e.far&&(a=!0,n=!0),e.close&&(s=!0,n=!0),e.misAligned&&(o=!0,r=!0),e.outsideGuide&&(u=!0,n=!0),e.noSufficientLite&&(i=!0,t=!0)):(u=!0,t=!0,r=!0,n=!0),LW._.call(tW,a),PW._.call(tW,s),WW._.call(tW,i),UW._.call(tW,o),HW._.call(tW,u),AW._.call(tW,t),FW._.call(tW,r),OW._.call(tW,n)}))},s={tx:xW._,ty:wW._,bx:xW._+vW._,by:wW._+kW._},OP=t,MP=t.getContext("2d"),DP=e,LP=r,EP=a,AP=s,FP=n.width,RP=n.height,_P=n.getContext("2d"),PP=!1,requestAnimationFrame(BP),QW._.call(tW,!0)}))};bW._.addEventListener("loadeddata",e)}},oV={_:{autoCaptureCallback:function(){},notification:function(){}}},uV={_:function(){jP(),yW._&&yW._.getTracks().forEach((function(e){return e.stop()})),yW._=null,clearInterval(_W._)}};dW(hW,"addEventListener",(function(e,t){switch(e){case"autoCapture":oV._.autoCaptureCallback=t;break;case"notification":oV._.notification=t}}));var lV={_:function(e){switch(e){case"autoCapture":oV._.autoCaptureCallback=function(){};break;case"notification":oV._.notification=function(){}}}};dW(hW,"stopSmartCaptureUI",(function(){var e;uV._.call(tW),mW._&&mW._.call(tW),null===(e=document.getElementById("otfs-smart-capture-cntr"))||void 0===e||e.remove(),mW._=void 0,fW.call(tW),lV._.call(tW)})),function(e,t=window.document){const n=t[AB]||(t[AB]=new Set);for(let r=0,a=e.length;r<a;r++){const a=e[r];n.has(a)||(n.add(a),t.addEventListener(a,PB))}}(["click"]);let cV=null;const dV=async e=>cV||(cV=new Promise((async(t,n)=>{if(!e)return n(KP.CONTAINER_MISSING);try{hW.addEventListener("autoCapture",(async e=>{try{pV(),t(e)}catch(e){pV(),n(e)}})),await Promise.all([WP(),hW.renderSmartCaptureUI(e)])}catch(e){cV=null,console.error(e),pV(),n(e)}})),cV),pV=()=>{cV=null,hW.stopSmartCaptureUI(),qP()},hV=()=>S.getClientInfo(),fV=()=>S.VERSION})(),r})()));